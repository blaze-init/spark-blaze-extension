// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

/**
 * Protobuf type {@code ballista.protobuf.WindowAggExecNode}
 */
public final class WindowAggExecNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ballista.protobuf.WindowAggExecNode)
    WindowAggExecNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WindowAggExecNode.newBuilder() to construct.
  private WindowAggExecNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WindowAggExecNode() {
    windowExpr_ = java.util.Collections.emptyList();
    windowExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new WindowAggExecNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WindowAggExecNode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.ballistacompute.protobuf.PhysicalPlanNode.Builder subBuilder = null;
            if (input_ != null) {
              subBuilder = input_.toBuilder();
            }
            input_ = input.readMessage(org.ballistacompute.protobuf.PhysicalPlanNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(input_);
              input_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              windowExpr_ = new java.util.ArrayList<org.ballistacompute.protobuf.PhysicalExprNode>();
              mutable_bitField0_ |= 0x00000001;
            }
            windowExpr_.add(
                input.readMessage(org.ballistacompute.protobuf.PhysicalExprNode.parser(), extensionRegistry));
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              windowExprName_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            windowExprName_.add(s);
            break;
          }
          case 34: {
            org.ballistacompute.protobuf.Schema.Builder subBuilder = null;
            if (inputSchema_ != null) {
              subBuilder = inputSchema_.toBuilder();
            }
            inputSchema_ = input.readMessage(org.ballistacompute.protobuf.Schema.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(inputSchema_);
              inputSchema_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        windowExpr_ = java.util.Collections.unmodifiableList(windowExpr_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        windowExprName_ = windowExprName_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_WindowAggExecNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_WindowAggExecNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.ballistacompute.protobuf.WindowAggExecNode.class, org.ballistacompute.protobuf.WindowAggExecNode.Builder.class);
  }

  public static final int INPUT_FIELD_NUMBER = 1;
  private org.ballistacompute.protobuf.PhysicalPlanNode input_;
  /**
   * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
   * @return Whether the input field is set.
   */
  @java.lang.Override
  public boolean hasInput() {
    return input_ != null;
  }
  /**
   * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
   * @return The input.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.PhysicalPlanNode getInput() {
    return input_ == null ? org.ballistacompute.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
  }
  /**
   * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.PhysicalPlanNodeOrBuilder getInputOrBuilder() {
    return getInput();
  }

  public static final int WINDOW_EXPR_FIELD_NUMBER = 2;
  private java.util.List<org.ballistacompute.protobuf.PhysicalExprNode> windowExpr_;
  /**
   * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
   */
  @java.lang.Override
  public java.util.List<org.ballistacompute.protobuf.PhysicalExprNode> getWindowExprList() {
    return windowExpr_;
  }
  /**
   * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.ballistacompute.protobuf.PhysicalExprNodeOrBuilder> 
      getWindowExprOrBuilderList() {
    return windowExpr_;
  }
  /**
   * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
   */
  @java.lang.Override
  public int getWindowExprCount() {
    return windowExpr_.size();
  }
  /**
   * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.PhysicalExprNode getWindowExpr(int index) {
    return windowExpr_.get(index);
  }
  /**
   * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.PhysicalExprNodeOrBuilder getWindowExprOrBuilder(
      int index) {
    return windowExpr_.get(index);
  }

  public static final int WINDOW_EXPR_NAME_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList windowExprName_;
  /**
   * <code>repeated string window_expr_name = 3;</code>
   * @return A list containing the windowExprName.
   */
  public com.google.protobuf.ProtocolStringList
      getWindowExprNameList() {
    return windowExprName_;
  }
  /**
   * <code>repeated string window_expr_name = 3;</code>
   * @return The count of windowExprName.
   */
  public int getWindowExprNameCount() {
    return windowExprName_.size();
  }
  /**
   * <code>repeated string window_expr_name = 3;</code>
   * @param index The index of the element to return.
   * @return The windowExprName at the given index.
   */
  public java.lang.String getWindowExprName(int index) {
    return windowExprName_.get(index);
  }
  /**
   * <code>repeated string window_expr_name = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the windowExprName at the given index.
   */
  public com.google.protobuf.ByteString
      getWindowExprNameBytes(int index) {
    return windowExprName_.getByteString(index);
  }

  public static final int INPUT_SCHEMA_FIELD_NUMBER = 4;
  private org.ballistacompute.protobuf.Schema inputSchema_;
  /**
   * <code>.ballista.protobuf.Schema input_schema = 4;</code>
   * @return Whether the inputSchema field is set.
   */
  @java.lang.Override
  public boolean hasInputSchema() {
    return inputSchema_ != null;
  }
  /**
   * <code>.ballista.protobuf.Schema input_schema = 4;</code>
   * @return The inputSchema.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.Schema getInputSchema() {
    return inputSchema_ == null ? org.ballistacompute.protobuf.Schema.getDefaultInstance() : inputSchema_;
  }
  /**
   * <code>.ballista.protobuf.Schema input_schema = 4;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SchemaOrBuilder getInputSchemaOrBuilder() {
    return getInputSchema();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (input_ != null) {
      output.writeMessage(1, getInput());
    }
    for (int i = 0; i < windowExpr_.size(); i++) {
      output.writeMessage(2, windowExpr_.get(i));
    }
    for (int i = 0; i < windowExprName_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, windowExprName_.getRaw(i));
    }
    if (inputSchema_ != null) {
      output.writeMessage(4, getInputSchema());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (input_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInput());
    }
    for (int i = 0; i < windowExpr_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, windowExpr_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < windowExprName_.size(); i++) {
        dataSize += computeStringSizeNoTag(windowExprName_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getWindowExprNameList().size();
    }
    if (inputSchema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getInputSchema());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.ballistacompute.protobuf.WindowAggExecNode)) {
      return super.equals(obj);
    }
    org.ballistacompute.protobuf.WindowAggExecNode other = (org.ballistacompute.protobuf.WindowAggExecNode) obj;

    if (hasInput() != other.hasInput()) return false;
    if (hasInput()) {
      if (!getInput()
          .equals(other.getInput())) return false;
    }
    if (!getWindowExprList()
        .equals(other.getWindowExprList())) return false;
    if (!getWindowExprNameList()
        .equals(other.getWindowExprNameList())) return false;
    if (hasInputSchema() != other.hasInputSchema()) return false;
    if (hasInputSchema()) {
      if (!getInputSchema()
          .equals(other.getInputSchema())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInput()) {
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
    }
    if (getWindowExprCount() > 0) {
      hash = (37 * hash) + WINDOW_EXPR_FIELD_NUMBER;
      hash = (53 * hash) + getWindowExprList().hashCode();
    }
    if (getWindowExprNameCount() > 0) {
      hash = (37 * hash) + WINDOW_EXPR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getWindowExprNameList().hashCode();
    }
    if (hasInputSchema()) {
      hash = (37 * hash) + INPUT_SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getInputSchema().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.WindowAggExecNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.ballistacompute.protobuf.WindowAggExecNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ballista.protobuf.WindowAggExecNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ballista.protobuf.WindowAggExecNode)
      org.ballistacompute.protobuf.WindowAggExecNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_WindowAggExecNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_WindowAggExecNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.ballistacompute.protobuf.WindowAggExecNode.class, org.ballistacompute.protobuf.WindowAggExecNode.Builder.class);
    }

    // Construct using org.ballistacompute.protobuf.WindowAggExecNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getWindowExprFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inputBuilder_ == null) {
        input_ = null;
      } else {
        input_ = null;
        inputBuilder_ = null;
      }
      if (windowExprBuilder_ == null) {
        windowExpr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        windowExprBuilder_.clear();
      }
      windowExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (inputSchemaBuilder_ == null) {
        inputSchema_ = null;
      } else {
        inputSchema_ = null;
        inputSchemaBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_WindowAggExecNode_descriptor;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.WindowAggExecNode getDefaultInstanceForType() {
      return org.ballistacompute.protobuf.WindowAggExecNode.getDefaultInstance();
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.WindowAggExecNode build() {
      org.ballistacompute.protobuf.WindowAggExecNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.WindowAggExecNode buildPartial() {
      org.ballistacompute.protobuf.WindowAggExecNode result = new org.ballistacompute.protobuf.WindowAggExecNode(this);
      int from_bitField0_ = bitField0_;
      if (inputBuilder_ == null) {
        result.input_ = input_;
      } else {
        result.input_ = inputBuilder_.build();
      }
      if (windowExprBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          windowExpr_ = java.util.Collections.unmodifiableList(windowExpr_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.windowExpr_ = windowExpr_;
      } else {
        result.windowExpr_ = windowExprBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        windowExprName_ = windowExprName_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.windowExprName_ = windowExprName_;
      if (inputSchemaBuilder_ == null) {
        result.inputSchema_ = inputSchema_;
      } else {
        result.inputSchema_ = inputSchemaBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.ballistacompute.protobuf.WindowAggExecNode) {
        return mergeFrom((org.ballistacompute.protobuf.WindowAggExecNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.ballistacompute.protobuf.WindowAggExecNode other) {
      if (other == org.ballistacompute.protobuf.WindowAggExecNode.getDefaultInstance()) return this;
      if (other.hasInput()) {
        mergeInput(other.getInput());
      }
      if (windowExprBuilder_ == null) {
        if (!other.windowExpr_.isEmpty()) {
          if (windowExpr_.isEmpty()) {
            windowExpr_ = other.windowExpr_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWindowExprIsMutable();
            windowExpr_.addAll(other.windowExpr_);
          }
          onChanged();
        }
      } else {
        if (!other.windowExpr_.isEmpty()) {
          if (windowExprBuilder_.isEmpty()) {
            windowExprBuilder_.dispose();
            windowExprBuilder_ = null;
            windowExpr_ = other.windowExpr_;
            bitField0_ = (bitField0_ & ~0x00000001);
            windowExprBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWindowExprFieldBuilder() : null;
          } else {
            windowExprBuilder_.addAllMessages(other.windowExpr_);
          }
        }
      }
      if (!other.windowExprName_.isEmpty()) {
        if (windowExprName_.isEmpty()) {
          windowExprName_ = other.windowExprName_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureWindowExprNameIsMutable();
          windowExprName_.addAll(other.windowExprName_);
        }
        onChanged();
      }
      if (other.hasInputSchema()) {
        mergeInputSchema(other.getInputSchema());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.ballistacompute.protobuf.WindowAggExecNode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.ballistacompute.protobuf.WindowAggExecNode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private org.ballistacompute.protobuf.PhysicalPlanNode input_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.PhysicalPlanNode, org.ballistacompute.protobuf.PhysicalPlanNode.Builder, org.ballistacompute.protobuf.PhysicalPlanNodeOrBuilder> inputBuilder_;
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     * @return Whether the input field is set.
     */
    public boolean hasInput() {
      return inputBuilder_ != null || input_ != null;
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     * @return The input.
     */
    public org.ballistacompute.protobuf.PhysicalPlanNode getInput() {
      if (inputBuilder_ == null) {
        return input_ == null ? org.ballistacompute.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
      } else {
        return inputBuilder_.getMessage();
      }
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder setInput(org.ballistacompute.protobuf.PhysicalPlanNode value) {
      if (inputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        input_ = value;
        onChanged();
      } else {
        inputBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder setInput(
        org.ballistacompute.protobuf.PhysicalPlanNode.Builder builderForValue) {
      if (inputBuilder_ == null) {
        input_ = builderForValue.build();
        onChanged();
      } else {
        inputBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder mergeInput(org.ballistacompute.protobuf.PhysicalPlanNode value) {
      if (inputBuilder_ == null) {
        if (input_ != null) {
          input_ =
            org.ballistacompute.protobuf.PhysicalPlanNode.newBuilder(input_).mergeFrom(value).buildPartial();
        } else {
          input_ = value;
        }
        onChanged();
      } else {
        inputBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder clearInput() {
      if (inputBuilder_ == null) {
        input_ = null;
        onChanged();
      } else {
        input_ = null;
        inputBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public org.ballistacompute.protobuf.PhysicalPlanNode.Builder getInputBuilder() {
      
      onChanged();
      return getInputFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public org.ballistacompute.protobuf.PhysicalPlanNodeOrBuilder getInputOrBuilder() {
      if (inputBuilder_ != null) {
        return inputBuilder_.getMessageOrBuilder();
      } else {
        return input_ == null ?
            org.ballistacompute.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
      }
    }
    /**
     * <code>.ballista.protobuf.PhysicalPlanNode input = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.PhysicalPlanNode, org.ballistacompute.protobuf.PhysicalPlanNode.Builder, org.ballistacompute.protobuf.PhysicalPlanNodeOrBuilder> 
        getInputFieldBuilder() {
      if (inputBuilder_ == null) {
        inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.PhysicalPlanNode, org.ballistacompute.protobuf.PhysicalPlanNode.Builder, org.ballistacompute.protobuf.PhysicalPlanNodeOrBuilder>(
                getInput(),
                getParentForChildren(),
                isClean());
        input_ = null;
      }
      return inputBuilder_;
    }

    private java.util.List<org.ballistacompute.protobuf.PhysicalExprNode> windowExpr_ =
      java.util.Collections.emptyList();
    private void ensureWindowExprIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        windowExpr_ = new java.util.ArrayList<org.ballistacompute.protobuf.PhysicalExprNode>(windowExpr_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.ballistacompute.protobuf.PhysicalExprNode, org.ballistacompute.protobuf.PhysicalExprNode.Builder, org.ballistacompute.protobuf.PhysicalExprNodeOrBuilder> windowExprBuilder_;

    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public java.util.List<org.ballistacompute.protobuf.PhysicalExprNode> getWindowExprList() {
      if (windowExprBuilder_ == null) {
        return java.util.Collections.unmodifiableList(windowExpr_);
      } else {
        return windowExprBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public int getWindowExprCount() {
      if (windowExprBuilder_ == null) {
        return windowExpr_.size();
      } else {
        return windowExprBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public org.ballistacompute.protobuf.PhysicalExprNode getWindowExpr(int index) {
      if (windowExprBuilder_ == null) {
        return windowExpr_.get(index);
      } else {
        return windowExprBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder setWindowExpr(
        int index, org.ballistacompute.protobuf.PhysicalExprNode value) {
      if (windowExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowExprIsMutable();
        windowExpr_.set(index, value);
        onChanged();
      } else {
        windowExprBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder setWindowExpr(
        int index, org.ballistacompute.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (windowExprBuilder_ == null) {
        ensureWindowExprIsMutable();
        windowExpr_.set(index, builderForValue.build());
        onChanged();
      } else {
        windowExprBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder addWindowExpr(org.ballistacompute.protobuf.PhysicalExprNode value) {
      if (windowExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowExprIsMutable();
        windowExpr_.add(value);
        onChanged();
      } else {
        windowExprBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder addWindowExpr(
        int index, org.ballistacompute.protobuf.PhysicalExprNode value) {
      if (windowExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowExprIsMutable();
        windowExpr_.add(index, value);
        onChanged();
      } else {
        windowExprBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder addWindowExpr(
        org.ballistacompute.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (windowExprBuilder_ == null) {
        ensureWindowExprIsMutable();
        windowExpr_.add(builderForValue.build());
        onChanged();
      } else {
        windowExprBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder addWindowExpr(
        int index, org.ballistacompute.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (windowExprBuilder_ == null) {
        ensureWindowExprIsMutable();
        windowExpr_.add(index, builderForValue.build());
        onChanged();
      } else {
        windowExprBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder addAllWindowExpr(
        java.lang.Iterable<? extends org.ballistacompute.protobuf.PhysicalExprNode> values) {
      if (windowExprBuilder_ == null) {
        ensureWindowExprIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, windowExpr_);
        onChanged();
      } else {
        windowExprBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder clearWindowExpr() {
      if (windowExprBuilder_ == null) {
        windowExpr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        windowExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public Builder removeWindowExpr(int index) {
      if (windowExprBuilder_ == null) {
        ensureWindowExprIsMutable();
        windowExpr_.remove(index);
        onChanged();
      } else {
        windowExprBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public org.ballistacompute.protobuf.PhysicalExprNode.Builder getWindowExprBuilder(
        int index) {
      return getWindowExprFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public org.ballistacompute.protobuf.PhysicalExprNodeOrBuilder getWindowExprOrBuilder(
        int index) {
      if (windowExprBuilder_ == null) {
        return windowExpr_.get(index);  } else {
        return windowExprBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public java.util.List<? extends org.ballistacompute.protobuf.PhysicalExprNodeOrBuilder> 
         getWindowExprOrBuilderList() {
      if (windowExprBuilder_ != null) {
        return windowExprBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(windowExpr_);
      }
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public org.ballistacompute.protobuf.PhysicalExprNode.Builder addWindowExprBuilder() {
      return getWindowExprFieldBuilder().addBuilder(
          org.ballistacompute.protobuf.PhysicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public org.ballistacompute.protobuf.PhysicalExprNode.Builder addWindowExprBuilder(
        int index) {
      return getWindowExprFieldBuilder().addBuilder(
          index, org.ballistacompute.protobuf.PhysicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .ballista.protobuf.PhysicalExprNode window_expr = 2;</code>
     */
    public java.util.List<org.ballistacompute.protobuf.PhysicalExprNode.Builder> 
         getWindowExprBuilderList() {
      return getWindowExprFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.ballistacompute.protobuf.PhysicalExprNode, org.ballistacompute.protobuf.PhysicalExprNode.Builder, org.ballistacompute.protobuf.PhysicalExprNodeOrBuilder> 
        getWindowExprFieldBuilder() {
      if (windowExprBuilder_ == null) {
        windowExprBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.ballistacompute.protobuf.PhysicalExprNode, org.ballistacompute.protobuf.PhysicalExprNode.Builder, org.ballistacompute.protobuf.PhysicalExprNodeOrBuilder>(
                windowExpr_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        windowExpr_ = null;
      }
      return windowExprBuilder_;
    }

    private com.google.protobuf.LazyStringList windowExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureWindowExprNameIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        windowExprName_ = new com.google.protobuf.LazyStringArrayList(windowExprName_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @return A list containing the windowExprName.
     */
    public com.google.protobuf.ProtocolStringList
        getWindowExprNameList() {
      return windowExprName_.getUnmodifiableView();
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @return The count of windowExprName.
     */
    public int getWindowExprNameCount() {
      return windowExprName_.size();
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @param index The index of the element to return.
     * @return The windowExprName at the given index.
     */
    public java.lang.String getWindowExprName(int index) {
      return windowExprName_.get(index);
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the windowExprName at the given index.
     */
    public com.google.protobuf.ByteString
        getWindowExprNameBytes(int index) {
      return windowExprName_.getByteString(index);
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @param index The index to set the value at.
     * @param value The windowExprName to set.
     * @return This builder for chaining.
     */
    public Builder setWindowExprName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureWindowExprNameIsMutable();
      windowExprName_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @param value The windowExprName to add.
     * @return This builder for chaining.
     */
    public Builder addWindowExprName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureWindowExprNameIsMutable();
      windowExprName_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @param values The windowExprName to add.
     * @return This builder for chaining.
     */
    public Builder addAllWindowExprName(
        java.lang.Iterable<java.lang.String> values) {
      ensureWindowExprNameIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, windowExprName_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearWindowExprName() {
      windowExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string window_expr_name = 3;</code>
     * @param value The bytes of the windowExprName to add.
     * @return This builder for chaining.
     */
    public Builder addWindowExprNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureWindowExprNameIsMutable();
      windowExprName_.add(value);
      onChanged();
      return this;
    }

    private org.ballistacompute.protobuf.Schema inputSchema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Schema, org.ballistacompute.protobuf.Schema.Builder, org.ballistacompute.protobuf.SchemaOrBuilder> inputSchemaBuilder_;
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     * @return Whether the inputSchema field is set.
     */
    public boolean hasInputSchema() {
      return inputSchemaBuilder_ != null || inputSchema_ != null;
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     * @return The inputSchema.
     */
    public org.ballistacompute.protobuf.Schema getInputSchema() {
      if (inputSchemaBuilder_ == null) {
        return inputSchema_ == null ? org.ballistacompute.protobuf.Schema.getDefaultInstance() : inputSchema_;
      } else {
        return inputSchemaBuilder_.getMessage();
      }
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     */
    public Builder setInputSchema(org.ballistacompute.protobuf.Schema value) {
      if (inputSchemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inputSchema_ = value;
        onChanged();
      } else {
        inputSchemaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     */
    public Builder setInputSchema(
        org.ballistacompute.protobuf.Schema.Builder builderForValue) {
      if (inputSchemaBuilder_ == null) {
        inputSchema_ = builderForValue.build();
        onChanged();
      } else {
        inputSchemaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     */
    public Builder mergeInputSchema(org.ballistacompute.protobuf.Schema value) {
      if (inputSchemaBuilder_ == null) {
        if (inputSchema_ != null) {
          inputSchema_ =
            org.ballistacompute.protobuf.Schema.newBuilder(inputSchema_).mergeFrom(value).buildPartial();
        } else {
          inputSchema_ = value;
        }
        onChanged();
      } else {
        inputSchemaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     */
    public Builder clearInputSchema() {
      if (inputSchemaBuilder_ == null) {
        inputSchema_ = null;
        onChanged();
      } else {
        inputSchema_ = null;
        inputSchemaBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     */
    public org.ballistacompute.protobuf.Schema.Builder getInputSchemaBuilder() {
      
      onChanged();
      return getInputSchemaFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     */
    public org.ballistacompute.protobuf.SchemaOrBuilder getInputSchemaOrBuilder() {
      if (inputSchemaBuilder_ != null) {
        return inputSchemaBuilder_.getMessageOrBuilder();
      } else {
        return inputSchema_ == null ?
            org.ballistacompute.protobuf.Schema.getDefaultInstance() : inputSchema_;
      }
    }
    /**
     * <code>.ballista.protobuf.Schema input_schema = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Schema, org.ballistacompute.protobuf.Schema.Builder, org.ballistacompute.protobuf.SchemaOrBuilder> 
        getInputSchemaFieldBuilder() {
      if (inputSchemaBuilder_ == null) {
        inputSchemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.Schema, org.ballistacompute.protobuf.Schema.Builder, org.ballistacompute.protobuf.SchemaOrBuilder>(
                getInputSchema(),
                getParentForChildren(),
                isClean());
        inputSchema_ = null;
      }
      return inputSchemaBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ballista.protobuf.WindowAggExecNode)
  }

  // @@protoc_insertion_point(class_scope:ballista.protobuf.WindowAggExecNode)
  private static final org.ballistacompute.protobuf.WindowAggExecNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.ballistacompute.protobuf.WindowAggExecNode();
  }

  public static org.ballistacompute.protobuf.WindowAggExecNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WindowAggExecNode>
      PARSER = new com.google.protobuf.AbstractParser<WindowAggExecNode>() {
    @java.lang.Override
    public WindowAggExecNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new WindowAggExecNode(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WindowAggExecNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WindowAggExecNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.ballistacompute.protobuf.WindowAggExecNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

