// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

/**
 * <pre>
 * LogicalPlan is a nested type
 * </pre>
 *
 * Protobuf type {@code ballista.protobuf.LogicalPlanNode}
 */
public final class LogicalPlanNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ballista.protobuf.LogicalPlanNode)
    LogicalPlanNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LogicalPlanNode.newBuilder() to construct.
  private LogicalPlanNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LogicalPlanNode() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LogicalPlanNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LogicalPlanNode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.ballistacompute.protobuf.ListingTableScanNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 1) {
              subBuilder = ((org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.ListingTableScanNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 1;
            break;
          }
          case 26: {
            org.ballistacompute.protobuf.ProjectionNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 3) {
              subBuilder = ((org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.ProjectionNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 3;
            break;
          }
          case 34: {
            org.ballistacompute.protobuf.SelectionNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 4) {
              subBuilder = ((org.ballistacompute.protobuf.SelectionNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.SelectionNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.SelectionNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 4;
            break;
          }
          case 42: {
            org.ballistacompute.protobuf.LimitNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 5) {
              subBuilder = ((org.ballistacompute.protobuf.LimitNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.LimitNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.LimitNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 5;
            break;
          }
          case 50: {
            org.ballistacompute.protobuf.AggregateNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 6) {
              subBuilder = ((org.ballistacompute.protobuf.AggregateNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.AggregateNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.AggregateNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 6;
            break;
          }
          case 58: {
            org.ballistacompute.protobuf.JoinNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 7) {
              subBuilder = ((org.ballistacompute.protobuf.JoinNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.JoinNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.JoinNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 7;
            break;
          }
          case 66: {
            org.ballistacompute.protobuf.SortNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 8) {
              subBuilder = ((org.ballistacompute.protobuf.SortNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.SortNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.SortNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 8;
            break;
          }
          case 74: {
            org.ballistacompute.protobuf.RepartitionNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 9) {
              subBuilder = ((org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.RepartitionNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 9;
            break;
          }
          case 82: {
            org.ballistacompute.protobuf.EmptyRelationNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 10) {
              subBuilder = ((org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.EmptyRelationNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 10;
            break;
          }
          case 90: {
            org.ballistacompute.protobuf.CreateExternalTableNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 11) {
              subBuilder = ((org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.CreateExternalTableNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 11;
            break;
          }
          case 98: {
            org.ballistacompute.protobuf.ExplainNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 12) {
              subBuilder = ((org.ballistacompute.protobuf.ExplainNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.ExplainNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.ExplainNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 12;
            break;
          }
          case 106: {
            org.ballistacompute.protobuf.WindowNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 13) {
              subBuilder = ((org.ballistacompute.protobuf.WindowNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.WindowNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.WindowNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 13;
            break;
          }
          case 114: {
            org.ballistacompute.protobuf.AnalyzeNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 14) {
              subBuilder = ((org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.AnalyzeNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 14;
            break;
          }
          case 122: {
            org.ballistacompute.protobuf.CrossJoinNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 15) {
              subBuilder = ((org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.CrossJoinNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 15;
            break;
          }
          case 130: {
            org.ballistacompute.protobuf.ValuesNode.Builder subBuilder = null;
            if (logicalPlanTypeCase_ == 16) {
              subBuilder = ((org.ballistacompute.protobuf.ValuesNode) logicalPlanType_).toBuilder();
            }
            logicalPlanType_ =
                input.readMessage(org.ballistacompute.protobuf.ValuesNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.ValuesNode) logicalPlanType_);
              logicalPlanType_ = subBuilder.buildPartial();
            }
            logicalPlanTypeCase_ = 16;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalPlanNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalPlanNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.ballistacompute.protobuf.LogicalPlanNode.class, org.ballistacompute.protobuf.LogicalPlanNode.Builder.class);
  }

  private int logicalPlanTypeCase_ = 0;
  private java.lang.Object logicalPlanType_;
  public enum LogicalPlanTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    LISTING_SCAN(1),
    PROJECTION(3),
    SELECTION(4),
    LIMIT(5),
    AGGREGATE(6),
    JOIN(7),
    SORT(8),
    REPARTITION(9),
    EMPTY_RELATION(10),
    CREATE_EXTERNAL_TABLE(11),
    EXPLAIN(12),
    WINDOW(13),
    ANALYZE(14),
    CROSS_JOIN(15),
    VALUES(16),
    LOGICALPLANTYPE_NOT_SET(0);
    private final int value;
    private LogicalPlanTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogicalPlanTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static LogicalPlanTypeCase forNumber(int value) {
      switch (value) {
        case 1: return LISTING_SCAN;
        case 3: return PROJECTION;
        case 4: return SELECTION;
        case 5: return LIMIT;
        case 6: return AGGREGATE;
        case 7: return JOIN;
        case 8: return SORT;
        case 9: return REPARTITION;
        case 10: return EMPTY_RELATION;
        case 11: return CREATE_EXTERNAL_TABLE;
        case 12: return EXPLAIN;
        case 13: return WINDOW;
        case 14: return ANALYZE;
        case 15: return CROSS_JOIN;
        case 16: return VALUES;
        case 0: return LOGICALPLANTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public LogicalPlanTypeCase
  getLogicalPlanTypeCase() {
    return LogicalPlanTypeCase.forNumber(
        logicalPlanTypeCase_);
  }

  public static final int LISTING_SCAN_FIELD_NUMBER = 1;
  /**
   * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
   * @return Whether the listingScan field is set.
   */
  @java.lang.Override
  public boolean hasListingScan() {
    return logicalPlanTypeCase_ == 1;
  }
  /**
   * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
   * @return The listingScan.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ListingTableScanNode getListingScan() {
    if (logicalPlanTypeCase_ == 1) {
       return (org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ListingTableScanNodeOrBuilder getListingScanOrBuilder() {
    if (logicalPlanTypeCase_ == 1) {
       return (org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance();
  }

  public static final int PROJECTION_FIELD_NUMBER = 3;
  /**
   * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
   * @return Whether the projection field is set.
   */
  @java.lang.Override
  public boolean hasProjection() {
    return logicalPlanTypeCase_ == 3;
  }
  /**
   * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
   * @return The projection.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ProjectionNode getProjection() {
    if (logicalPlanTypeCase_ == 3) {
       return (org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ProjectionNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ProjectionNodeOrBuilder getProjectionOrBuilder() {
    if (logicalPlanTypeCase_ == 3) {
       return (org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ProjectionNode.getDefaultInstance();
  }

  public static final int SELECTION_FIELD_NUMBER = 4;
  /**
   * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
   * @return Whether the selection field is set.
   */
  @java.lang.Override
  public boolean hasSelection() {
    return logicalPlanTypeCase_ == 4;
  }
  /**
   * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
   * @return The selection.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SelectionNode getSelection() {
    if (logicalPlanTypeCase_ == 4) {
       return (org.ballistacompute.protobuf.SelectionNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.SelectionNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SelectionNodeOrBuilder getSelectionOrBuilder() {
    if (logicalPlanTypeCase_ == 4) {
       return (org.ballistacompute.protobuf.SelectionNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.SelectionNode.getDefaultInstance();
  }

  public static final int LIMIT_FIELD_NUMBER = 5;
  /**
   * <code>.ballista.protobuf.LimitNode limit = 5;</code>
   * @return Whether the limit field is set.
   */
  @java.lang.Override
  public boolean hasLimit() {
    return logicalPlanTypeCase_ == 5;
  }
  /**
   * <code>.ballista.protobuf.LimitNode limit = 5;</code>
   * @return The limit.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.LimitNode getLimit() {
    if (logicalPlanTypeCase_ == 5) {
       return (org.ballistacompute.protobuf.LimitNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.LimitNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.LimitNode limit = 5;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.LimitNodeOrBuilder getLimitOrBuilder() {
    if (logicalPlanTypeCase_ == 5) {
       return (org.ballistacompute.protobuf.LimitNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.LimitNode.getDefaultInstance();
  }

  public static final int AGGREGATE_FIELD_NUMBER = 6;
  /**
   * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
   * @return Whether the aggregate field is set.
   */
  @java.lang.Override
  public boolean hasAggregate() {
    return logicalPlanTypeCase_ == 6;
  }
  /**
   * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
   * @return The aggregate.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AggregateNode getAggregate() {
    if (logicalPlanTypeCase_ == 6) {
       return (org.ballistacompute.protobuf.AggregateNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.AggregateNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AggregateNodeOrBuilder getAggregateOrBuilder() {
    if (logicalPlanTypeCase_ == 6) {
       return (org.ballistacompute.protobuf.AggregateNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.AggregateNode.getDefaultInstance();
  }

  public static final int JOIN_FIELD_NUMBER = 7;
  /**
   * <code>.ballista.protobuf.JoinNode join = 7;</code>
   * @return Whether the join field is set.
   */
  @java.lang.Override
  public boolean hasJoin() {
    return logicalPlanTypeCase_ == 7;
  }
  /**
   * <code>.ballista.protobuf.JoinNode join = 7;</code>
   * @return The join.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.JoinNode getJoin() {
    if (logicalPlanTypeCase_ == 7) {
       return (org.ballistacompute.protobuf.JoinNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.JoinNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.JoinNode join = 7;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.JoinNodeOrBuilder getJoinOrBuilder() {
    if (logicalPlanTypeCase_ == 7) {
       return (org.ballistacompute.protobuf.JoinNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.JoinNode.getDefaultInstance();
  }

  public static final int SORT_FIELD_NUMBER = 8;
  /**
   * <code>.ballista.protobuf.SortNode sort = 8;</code>
   * @return Whether the sort field is set.
   */
  @java.lang.Override
  public boolean hasSort() {
    return logicalPlanTypeCase_ == 8;
  }
  /**
   * <code>.ballista.protobuf.SortNode sort = 8;</code>
   * @return The sort.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SortNode getSort() {
    if (logicalPlanTypeCase_ == 8) {
       return (org.ballistacompute.protobuf.SortNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.SortNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.SortNode sort = 8;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SortNodeOrBuilder getSortOrBuilder() {
    if (logicalPlanTypeCase_ == 8) {
       return (org.ballistacompute.protobuf.SortNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.SortNode.getDefaultInstance();
  }

  public static final int REPARTITION_FIELD_NUMBER = 9;
  /**
   * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
   * @return Whether the repartition field is set.
   */
  @java.lang.Override
  public boolean hasRepartition() {
    return logicalPlanTypeCase_ == 9;
  }
  /**
   * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
   * @return The repartition.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.RepartitionNode getRepartition() {
    if (logicalPlanTypeCase_ == 9) {
       return (org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.RepartitionNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.RepartitionNodeOrBuilder getRepartitionOrBuilder() {
    if (logicalPlanTypeCase_ == 9) {
       return (org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.RepartitionNode.getDefaultInstance();
  }

  public static final int EMPTY_RELATION_FIELD_NUMBER = 10;
  /**
   * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
   * @return Whether the emptyRelation field is set.
   */
  @java.lang.Override
  public boolean hasEmptyRelation() {
    return logicalPlanTypeCase_ == 10;
  }
  /**
   * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
   * @return The emptyRelation.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.EmptyRelationNode getEmptyRelation() {
    if (logicalPlanTypeCase_ == 10) {
       return (org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.EmptyRelationNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.EmptyRelationNodeOrBuilder getEmptyRelationOrBuilder() {
    if (logicalPlanTypeCase_ == 10) {
       return (org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.EmptyRelationNode.getDefaultInstance();
  }

  public static final int CREATE_EXTERNAL_TABLE_FIELD_NUMBER = 11;
  /**
   * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
   * @return Whether the createExternalTable field is set.
   */
  @java.lang.Override
  public boolean hasCreateExternalTable() {
    return logicalPlanTypeCase_ == 11;
  }
  /**
   * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
   * @return The createExternalTable.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CreateExternalTableNode getCreateExternalTable() {
    if (logicalPlanTypeCase_ == 11) {
       return (org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.CreateExternalTableNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CreateExternalTableNodeOrBuilder getCreateExternalTableOrBuilder() {
    if (logicalPlanTypeCase_ == 11) {
       return (org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.CreateExternalTableNode.getDefaultInstance();
  }

  public static final int EXPLAIN_FIELD_NUMBER = 12;
  /**
   * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
   * @return Whether the explain field is set.
   */
  @java.lang.Override
  public boolean hasExplain() {
    return logicalPlanTypeCase_ == 12;
  }
  /**
   * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
   * @return The explain.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ExplainNode getExplain() {
    if (logicalPlanTypeCase_ == 12) {
       return (org.ballistacompute.protobuf.ExplainNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ExplainNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ExplainNodeOrBuilder getExplainOrBuilder() {
    if (logicalPlanTypeCase_ == 12) {
       return (org.ballistacompute.protobuf.ExplainNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ExplainNode.getDefaultInstance();
  }

  public static final int WINDOW_FIELD_NUMBER = 13;
  /**
   * <code>.ballista.protobuf.WindowNode window = 13;</code>
   * @return Whether the window field is set.
   */
  @java.lang.Override
  public boolean hasWindow() {
    return logicalPlanTypeCase_ == 13;
  }
  /**
   * <code>.ballista.protobuf.WindowNode window = 13;</code>
   * @return The window.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.WindowNode getWindow() {
    if (logicalPlanTypeCase_ == 13) {
       return (org.ballistacompute.protobuf.WindowNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.WindowNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.WindowNode window = 13;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.WindowNodeOrBuilder getWindowOrBuilder() {
    if (logicalPlanTypeCase_ == 13) {
       return (org.ballistacompute.protobuf.WindowNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.WindowNode.getDefaultInstance();
  }

  public static final int ANALYZE_FIELD_NUMBER = 14;
  /**
   * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
   * @return Whether the analyze field is set.
   */
  @java.lang.Override
  public boolean hasAnalyze() {
    return logicalPlanTypeCase_ == 14;
  }
  /**
   * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
   * @return The analyze.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AnalyzeNode getAnalyze() {
    if (logicalPlanTypeCase_ == 14) {
       return (org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.AnalyzeNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AnalyzeNodeOrBuilder getAnalyzeOrBuilder() {
    if (logicalPlanTypeCase_ == 14) {
       return (org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.AnalyzeNode.getDefaultInstance();
  }

  public static final int CROSS_JOIN_FIELD_NUMBER = 15;
  /**
   * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
   * @return Whether the crossJoin field is set.
   */
  @java.lang.Override
  public boolean hasCrossJoin() {
    return logicalPlanTypeCase_ == 15;
  }
  /**
   * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
   * @return The crossJoin.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CrossJoinNode getCrossJoin() {
    if (logicalPlanTypeCase_ == 15) {
       return (org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.CrossJoinNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CrossJoinNodeOrBuilder getCrossJoinOrBuilder() {
    if (logicalPlanTypeCase_ == 15) {
       return (org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.CrossJoinNode.getDefaultInstance();
  }

  public static final int VALUES_FIELD_NUMBER = 16;
  /**
   * <code>.ballista.protobuf.ValuesNode values = 16;</code>
   * @return Whether the values field is set.
   */
  @java.lang.Override
  public boolean hasValues() {
    return logicalPlanTypeCase_ == 16;
  }
  /**
   * <code>.ballista.protobuf.ValuesNode values = 16;</code>
   * @return The values.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ValuesNode getValues() {
    if (logicalPlanTypeCase_ == 16) {
       return (org.ballistacompute.protobuf.ValuesNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ValuesNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.ValuesNode values = 16;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ValuesNodeOrBuilder getValuesOrBuilder() {
    if (logicalPlanTypeCase_ == 16) {
       return (org.ballistacompute.protobuf.ValuesNode) logicalPlanType_;
    }
    return org.ballistacompute.protobuf.ValuesNode.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (logicalPlanTypeCase_ == 1) {
      output.writeMessage(1, (org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 3) {
      output.writeMessage(3, (org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 4) {
      output.writeMessage(4, (org.ballistacompute.protobuf.SelectionNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 5) {
      output.writeMessage(5, (org.ballistacompute.protobuf.LimitNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 6) {
      output.writeMessage(6, (org.ballistacompute.protobuf.AggregateNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 7) {
      output.writeMessage(7, (org.ballistacompute.protobuf.JoinNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 8) {
      output.writeMessage(8, (org.ballistacompute.protobuf.SortNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 9) {
      output.writeMessage(9, (org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 10) {
      output.writeMessage(10, (org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 11) {
      output.writeMessage(11, (org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 12) {
      output.writeMessage(12, (org.ballistacompute.protobuf.ExplainNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 13) {
      output.writeMessage(13, (org.ballistacompute.protobuf.WindowNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 14) {
      output.writeMessage(14, (org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 15) {
      output.writeMessage(15, (org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 16) {
      output.writeMessage(16, (org.ballistacompute.protobuf.ValuesNode) logicalPlanType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (logicalPlanTypeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.ballistacompute.protobuf.SelectionNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.ballistacompute.protobuf.LimitNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.ballistacompute.protobuf.AggregateNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (org.ballistacompute.protobuf.JoinNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (org.ballistacompute.protobuf.SortNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (org.ballistacompute.protobuf.ExplainNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (org.ballistacompute.protobuf.WindowNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, (org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_);
    }
    if (logicalPlanTypeCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, (org.ballistacompute.protobuf.ValuesNode) logicalPlanType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.ballistacompute.protobuf.LogicalPlanNode)) {
      return super.equals(obj);
    }
    org.ballistacompute.protobuf.LogicalPlanNode other = (org.ballistacompute.protobuf.LogicalPlanNode) obj;

    if (!getLogicalPlanTypeCase().equals(other.getLogicalPlanTypeCase())) return false;
    switch (logicalPlanTypeCase_) {
      case 1:
        if (!getListingScan()
            .equals(other.getListingScan())) return false;
        break;
      case 3:
        if (!getProjection()
            .equals(other.getProjection())) return false;
        break;
      case 4:
        if (!getSelection()
            .equals(other.getSelection())) return false;
        break;
      case 5:
        if (!getLimit()
            .equals(other.getLimit())) return false;
        break;
      case 6:
        if (!getAggregate()
            .equals(other.getAggregate())) return false;
        break;
      case 7:
        if (!getJoin()
            .equals(other.getJoin())) return false;
        break;
      case 8:
        if (!getSort()
            .equals(other.getSort())) return false;
        break;
      case 9:
        if (!getRepartition()
            .equals(other.getRepartition())) return false;
        break;
      case 10:
        if (!getEmptyRelation()
            .equals(other.getEmptyRelation())) return false;
        break;
      case 11:
        if (!getCreateExternalTable()
            .equals(other.getCreateExternalTable())) return false;
        break;
      case 12:
        if (!getExplain()
            .equals(other.getExplain())) return false;
        break;
      case 13:
        if (!getWindow()
            .equals(other.getWindow())) return false;
        break;
      case 14:
        if (!getAnalyze()
            .equals(other.getAnalyze())) return false;
        break;
      case 15:
        if (!getCrossJoin()
            .equals(other.getCrossJoin())) return false;
        break;
      case 16:
        if (!getValues()
            .equals(other.getValues())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (logicalPlanTypeCase_) {
      case 1:
        hash = (37 * hash) + LISTING_SCAN_FIELD_NUMBER;
        hash = (53 * hash) + getListingScan().hashCode();
        break;
      case 3:
        hash = (37 * hash) + PROJECTION_FIELD_NUMBER;
        hash = (53 * hash) + getProjection().hashCode();
        break;
      case 4:
        hash = (37 * hash) + SELECTION_FIELD_NUMBER;
        hash = (53 * hash) + getSelection().hashCode();
        break;
      case 5:
        hash = (37 * hash) + LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getLimit().hashCode();
        break;
      case 6:
        hash = (37 * hash) + AGGREGATE_FIELD_NUMBER;
        hash = (53 * hash) + getAggregate().hashCode();
        break;
      case 7:
        hash = (37 * hash) + JOIN_FIELD_NUMBER;
        hash = (53 * hash) + getJoin().hashCode();
        break;
      case 8:
        hash = (37 * hash) + SORT_FIELD_NUMBER;
        hash = (53 * hash) + getSort().hashCode();
        break;
      case 9:
        hash = (37 * hash) + REPARTITION_FIELD_NUMBER;
        hash = (53 * hash) + getRepartition().hashCode();
        break;
      case 10:
        hash = (37 * hash) + EMPTY_RELATION_FIELD_NUMBER;
        hash = (53 * hash) + getEmptyRelation().hashCode();
        break;
      case 11:
        hash = (37 * hash) + CREATE_EXTERNAL_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getCreateExternalTable().hashCode();
        break;
      case 12:
        hash = (37 * hash) + EXPLAIN_FIELD_NUMBER;
        hash = (53 * hash) + getExplain().hashCode();
        break;
      case 13:
        hash = (37 * hash) + WINDOW_FIELD_NUMBER;
        hash = (53 * hash) + getWindow().hashCode();
        break;
      case 14:
        hash = (37 * hash) + ANALYZE_FIELD_NUMBER;
        hash = (53 * hash) + getAnalyze().hashCode();
        break;
      case 15:
        hash = (37 * hash) + CROSS_JOIN_FIELD_NUMBER;
        hash = (53 * hash) + getCrossJoin().hashCode();
        break;
      case 16:
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValues().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.LogicalPlanNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.ballistacompute.protobuf.LogicalPlanNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * LogicalPlan is a nested type
   * </pre>
   *
   * Protobuf type {@code ballista.protobuf.LogicalPlanNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ballista.protobuf.LogicalPlanNode)
      org.ballistacompute.protobuf.LogicalPlanNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalPlanNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalPlanNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.ballistacompute.protobuf.LogicalPlanNode.class, org.ballistacompute.protobuf.LogicalPlanNode.Builder.class);
    }

    // Construct using org.ballistacompute.protobuf.LogicalPlanNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      logicalPlanTypeCase_ = 0;
      logicalPlanType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalPlanNode_descriptor;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.LogicalPlanNode getDefaultInstanceForType() {
      return org.ballistacompute.protobuf.LogicalPlanNode.getDefaultInstance();
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.LogicalPlanNode build() {
      org.ballistacompute.protobuf.LogicalPlanNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.LogicalPlanNode buildPartial() {
      org.ballistacompute.protobuf.LogicalPlanNode result = new org.ballistacompute.protobuf.LogicalPlanNode(this);
      if (logicalPlanTypeCase_ == 1) {
        if (listingScanBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = listingScanBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 3) {
        if (projectionBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = projectionBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 4) {
        if (selectionBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = selectionBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 5) {
        if (limitBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = limitBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 6) {
        if (aggregateBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = aggregateBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 7) {
        if (joinBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = joinBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 8) {
        if (sortBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = sortBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 9) {
        if (repartitionBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = repartitionBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 10) {
        if (emptyRelationBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = emptyRelationBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 11) {
        if (createExternalTableBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = createExternalTableBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 12) {
        if (explainBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = explainBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 13) {
        if (windowBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = windowBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 14) {
        if (analyzeBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = analyzeBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 15) {
        if (crossJoinBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = crossJoinBuilder_.build();
        }
      }
      if (logicalPlanTypeCase_ == 16) {
        if (valuesBuilder_ == null) {
          result.logicalPlanType_ = logicalPlanType_;
        } else {
          result.logicalPlanType_ = valuesBuilder_.build();
        }
      }
      result.logicalPlanTypeCase_ = logicalPlanTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.ballistacompute.protobuf.LogicalPlanNode) {
        return mergeFrom((org.ballistacompute.protobuf.LogicalPlanNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.ballistacompute.protobuf.LogicalPlanNode other) {
      if (other == org.ballistacompute.protobuf.LogicalPlanNode.getDefaultInstance()) return this;
      switch (other.getLogicalPlanTypeCase()) {
        case LISTING_SCAN: {
          mergeListingScan(other.getListingScan());
          break;
        }
        case PROJECTION: {
          mergeProjection(other.getProjection());
          break;
        }
        case SELECTION: {
          mergeSelection(other.getSelection());
          break;
        }
        case LIMIT: {
          mergeLimit(other.getLimit());
          break;
        }
        case AGGREGATE: {
          mergeAggregate(other.getAggregate());
          break;
        }
        case JOIN: {
          mergeJoin(other.getJoin());
          break;
        }
        case SORT: {
          mergeSort(other.getSort());
          break;
        }
        case REPARTITION: {
          mergeRepartition(other.getRepartition());
          break;
        }
        case EMPTY_RELATION: {
          mergeEmptyRelation(other.getEmptyRelation());
          break;
        }
        case CREATE_EXTERNAL_TABLE: {
          mergeCreateExternalTable(other.getCreateExternalTable());
          break;
        }
        case EXPLAIN: {
          mergeExplain(other.getExplain());
          break;
        }
        case WINDOW: {
          mergeWindow(other.getWindow());
          break;
        }
        case ANALYZE: {
          mergeAnalyze(other.getAnalyze());
          break;
        }
        case CROSS_JOIN: {
          mergeCrossJoin(other.getCrossJoin());
          break;
        }
        case VALUES: {
          mergeValues(other.getValues());
          break;
        }
        case LOGICALPLANTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.ballistacompute.protobuf.LogicalPlanNode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.ballistacompute.protobuf.LogicalPlanNode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int logicalPlanTypeCase_ = 0;
    private java.lang.Object logicalPlanType_;
    public LogicalPlanTypeCase
        getLogicalPlanTypeCase() {
      return LogicalPlanTypeCase.forNumber(
          logicalPlanTypeCase_);
    }

    public Builder clearLogicalPlanType() {
      logicalPlanTypeCase_ = 0;
      logicalPlanType_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ListingTableScanNode, org.ballistacompute.protobuf.ListingTableScanNode.Builder, org.ballistacompute.protobuf.ListingTableScanNodeOrBuilder> listingScanBuilder_;
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     * @return Whether the listingScan field is set.
     */
    @java.lang.Override
    public boolean hasListingScan() {
      return logicalPlanTypeCase_ == 1;
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     * @return The listingScan.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ListingTableScanNode getListingScan() {
      if (listingScanBuilder_ == null) {
        if (logicalPlanTypeCase_ == 1) {
          return (org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 1) {
          return listingScanBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     */
    public Builder setListingScan(org.ballistacompute.protobuf.ListingTableScanNode value) {
      if (listingScanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        listingScanBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 1;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     */
    public Builder setListingScan(
        org.ballistacompute.protobuf.ListingTableScanNode.Builder builderForValue) {
      if (listingScanBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        listingScanBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 1;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     */
    public Builder mergeListingScan(org.ballistacompute.protobuf.ListingTableScanNode value) {
      if (listingScanBuilder_ == null) {
        if (logicalPlanTypeCase_ == 1 &&
            logicalPlanType_ != org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.ListingTableScanNode.newBuilder((org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 1) {
          listingScanBuilder_.mergeFrom(value);
        }
        listingScanBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 1;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     */
    public Builder clearListingScan() {
      if (listingScanBuilder_ == null) {
        if (logicalPlanTypeCase_ == 1) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 1) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        listingScanBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     */
    public org.ballistacompute.protobuf.ListingTableScanNode.Builder getListingScanBuilder() {
      return getListingScanFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ListingTableScanNodeOrBuilder getListingScanOrBuilder() {
      if ((logicalPlanTypeCase_ == 1) && (listingScanBuilder_ != null)) {
        return listingScanBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 1) {
          return (org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ListingTableScanNode, org.ballistacompute.protobuf.ListingTableScanNode.Builder, org.ballistacompute.protobuf.ListingTableScanNodeOrBuilder> 
        getListingScanFieldBuilder() {
      if (listingScanBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 1)) {
          logicalPlanType_ = org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance();
        }
        listingScanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ListingTableScanNode, org.ballistacompute.protobuf.ListingTableScanNode.Builder, org.ballistacompute.protobuf.ListingTableScanNodeOrBuilder>(
                (org.ballistacompute.protobuf.ListingTableScanNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 1;
      onChanged();;
      return listingScanBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ProjectionNode, org.ballistacompute.protobuf.ProjectionNode.Builder, org.ballistacompute.protobuf.ProjectionNodeOrBuilder> projectionBuilder_;
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     * @return Whether the projection field is set.
     */
    @java.lang.Override
    public boolean hasProjection() {
      return logicalPlanTypeCase_ == 3;
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     * @return The projection.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ProjectionNode getProjection() {
      if (projectionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 3) {
          return (org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ProjectionNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 3) {
          return projectionBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.ProjectionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     */
    public Builder setProjection(org.ballistacompute.protobuf.ProjectionNode value) {
      if (projectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        projectionBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     */
    public Builder setProjection(
        org.ballistacompute.protobuf.ProjectionNode.Builder builderForValue) {
      if (projectionBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        projectionBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     */
    public Builder mergeProjection(org.ballistacompute.protobuf.ProjectionNode value) {
      if (projectionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 3 &&
            logicalPlanType_ != org.ballistacompute.protobuf.ProjectionNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.ProjectionNode.newBuilder((org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 3) {
          projectionBuilder_.mergeFrom(value);
        }
        projectionBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     */
    public Builder clearProjection() {
      if (projectionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 3) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 3) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        projectionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     */
    public org.ballistacompute.protobuf.ProjectionNode.Builder getProjectionBuilder() {
      return getProjectionFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ProjectionNodeOrBuilder getProjectionOrBuilder() {
      if ((logicalPlanTypeCase_ == 3) && (projectionBuilder_ != null)) {
        return projectionBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 3) {
          return (org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ProjectionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ProjectionNode, org.ballistacompute.protobuf.ProjectionNode.Builder, org.ballistacompute.protobuf.ProjectionNodeOrBuilder> 
        getProjectionFieldBuilder() {
      if (projectionBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 3)) {
          logicalPlanType_ = org.ballistacompute.protobuf.ProjectionNode.getDefaultInstance();
        }
        projectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ProjectionNode, org.ballistacompute.protobuf.ProjectionNode.Builder, org.ballistacompute.protobuf.ProjectionNodeOrBuilder>(
                (org.ballistacompute.protobuf.ProjectionNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 3;
      onChanged();;
      return projectionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.SelectionNode, org.ballistacompute.protobuf.SelectionNode.Builder, org.ballistacompute.protobuf.SelectionNodeOrBuilder> selectionBuilder_;
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     * @return Whether the selection field is set.
     */
    @java.lang.Override
    public boolean hasSelection() {
      return logicalPlanTypeCase_ == 4;
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     * @return The selection.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.SelectionNode getSelection() {
      if (selectionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 4) {
          return (org.ballistacompute.protobuf.SelectionNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.SelectionNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 4) {
          return selectionBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.SelectionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     */
    public Builder setSelection(org.ballistacompute.protobuf.SelectionNode value) {
      if (selectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        selectionBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     */
    public Builder setSelection(
        org.ballistacompute.protobuf.SelectionNode.Builder builderForValue) {
      if (selectionBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        selectionBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     */
    public Builder mergeSelection(org.ballistacompute.protobuf.SelectionNode value) {
      if (selectionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 4 &&
            logicalPlanType_ != org.ballistacompute.protobuf.SelectionNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.SelectionNode.newBuilder((org.ballistacompute.protobuf.SelectionNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 4) {
          selectionBuilder_.mergeFrom(value);
        }
        selectionBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     */
    public Builder clearSelection() {
      if (selectionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 4) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 4) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        selectionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     */
    public org.ballistacompute.protobuf.SelectionNode.Builder getSelectionBuilder() {
      return getSelectionFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.SelectionNodeOrBuilder getSelectionOrBuilder() {
      if ((logicalPlanTypeCase_ == 4) && (selectionBuilder_ != null)) {
        return selectionBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 4) {
          return (org.ballistacompute.protobuf.SelectionNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.SelectionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.SelectionNode, org.ballistacompute.protobuf.SelectionNode.Builder, org.ballistacompute.protobuf.SelectionNodeOrBuilder> 
        getSelectionFieldBuilder() {
      if (selectionBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 4)) {
          logicalPlanType_ = org.ballistacompute.protobuf.SelectionNode.getDefaultInstance();
        }
        selectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.SelectionNode, org.ballistacompute.protobuf.SelectionNode.Builder, org.ballistacompute.protobuf.SelectionNodeOrBuilder>(
                (org.ballistacompute.protobuf.SelectionNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 4;
      onChanged();;
      return selectionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.LimitNode, org.ballistacompute.protobuf.LimitNode.Builder, org.ballistacompute.protobuf.LimitNodeOrBuilder> limitBuilder_;
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     * @return Whether the limit field is set.
     */
    @java.lang.Override
    public boolean hasLimit() {
      return logicalPlanTypeCase_ == 5;
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     * @return The limit.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.LimitNode getLimit() {
      if (limitBuilder_ == null) {
        if (logicalPlanTypeCase_ == 5) {
          return (org.ballistacompute.protobuf.LimitNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.LimitNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 5) {
          return limitBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.LimitNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     */
    public Builder setLimit(org.ballistacompute.protobuf.LimitNode value) {
      if (limitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        limitBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     */
    public Builder setLimit(
        org.ballistacompute.protobuf.LimitNode.Builder builderForValue) {
      if (limitBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        limitBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     */
    public Builder mergeLimit(org.ballistacompute.protobuf.LimitNode value) {
      if (limitBuilder_ == null) {
        if (logicalPlanTypeCase_ == 5 &&
            logicalPlanType_ != org.ballistacompute.protobuf.LimitNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.LimitNode.newBuilder((org.ballistacompute.protobuf.LimitNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 5) {
          limitBuilder_.mergeFrom(value);
        }
        limitBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     */
    public Builder clearLimit() {
      if (limitBuilder_ == null) {
        if (logicalPlanTypeCase_ == 5) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 5) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        limitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     */
    public org.ballistacompute.protobuf.LimitNode.Builder getLimitBuilder() {
      return getLimitFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.LimitNodeOrBuilder getLimitOrBuilder() {
      if ((logicalPlanTypeCase_ == 5) && (limitBuilder_ != null)) {
        return limitBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 5) {
          return (org.ballistacompute.protobuf.LimitNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.LimitNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.LimitNode limit = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.LimitNode, org.ballistacompute.protobuf.LimitNode.Builder, org.ballistacompute.protobuf.LimitNodeOrBuilder> 
        getLimitFieldBuilder() {
      if (limitBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 5)) {
          logicalPlanType_ = org.ballistacompute.protobuf.LimitNode.getDefaultInstance();
        }
        limitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.LimitNode, org.ballistacompute.protobuf.LimitNode.Builder, org.ballistacompute.protobuf.LimitNodeOrBuilder>(
                (org.ballistacompute.protobuf.LimitNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 5;
      onChanged();;
      return limitBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AggregateNode, org.ballistacompute.protobuf.AggregateNode.Builder, org.ballistacompute.protobuf.AggregateNodeOrBuilder> aggregateBuilder_;
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     * @return Whether the aggregate field is set.
     */
    @java.lang.Override
    public boolean hasAggregate() {
      return logicalPlanTypeCase_ == 6;
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     * @return The aggregate.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AggregateNode getAggregate() {
      if (aggregateBuilder_ == null) {
        if (logicalPlanTypeCase_ == 6) {
          return (org.ballistacompute.protobuf.AggregateNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.AggregateNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 6) {
          return aggregateBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.AggregateNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     */
    public Builder setAggregate(org.ballistacompute.protobuf.AggregateNode value) {
      if (aggregateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        aggregateBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     */
    public Builder setAggregate(
        org.ballistacompute.protobuf.AggregateNode.Builder builderForValue) {
      if (aggregateBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        aggregateBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     */
    public Builder mergeAggregate(org.ballistacompute.protobuf.AggregateNode value) {
      if (aggregateBuilder_ == null) {
        if (logicalPlanTypeCase_ == 6 &&
            logicalPlanType_ != org.ballistacompute.protobuf.AggregateNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.AggregateNode.newBuilder((org.ballistacompute.protobuf.AggregateNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 6) {
          aggregateBuilder_.mergeFrom(value);
        }
        aggregateBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     */
    public Builder clearAggregate() {
      if (aggregateBuilder_ == null) {
        if (logicalPlanTypeCase_ == 6) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 6) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        aggregateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     */
    public org.ballistacompute.protobuf.AggregateNode.Builder getAggregateBuilder() {
      return getAggregateFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AggregateNodeOrBuilder getAggregateOrBuilder() {
      if ((logicalPlanTypeCase_ == 6) && (aggregateBuilder_ != null)) {
        return aggregateBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 6) {
          return (org.ballistacompute.protobuf.AggregateNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.AggregateNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AggregateNode, org.ballistacompute.protobuf.AggregateNode.Builder, org.ballistacompute.protobuf.AggregateNodeOrBuilder> 
        getAggregateFieldBuilder() {
      if (aggregateBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 6)) {
          logicalPlanType_ = org.ballistacompute.protobuf.AggregateNode.getDefaultInstance();
        }
        aggregateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.AggregateNode, org.ballistacompute.protobuf.AggregateNode.Builder, org.ballistacompute.protobuf.AggregateNodeOrBuilder>(
                (org.ballistacompute.protobuf.AggregateNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 6;
      onChanged();;
      return aggregateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.JoinNode, org.ballistacompute.protobuf.JoinNode.Builder, org.ballistacompute.protobuf.JoinNodeOrBuilder> joinBuilder_;
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     * @return Whether the join field is set.
     */
    @java.lang.Override
    public boolean hasJoin() {
      return logicalPlanTypeCase_ == 7;
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     * @return The join.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.JoinNode getJoin() {
      if (joinBuilder_ == null) {
        if (logicalPlanTypeCase_ == 7) {
          return (org.ballistacompute.protobuf.JoinNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.JoinNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 7) {
          return joinBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.JoinNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     */
    public Builder setJoin(org.ballistacompute.protobuf.JoinNode value) {
      if (joinBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        joinBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     */
    public Builder setJoin(
        org.ballistacompute.protobuf.JoinNode.Builder builderForValue) {
      if (joinBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        joinBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     */
    public Builder mergeJoin(org.ballistacompute.protobuf.JoinNode value) {
      if (joinBuilder_ == null) {
        if (logicalPlanTypeCase_ == 7 &&
            logicalPlanType_ != org.ballistacompute.protobuf.JoinNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.JoinNode.newBuilder((org.ballistacompute.protobuf.JoinNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 7) {
          joinBuilder_.mergeFrom(value);
        }
        joinBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     */
    public Builder clearJoin() {
      if (joinBuilder_ == null) {
        if (logicalPlanTypeCase_ == 7) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 7) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        joinBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     */
    public org.ballistacompute.protobuf.JoinNode.Builder getJoinBuilder() {
      return getJoinFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.JoinNodeOrBuilder getJoinOrBuilder() {
      if ((logicalPlanTypeCase_ == 7) && (joinBuilder_ != null)) {
        return joinBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 7) {
          return (org.ballistacompute.protobuf.JoinNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.JoinNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.JoinNode join = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.JoinNode, org.ballistacompute.protobuf.JoinNode.Builder, org.ballistacompute.protobuf.JoinNodeOrBuilder> 
        getJoinFieldBuilder() {
      if (joinBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 7)) {
          logicalPlanType_ = org.ballistacompute.protobuf.JoinNode.getDefaultInstance();
        }
        joinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.JoinNode, org.ballistacompute.protobuf.JoinNode.Builder, org.ballistacompute.protobuf.JoinNodeOrBuilder>(
                (org.ballistacompute.protobuf.JoinNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 7;
      onChanged();;
      return joinBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.SortNode, org.ballistacompute.protobuf.SortNode.Builder, org.ballistacompute.protobuf.SortNodeOrBuilder> sortBuilder_;
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     * @return Whether the sort field is set.
     */
    @java.lang.Override
    public boolean hasSort() {
      return logicalPlanTypeCase_ == 8;
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     * @return The sort.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.SortNode getSort() {
      if (sortBuilder_ == null) {
        if (logicalPlanTypeCase_ == 8) {
          return (org.ballistacompute.protobuf.SortNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.SortNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 8) {
          return sortBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.SortNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     */
    public Builder setSort(org.ballistacompute.protobuf.SortNode value) {
      if (sortBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        sortBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     */
    public Builder setSort(
        org.ballistacompute.protobuf.SortNode.Builder builderForValue) {
      if (sortBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        sortBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     */
    public Builder mergeSort(org.ballistacompute.protobuf.SortNode value) {
      if (sortBuilder_ == null) {
        if (logicalPlanTypeCase_ == 8 &&
            logicalPlanType_ != org.ballistacompute.protobuf.SortNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.SortNode.newBuilder((org.ballistacompute.protobuf.SortNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 8) {
          sortBuilder_.mergeFrom(value);
        }
        sortBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     */
    public Builder clearSort() {
      if (sortBuilder_ == null) {
        if (logicalPlanTypeCase_ == 8) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 8) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        sortBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     */
    public org.ballistacompute.protobuf.SortNode.Builder getSortBuilder() {
      return getSortFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.SortNodeOrBuilder getSortOrBuilder() {
      if ((logicalPlanTypeCase_ == 8) && (sortBuilder_ != null)) {
        return sortBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 8) {
          return (org.ballistacompute.protobuf.SortNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.SortNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.SortNode sort = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.SortNode, org.ballistacompute.protobuf.SortNode.Builder, org.ballistacompute.protobuf.SortNodeOrBuilder> 
        getSortFieldBuilder() {
      if (sortBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 8)) {
          logicalPlanType_ = org.ballistacompute.protobuf.SortNode.getDefaultInstance();
        }
        sortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.SortNode, org.ballistacompute.protobuf.SortNode.Builder, org.ballistacompute.protobuf.SortNodeOrBuilder>(
                (org.ballistacompute.protobuf.SortNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 8;
      onChanged();;
      return sortBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.RepartitionNode, org.ballistacompute.protobuf.RepartitionNode.Builder, org.ballistacompute.protobuf.RepartitionNodeOrBuilder> repartitionBuilder_;
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     * @return Whether the repartition field is set.
     */
    @java.lang.Override
    public boolean hasRepartition() {
      return logicalPlanTypeCase_ == 9;
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     * @return The repartition.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.RepartitionNode getRepartition() {
      if (repartitionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 9) {
          return (org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.RepartitionNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 9) {
          return repartitionBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.RepartitionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     */
    public Builder setRepartition(org.ballistacompute.protobuf.RepartitionNode value) {
      if (repartitionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        repartitionBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     */
    public Builder setRepartition(
        org.ballistacompute.protobuf.RepartitionNode.Builder builderForValue) {
      if (repartitionBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        repartitionBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     */
    public Builder mergeRepartition(org.ballistacompute.protobuf.RepartitionNode value) {
      if (repartitionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 9 &&
            logicalPlanType_ != org.ballistacompute.protobuf.RepartitionNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.RepartitionNode.newBuilder((org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 9) {
          repartitionBuilder_.mergeFrom(value);
        }
        repartitionBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     */
    public Builder clearRepartition() {
      if (repartitionBuilder_ == null) {
        if (logicalPlanTypeCase_ == 9) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 9) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        repartitionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     */
    public org.ballistacompute.protobuf.RepartitionNode.Builder getRepartitionBuilder() {
      return getRepartitionFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.RepartitionNodeOrBuilder getRepartitionOrBuilder() {
      if ((logicalPlanTypeCase_ == 9) && (repartitionBuilder_ != null)) {
        return repartitionBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 9) {
          return (org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.RepartitionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.RepartitionNode, org.ballistacompute.protobuf.RepartitionNode.Builder, org.ballistacompute.protobuf.RepartitionNodeOrBuilder> 
        getRepartitionFieldBuilder() {
      if (repartitionBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 9)) {
          logicalPlanType_ = org.ballistacompute.protobuf.RepartitionNode.getDefaultInstance();
        }
        repartitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.RepartitionNode, org.ballistacompute.protobuf.RepartitionNode.Builder, org.ballistacompute.protobuf.RepartitionNodeOrBuilder>(
                (org.ballistacompute.protobuf.RepartitionNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 9;
      onChanged();;
      return repartitionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.EmptyRelationNode, org.ballistacompute.protobuf.EmptyRelationNode.Builder, org.ballistacompute.protobuf.EmptyRelationNodeOrBuilder> emptyRelationBuilder_;
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     * @return Whether the emptyRelation field is set.
     */
    @java.lang.Override
    public boolean hasEmptyRelation() {
      return logicalPlanTypeCase_ == 10;
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     * @return The emptyRelation.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.EmptyRelationNode getEmptyRelation() {
      if (emptyRelationBuilder_ == null) {
        if (logicalPlanTypeCase_ == 10) {
          return (org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.EmptyRelationNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 10) {
          return emptyRelationBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.EmptyRelationNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     */
    public Builder setEmptyRelation(org.ballistacompute.protobuf.EmptyRelationNode value) {
      if (emptyRelationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        emptyRelationBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     */
    public Builder setEmptyRelation(
        org.ballistacompute.protobuf.EmptyRelationNode.Builder builderForValue) {
      if (emptyRelationBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        emptyRelationBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     */
    public Builder mergeEmptyRelation(org.ballistacompute.protobuf.EmptyRelationNode value) {
      if (emptyRelationBuilder_ == null) {
        if (logicalPlanTypeCase_ == 10 &&
            logicalPlanType_ != org.ballistacompute.protobuf.EmptyRelationNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.EmptyRelationNode.newBuilder((org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 10) {
          emptyRelationBuilder_.mergeFrom(value);
        }
        emptyRelationBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     */
    public Builder clearEmptyRelation() {
      if (emptyRelationBuilder_ == null) {
        if (logicalPlanTypeCase_ == 10) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 10) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        emptyRelationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     */
    public org.ballistacompute.protobuf.EmptyRelationNode.Builder getEmptyRelationBuilder() {
      return getEmptyRelationFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.EmptyRelationNodeOrBuilder getEmptyRelationOrBuilder() {
      if ((logicalPlanTypeCase_ == 10) && (emptyRelationBuilder_ != null)) {
        return emptyRelationBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 10) {
          return (org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.EmptyRelationNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.EmptyRelationNode, org.ballistacompute.protobuf.EmptyRelationNode.Builder, org.ballistacompute.protobuf.EmptyRelationNodeOrBuilder> 
        getEmptyRelationFieldBuilder() {
      if (emptyRelationBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 10)) {
          logicalPlanType_ = org.ballistacompute.protobuf.EmptyRelationNode.getDefaultInstance();
        }
        emptyRelationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.EmptyRelationNode, org.ballistacompute.protobuf.EmptyRelationNode.Builder, org.ballistacompute.protobuf.EmptyRelationNodeOrBuilder>(
                (org.ballistacompute.protobuf.EmptyRelationNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 10;
      onChanged();;
      return emptyRelationBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CreateExternalTableNode, org.ballistacompute.protobuf.CreateExternalTableNode.Builder, org.ballistacompute.protobuf.CreateExternalTableNodeOrBuilder> createExternalTableBuilder_;
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     * @return Whether the createExternalTable field is set.
     */
    @java.lang.Override
    public boolean hasCreateExternalTable() {
      return logicalPlanTypeCase_ == 11;
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     * @return The createExternalTable.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CreateExternalTableNode getCreateExternalTable() {
      if (createExternalTableBuilder_ == null) {
        if (logicalPlanTypeCase_ == 11) {
          return (org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.CreateExternalTableNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 11) {
          return createExternalTableBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.CreateExternalTableNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     */
    public Builder setCreateExternalTable(org.ballistacompute.protobuf.CreateExternalTableNode value) {
      if (createExternalTableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        createExternalTableBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     */
    public Builder setCreateExternalTable(
        org.ballistacompute.protobuf.CreateExternalTableNode.Builder builderForValue) {
      if (createExternalTableBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        createExternalTableBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     */
    public Builder mergeCreateExternalTable(org.ballistacompute.protobuf.CreateExternalTableNode value) {
      if (createExternalTableBuilder_ == null) {
        if (logicalPlanTypeCase_ == 11 &&
            logicalPlanType_ != org.ballistacompute.protobuf.CreateExternalTableNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.CreateExternalTableNode.newBuilder((org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 11) {
          createExternalTableBuilder_.mergeFrom(value);
        }
        createExternalTableBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     */
    public Builder clearCreateExternalTable() {
      if (createExternalTableBuilder_ == null) {
        if (logicalPlanTypeCase_ == 11) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 11) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        createExternalTableBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     */
    public org.ballistacompute.protobuf.CreateExternalTableNode.Builder getCreateExternalTableBuilder() {
      return getCreateExternalTableFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CreateExternalTableNodeOrBuilder getCreateExternalTableOrBuilder() {
      if ((logicalPlanTypeCase_ == 11) && (createExternalTableBuilder_ != null)) {
        return createExternalTableBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 11) {
          return (org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.CreateExternalTableNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CreateExternalTableNode, org.ballistacompute.protobuf.CreateExternalTableNode.Builder, org.ballistacompute.protobuf.CreateExternalTableNodeOrBuilder> 
        getCreateExternalTableFieldBuilder() {
      if (createExternalTableBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 11)) {
          logicalPlanType_ = org.ballistacompute.protobuf.CreateExternalTableNode.getDefaultInstance();
        }
        createExternalTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.CreateExternalTableNode, org.ballistacompute.protobuf.CreateExternalTableNode.Builder, org.ballistacompute.protobuf.CreateExternalTableNodeOrBuilder>(
                (org.ballistacompute.protobuf.CreateExternalTableNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 11;
      onChanged();;
      return createExternalTableBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ExplainNode, org.ballistacompute.protobuf.ExplainNode.Builder, org.ballistacompute.protobuf.ExplainNodeOrBuilder> explainBuilder_;
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     * @return Whether the explain field is set.
     */
    @java.lang.Override
    public boolean hasExplain() {
      return logicalPlanTypeCase_ == 12;
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     * @return The explain.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ExplainNode getExplain() {
      if (explainBuilder_ == null) {
        if (logicalPlanTypeCase_ == 12) {
          return (org.ballistacompute.protobuf.ExplainNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ExplainNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 12) {
          return explainBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.ExplainNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     */
    public Builder setExplain(org.ballistacompute.protobuf.ExplainNode value) {
      if (explainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        explainBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     */
    public Builder setExplain(
        org.ballistacompute.protobuf.ExplainNode.Builder builderForValue) {
      if (explainBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        explainBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     */
    public Builder mergeExplain(org.ballistacompute.protobuf.ExplainNode value) {
      if (explainBuilder_ == null) {
        if (logicalPlanTypeCase_ == 12 &&
            logicalPlanType_ != org.ballistacompute.protobuf.ExplainNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.ExplainNode.newBuilder((org.ballistacompute.protobuf.ExplainNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 12) {
          explainBuilder_.mergeFrom(value);
        }
        explainBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     */
    public Builder clearExplain() {
      if (explainBuilder_ == null) {
        if (logicalPlanTypeCase_ == 12) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 12) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        explainBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     */
    public org.ballistacompute.protobuf.ExplainNode.Builder getExplainBuilder() {
      return getExplainFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ExplainNodeOrBuilder getExplainOrBuilder() {
      if ((logicalPlanTypeCase_ == 12) && (explainBuilder_ != null)) {
        return explainBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 12) {
          return (org.ballistacompute.protobuf.ExplainNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ExplainNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ExplainNode, org.ballistacompute.protobuf.ExplainNode.Builder, org.ballistacompute.protobuf.ExplainNodeOrBuilder> 
        getExplainFieldBuilder() {
      if (explainBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 12)) {
          logicalPlanType_ = org.ballistacompute.protobuf.ExplainNode.getDefaultInstance();
        }
        explainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ExplainNode, org.ballistacompute.protobuf.ExplainNode.Builder, org.ballistacompute.protobuf.ExplainNodeOrBuilder>(
                (org.ballistacompute.protobuf.ExplainNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 12;
      onChanged();;
      return explainBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.WindowNode, org.ballistacompute.protobuf.WindowNode.Builder, org.ballistacompute.protobuf.WindowNodeOrBuilder> windowBuilder_;
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     * @return Whether the window field is set.
     */
    @java.lang.Override
    public boolean hasWindow() {
      return logicalPlanTypeCase_ == 13;
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     * @return The window.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.WindowNode getWindow() {
      if (windowBuilder_ == null) {
        if (logicalPlanTypeCase_ == 13) {
          return (org.ballistacompute.protobuf.WindowNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.WindowNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 13) {
          return windowBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.WindowNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     */
    public Builder setWindow(org.ballistacompute.protobuf.WindowNode value) {
      if (windowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        windowBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 13;
      return this;
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     */
    public Builder setWindow(
        org.ballistacompute.protobuf.WindowNode.Builder builderForValue) {
      if (windowBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        windowBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 13;
      return this;
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     */
    public Builder mergeWindow(org.ballistacompute.protobuf.WindowNode value) {
      if (windowBuilder_ == null) {
        if (logicalPlanTypeCase_ == 13 &&
            logicalPlanType_ != org.ballistacompute.protobuf.WindowNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.WindowNode.newBuilder((org.ballistacompute.protobuf.WindowNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 13) {
          windowBuilder_.mergeFrom(value);
        }
        windowBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 13;
      return this;
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     */
    public Builder clearWindow() {
      if (windowBuilder_ == null) {
        if (logicalPlanTypeCase_ == 13) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 13) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        windowBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     */
    public org.ballistacompute.protobuf.WindowNode.Builder getWindowBuilder() {
      return getWindowFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.WindowNodeOrBuilder getWindowOrBuilder() {
      if ((logicalPlanTypeCase_ == 13) && (windowBuilder_ != null)) {
        return windowBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 13) {
          return (org.ballistacompute.protobuf.WindowNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.WindowNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.WindowNode window = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.WindowNode, org.ballistacompute.protobuf.WindowNode.Builder, org.ballistacompute.protobuf.WindowNodeOrBuilder> 
        getWindowFieldBuilder() {
      if (windowBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 13)) {
          logicalPlanType_ = org.ballistacompute.protobuf.WindowNode.getDefaultInstance();
        }
        windowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.WindowNode, org.ballistacompute.protobuf.WindowNode.Builder, org.ballistacompute.protobuf.WindowNodeOrBuilder>(
                (org.ballistacompute.protobuf.WindowNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 13;
      onChanged();;
      return windowBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AnalyzeNode, org.ballistacompute.protobuf.AnalyzeNode.Builder, org.ballistacompute.protobuf.AnalyzeNodeOrBuilder> analyzeBuilder_;
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     * @return Whether the analyze field is set.
     */
    @java.lang.Override
    public boolean hasAnalyze() {
      return logicalPlanTypeCase_ == 14;
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     * @return The analyze.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AnalyzeNode getAnalyze() {
      if (analyzeBuilder_ == null) {
        if (logicalPlanTypeCase_ == 14) {
          return (org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.AnalyzeNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 14) {
          return analyzeBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.AnalyzeNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     */
    public Builder setAnalyze(org.ballistacompute.protobuf.AnalyzeNode value) {
      if (analyzeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        analyzeBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     */
    public Builder setAnalyze(
        org.ballistacompute.protobuf.AnalyzeNode.Builder builderForValue) {
      if (analyzeBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        analyzeBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     */
    public Builder mergeAnalyze(org.ballistacompute.protobuf.AnalyzeNode value) {
      if (analyzeBuilder_ == null) {
        if (logicalPlanTypeCase_ == 14 &&
            logicalPlanType_ != org.ballistacompute.protobuf.AnalyzeNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.AnalyzeNode.newBuilder((org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 14) {
          analyzeBuilder_.mergeFrom(value);
        }
        analyzeBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     */
    public Builder clearAnalyze() {
      if (analyzeBuilder_ == null) {
        if (logicalPlanTypeCase_ == 14) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 14) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        analyzeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     */
    public org.ballistacompute.protobuf.AnalyzeNode.Builder getAnalyzeBuilder() {
      return getAnalyzeFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AnalyzeNodeOrBuilder getAnalyzeOrBuilder() {
      if ((logicalPlanTypeCase_ == 14) && (analyzeBuilder_ != null)) {
        return analyzeBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 14) {
          return (org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.AnalyzeNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AnalyzeNode, org.ballistacompute.protobuf.AnalyzeNode.Builder, org.ballistacompute.protobuf.AnalyzeNodeOrBuilder> 
        getAnalyzeFieldBuilder() {
      if (analyzeBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 14)) {
          logicalPlanType_ = org.ballistacompute.protobuf.AnalyzeNode.getDefaultInstance();
        }
        analyzeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.AnalyzeNode, org.ballistacompute.protobuf.AnalyzeNode.Builder, org.ballistacompute.protobuf.AnalyzeNodeOrBuilder>(
                (org.ballistacompute.protobuf.AnalyzeNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 14;
      onChanged();;
      return analyzeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CrossJoinNode, org.ballistacompute.protobuf.CrossJoinNode.Builder, org.ballistacompute.protobuf.CrossJoinNodeOrBuilder> crossJoinBuilder_;
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     * @return Whether the crossJoin field is set.
     */
    @java.lang.Override
    public boolean hasCrossJoin() {
      return logicalPlanTypeCase_ == 15;
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     * @return The crossJoin.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CrossJoinNode getCrossJoin() {
      if (crossJoinBuilder_ == null) {
        if (logicalPlanTypeCase_ == 15) {
          return (org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.CrossJoinNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 15) {
          return crossJoinBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.CrossJoinNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     */
    public Builder setCrossJoin(org.ballistacompute.protobuf.CrossJoinNode value) {
      if (crossJoinBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        crossJoinBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 15;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     */
    public Builder setCrossJoin(
        org.ballistacompute.protobuf.CrossJoinNode.Builder builderForValue) {
      if (crossJoinBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        crossJoinBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 15;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     */
    public Builder mergeCrossJoin(org.ballistacompute.protobuf.CrossJoinNode value) {
      if (crossJoinBuilder_ == null) {
        if (logicalPlanTypeCase_ == 15 &&
            logicalPlanType_ != org.ballistacompute.protobuf.CrossJoinNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.CrossJoinNode.newBuilder((org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 15) {
          crossJoinBuilder_.mergeFrom(value);
        }
        crossJoinBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 15;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     */
    public Builder clearCrossJoin() {
      if (crossJoinBuilder_ == null) {
        if (logicalPlanTypeCase_ == 15) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 15) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        crossJoinBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     */
    public org.ballistacompute.protobuf.CrossJoinNode.Builder getCrossJoinBuilder() {
      return getCrossJoinFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CrossJoinNodeOrBuilder getCrossJoinOrBuilder() {
      if ((logicalPlanTypeCase_ == 15) && (crossJoinBuilder_ != null)) {
        return crossJoinBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 15) {
          return (org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.CrossJoinNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CrossJoinNode, org.ballistacompute.protobuf.CrossJoinNode.Builder, org.ballistacompute.protobuf.CrossJoinNodeOrBuilder> 
        getCrossJoinFieldBuilder() {
      if (crossJoinBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 15)) {
          logicalPlanType_ = org.ballistacompute.protobuf.CrossJoinNode.getDefaultInstance();
        }
        crossJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.CrossJoinNode, org.ballistacompute.protobuf.CrossJoinNode.Builder, org.ballistacompute.protobuf.CrossJoinNodeOrBuilder>(
                (org.ballistacompute.protobuf.CrossJoinNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 15;
      onChanged();;
      return crossJoinBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ValuesNode, org.ballistacompute.protobuf.ValuesNode.Builder, org.ballistacompute.protobuf.ValuesNodeOrBuilder> valuesBuilder_;
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     * @return Whether the values field is set.
     */
    @java.lang.Override
    public boolean hasValues() {
      return logicalPlanTypeCase_ == 16;
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     * @return The values.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ValuesNode getValues() {
      if (valuesBuilder_ == null) {
        if (logicalPlanTypeCase_ == 16) {
          return (org.ballistacompute.protobuf.ValuesNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ValuesNode.getDefaultInstance();
      } else {
        if (logicalPlanTypeCase_ == 16) {
          return valuesBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.ValuesNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     */
    public Builder setValues(org.ballistacompute.protobuf.ValuesNode value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalPlanType_ = value;
        onChanged();
      } else {
        valuesBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 16;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     */
    public Builder setValues(
        org.ballistacompute.protobuf.ValuesNode.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        logicalPlanType_ = builderForValue.build();
        onChanged();
      } else {
        valuesBuilder_.setMessage(builderForValue.build());
      }
      logicalPlanTypeCase_ = 16;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     */
    public Builder mergeValues(org.ballistacompute.protobuf.ValuesNode value) {
      if (valuesBuilder_ == null) {
        if (logicalPlanTypeCase_ == 16 &&
            logicalPlanType_ != org.ballistacompute.protobuf.ValuesNode.getDefaultInstance()) {
          logicalPlanType_ = org.ballistacompute.protobuf.ValuesNode.newBuilder((org.ballistacompute.protobuf.ValuesNode) logicalPlanType_)
              .mergeFrom(value).buildPartial();
        } else {
          logicalPlanType_ = value;
        }
        onChanged();
      } else {
        if (logicalPlanTypeCase_ == 16) {
          valuesBuilder_.mergeFrom(value);
        }
        valuesBuilder_.setMessage(value);
      }
      logicalPlanTypeCase_ = 16;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     */
    public Builder clearValues() {
      if (valuesBuilder_ == null) {
        if (logicalPlanTypeCase_ == 16) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
          onChanged();
        }
      } else {
        if (logicalPlanTypeCase_ == 16) {
          logicalPlanTypeCase_ = 0;
          logicalPlanType_ = null;
        }
        valuesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     */
    public org.ballistacompute.protobuf.ValuesNode.Builder getValuesBuilder() {
      return getValuesFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ValuesNodeOrBuilder getValuesOrBuilder() {
      if ((logicalPlanTypeCase_ == 16) && (valuesBuilder_ != null)) {
        return valuesBuilder_.getMessageOrBuilder();
      } else {
        if (logicalPlanTypeCase_ == 16) {
          return (org.ballistacompute.protobuf.ValuesNode) logicalPlanType_;
        }
        return org.ballistacompute.protobuf.ValuesNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ValuesNode values = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ValuesNode, org.ballistacompute.protobuf.ValuesNode.Builder, org.ballistacompute.protobuf.ValuesNodeOrBuilder> 
        getValuesFieldBuilder() {
      if (valuesBuilder_ == null) {
        if (!(logicalPlanTypeCase_ == 16)) {
          logicalPlanType_ = org.ballistacompute.protobuf.ValuesNode.getDefaultInstance();
        }
        valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ValuesNode, org.ballistacompute.protobuf.ValuesNode.Builder, org.ballistacompute.protobuf.ValuesNodeOrBuilder>(
                (org.ballistacompute.protobuf.ValuesNode) logicalPlanType_,
                getParentForChildren(),
                isClean());
        logicalPlanType_ = null;
      }
      logicalPlanTypeCase_ = 16;
      onChanged();;
      return valuesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ballista.protobuf.LogicalPlanNode)
  }

  // @@protoc_insertion_point(class_scope:ballista.protobuf.LogicalPlanNode)
  private static final org.ballistacompute.protobuf.LogicalPlanNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.ballistacompute.protobuf.LogicalPlanNode();
  }

  public static org.ballistacompute.protobuf.LogicalPlanNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LogicalPlanNode>
      PARSER = new com.google.protobuf.AbstractParser<LogicalPlanNode>() {
    @java.lang.Override
    public LogicalPlanNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LogicalPlanNode(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LogicalPlanNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LogicalPlanNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.ballistacompute.protobuf.LogicalPlanNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

