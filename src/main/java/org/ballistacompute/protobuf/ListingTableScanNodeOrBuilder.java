// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

public interface ListingTableScanNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ballista.protobuf.ListingTableScanNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string table_name = 1;</code>
   * @return The tableName.
   */
  java.lang.String getTableName();
  /**
   * <code>string table_name = 1;</code>
   * @return The bytes for tableName.
   */
  com.google.protobuf.ByteString
      getTableNameBytes();

  /**
   * <code>string path = 2;</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <code>string path = 2;</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <code>string file_extension = 3;</code>
   * @return The fileExtension.
   */
  java.lang.String getFileExtension();
  /**
   * <code>string file_extension = 3;</code>
   * @return The bytes for fileExtension.
   */
  com.google.protobuf.ByteString
      getFileExtensionBytes();

  /**
   * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
   * @return Whether the projection field is set.
   */
  boolean hasProjection();
  /**
   * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
   * @return The projection.
   */
  org.ballistacompute.protobuf.ProjectionColumns getProjection();
  /**
   * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
   */
  org.ballistacompute.protobuf.ProjectionColumnsOrBuilder getProjectionOrBuilder();

  /**
   * <code>.ballista.protobuf.Schema schema = 5;</code>
   * @return Whether the schema field is set.
   */
  boolean hasSchema();
  /**
   * <code>.ballista.protobuf.Schema schema = 5;</code>
   * @return The schema.
   */
  org.ballistacompute.protobuf.Schema getSchema();
  /**
   * <code>.ballista.protobuf.Schema schema = 5;</code>
   */
  org.ballistacompute.protobuf.SchemaOrBuilder getSchemaOrBuilder();

  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  java.util.List<org.ballistacompute.protobuf.LogicalExprNode> 
      getFiltersList();
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  org.ballistacompute.protobuf.LogicalExprNode getFilters(int index);
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  int getFiltersCount();
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  java.util.List<? extends org.ballistacompute.protobuf.LogicalExprNodeOrBuilder> 
      getFiltersOrBuilderList();
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  org.ballistacompute.protobuf.LogicalExprNodeOrBuilder getFiltersOrBuilder(
      int index);

  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @return A list containing the tablePartitionCols.
   */
  java.util.List<java.lang.String>
      getTablePartitionColsList();
  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @return The count of tablePartitionCols.
   */
  int getTablePartitionColsCount();
  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @param index The index of the element to return.
   * @return The tablePartitionCols at the given index.
   */
  java.lang.String getTablePartitionCols(int index);
  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the tablePartitionCols at the given index.
   */
  com.google.protobuf.ByteString
      getTablePartitionColsBytes(int index);

  /**
   * <code>bool collect_stat = 8;</code>
   * @return The collectStat.
   */
  boolean getCollectStat();

  /**
   * <code>uint32 target_partitions = 9;</code>
   * @return The targetPartitions.
   */
  int getTargetPartitions();

  /**
   * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
   * @return Whether the csv field is set.
   */
  boolean hasCsv();
  /**
   * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
   * @return The csv.
   */
  org.ballistacompute.protobuf.CsvFormat getCsv();
  /**
   * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
   */
  org.ballistacompute.protobuf.CsvFormatOrBuilder getCsvOrBuilder();

  /**
   * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
   * @return Whether the parquet field is set.
   */
  boolean hasParquet();
  /**
   * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
   * @return The parquet.
   */
  org.ballistacompute.protobuf.ParquetFormat getParquet();
  /**
   * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
   */
  org.ballistacompute.protobuf.ParquetFormatOrBuilder getParquetOrBuilder();

  /**
   * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
   * @return Whether the avro field is set.
   */
  boolean hasAvro();
  /**
   * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
   * @return The avro.
   */
  org.ballistacompute.protobuf.AvroFormat getAvro();
  /**
   * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
   */
  org.ballistacompute.protobuf.AvroFormatOrBuilder getAvroOrBuilder();

  public org.ballistacompute.protobuf.ListingTableScanNode.FileFormatTypeCase getFileFormatTypeCase();
}
