// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

public interface BetweenNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ballista.protobuf.BetweenNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.ballista.protobuf.LogicalExprNode expr = 1;</code>
   * @return Whether the expr field is set.
   */
  boolean hasExpr();
  /**
   * <code>.ballista.protobuf.LogicalExprNode expr = 1;</code>
   * @return The expr.
   */
  org.ballistacompute.protobuf.LogicalExprNode getExpr();
  /**
   * <code>.ballista.protobuf.LogicalExprNode expr = 1;</code>
   */
  org.ballistacompute.protobuf.LogicalExprNodeOrBuilder getExprOrBuilder();

  /**
   * <code>bool negated = 2;</code>
   * @return The negated.
   */
  boolean getNegated();

  /**
   * <code>.ballista.protobuf.LogicalExprNode low = 3;</code>
   * @return Whether the low field is set.
   */
  boolean hasLow();
  /**
   * <code>.ballista.protobuf.LogicalExprNode low = 3;</code>
   * @return The low.
   */
  org.ballistacompute.protobuf.LogicalExprNode getLow();
  /**
   * <code>.ballista.protobuf.LogicalExprNode low = 3;</code>
   */
  org.ballistacompute.protobuf.LogicalExprNodeOrBuilder getLowOrBuilder();

  /**
   * <code>.ballista.protobuf.LogicalExprNode high = 4;</code>
   * @return Whether the high field is set.
   */
  boolean hasHigh();
  /**
   * <code>.ballista.protobuf.LogicalExprNode high = 4;</code>
   * @return The high.
   */
  org.ballistacompute.protobuf.LogicalExprNode getHigh();
  /**
   * <code>.ballista.protobuf.LogicalExprNode high = 4;</code>
   */
  org.ballistacompute.protobuf.LogicalExprNodeOrBuilder getHighOrBuilder();
}
