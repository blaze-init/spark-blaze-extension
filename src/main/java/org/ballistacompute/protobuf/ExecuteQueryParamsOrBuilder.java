// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

public interface ExecuteQueryParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ballista.protobuf.ExecuteQueryParams)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.ballista.protobuf.LogicalPlanNode logical_plan = 1;</code>
   * @return Whether the logicalPlan field is set.
   */
  boolean hasLogicalPlan();
  /**
   * <code>.ballista.protobuf.LogicalPlanNode logical_plan = 1;</code>
   * @return The logicalPlan.
   */
  org.ballistacompute.protobuf.LogicalPlanNode getLogicalPlan();
  /**
   * <code>.ballista.protobuf.LogicalPlanNode logical_plan = 1;</code>
   */
  org.ballistacompute.protobuf.LogicalPlanNodeOrBuilder getLogicalPlanOrBuilder();

  /**
   * <code>string sql = 2;</code>
   * @return Whether the sql field is set.
   */
  boolean hasSql();
  /**
   * <code>string sql = 2;</code>
   * @return The sql.
   */
  java.lang.String getSql();
  /**
   * <code>string sql = 2;</code>
   * @return The bytes for sql.
   */
  com.google.protobuf.ByteString
      getSqlBytes();

  /**
   * <code>repeated .ballista.protobuf.KeyValuePair settings = 3;</code>
   */
  java.util.List<org.ballistacompute.protobuf.KeyValuePair> 
      getSettingsList();
  /**
   * <code>repeated .ballista.protobuf.KeyValuePair settings = 3;</code>
   */
  org.ballistacompute.protobuf.KeyValuePair getSettings(int index);
  /**
   * <code>repeated .ballista.protobuf.KeyValuePair settings = 3;</code>
   */
  int getSettingsCount();
  /**
   * <code>repeated .ballista.protobuf.KeyValuePair settings = 3;</code>
   */
  java.util.List<? extends org.ballistacompute.protobuf.KeyValuePairOrBuilder> 
      getSettingsOrBuilderList();
  /**
   * <code>repeated .ballista.protobuf.KeyValuePair settings = 3;</code>
   */
  org.ballistacompute.protobuf.KeyValuePairOrBuilder getSettingsOrBuilder(
      int index);

  public org.ballistacompute.protobuf.ExecuteQueryParams.QueryCase getQueryCase();
}
