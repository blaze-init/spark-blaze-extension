// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

/**
 * <pre>
 * logical expressions
 * </pre>
 *
 * Protobuf type {@code ballista.protobuf.LogicalExprNode}
 */
public final class LogicalExprNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ballista.protobuf.LogicalExprNode)
    LogicalExprNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LogicalExprNode.newBuilder() to construct.
  private LogicalExprNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LogicalExprNode() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LogicalExprNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LogicalExprNode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.ballistacompute.protobuf.Column.Builder subBuilder = null;
            if (exprTypeCase_ == 1) {
              subBuilder = ((org.ballistacompute.protobuf.Column) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.Column.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.Column) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 1;
            break;
          }
          case 18: {
            org.ballistacompute.protobuf.AliasNode.Builder subBuilder = null;
            if (exprTypeCase_ == 2) {
              subBuilder = ((org.ballistacompute.protobuf.AliasNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.AliasNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.AliasNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 2;
            break;
          }
          case 26: {
            org.ballistacompute.protobuf.ScalarValue.Builder subBuilder = null;
            if (exprTypeCase_ == 3) {
              subBuilder = ((org.ballistacompute.protobuf.ScalarValue) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.ScalarValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.ScalarValue) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 3;
            break;
          }
          case 34: {
            org.ballistacompute.protobuf.BinaryExprNode.Builder subBuilder = null;
            if (exprTypeCase_ == 4) {
              subBuilder = ((org.ballistacompute.protobuf.BinaryExprNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.BinaryExprNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.BinaryExprNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 4;
            break;
          }
          case 42: {
            org.ballistacompute.protobuf.AggregateExprNode.Builder subBuilder = null;
            if (exprTypeCase_ == 5) {
              subBuilder = ((org.ballistacompute.protobuf.AggregateExprNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.AggregateExprNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.AggregateExprNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 5;
            break;
          }
          case 50: {
            org.ballistacompute.protobuf.IsNull.Builder subBuilder = null;
            if (exprTypeCase_ == 6) {
              subBuilder = ((org.ballistacompute.protobuf.IsNull) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.IsNull.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.IsNull) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 6;
            break;
          }
          case 58: {
            org.ballistacompute.protobuf.IsNotNull.Builder subBuilder = null;
            if (exprTypeCase_ == 7) {
              subBuilder = ((org.ballistacompute.protobuf.IsNotNull) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.IsNotNull.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.IsNotNull) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 7;
            break;
          }
          case 66: {
            org.ballistacompute.protobuf.Not.Builder subBuilder = null;
            if (exprTypeCase_ == 8) {
              subBuilder = ((org.ballistacompute.protobuf.Not) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.Not.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.Not) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 8;
            break;
          }
          case 74: {
            org.ballistacompute.protobuf.BetweenNode.Builder subBuilder = null;
            if (exprTypeCase_ == 9) {
              subBuilder = ((org.ballistacompute.protobuf.BetweenNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.BetweenNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.BetweenNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 9;
            break;
          }
          case 82: {
            org.ballistacompute.protobuf.CaseNode.Builder subBuilder = null;
            if (exprTypeCase_ == 10) {
              subBuilder = ((org.ballistacompute.protobuf.CaseNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.CaseNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.CaseNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 10;
            break;
          }
          case 90: {
            org.ballistacompute.protobuf.CastNode.Builder subBuilder = null;
            if (exprTypeCase_ == 11) {
              subBuilder = ((org.ballistacompute.protobuf.CastNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.CastNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.CastNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 11;
            break;
          }
          case 98: {
            org.ballistacompute.protobuf.SortExprNode.Builder subBuilder = null;
            if (exprTypeCase_ == 12) {
              subBuilder = ((org.ballistacompute.protobuf.SortExprNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.SortExprNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.SortExprNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 12;
            break;
          }
          case 106: {
            org.ballistacompute.protobuf.NegativeNode.Builder subBuilder = null;
            if (exprTypeCase_ == 13) {
              subBuilder = ((org.ballistacompute.protobuf.NegativeNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.NegativeNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.NegativeNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 13;
            break;
          }
          case 114: {
            org.ballistacompute.protobuf.InListNode.Builder subBuilder = null;
            if (exprTypeCase_ == 14) {
              subBuilder = ((org.ballistacompute.protobuf.InListNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.InListNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.InListNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 14;
            break;
          }
          case 120: {
            exprType_ = input.readBool();
            exprTypeCase_ = 15;
            break;
          }
          case 130: {
            org.ballistacompute.protobuf.ScalarFunctionNode.Builder subBuilder = null;
            if (exprTypeCase_ == 16) {
              subBuilder = ((org.ballistacompute.protobuf.ScalarFunctionNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.ScalarFunctionNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.ScalarFunctionNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 16;
            break;
          }
          case 138: {
            org.ballistacompute.protobuf.TryCastNode.Builder subBuilder = null;
            if (exprTypeCase_ == 17) {
              subBuilder = ((org.ballistacompute.protobuf.TryCastNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.TryCastNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.TryCastNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 17;
            break;
          }
          case 146: {
            org.ballistacompute.protobuf.WindowExprNode.Builder subBuilder = null;
            if (exprTypeCase_ == 18) {
              subBuilder = ((org.ballistacompute.protobuf.WindowExprNode) exprType_).toBuilder();
            }
            exprType_ =
                input.readMessage(org.ballistacompute.protobuf.WindowExprNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.WindowExprNode) exprType_);
              exprType_ = subBuilder.buildPartial();
            }
            exprTypeCase_ = 18;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalExprNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalExprNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.ballistacompute.protobuf.LogicalExprNode.class, org.ballistacompute.protobuf.LogicalExprNode.Builder.class);
  }

  private int exprTypeCase_ = 0;
  private java.lang.Object exprType_;
  public enum ExprTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    COLUMN(1),
    ALIAS(2),
    LITERAL(3),
    BINARY_EXPR(4),
    AGGREGATE_EXPR(5),
    IS_NULL_EXPR(6),
    IS_NOT_NULL_EXPR(7),
    NOT_EXPR(8),
    BETWEEN(9),
    CASE_(10),
    CAST(11),
    SORT(12),
    NEGATIVE(13),
    IN_LIST(14),
    WILDCARD(15),
    SCALAR_FUNCTION(16),
    TRY_CAST(17),
    WINDOW_EXPR(18),
    EXPRTYPE_NOT_SET(0);
    private final int value;
    private ExprTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExprTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ExprTypeCase forNumber(int value) {
      switch (value) {
        case 1: return COLUMN;
        case 2: return ALIAS;
        case 3: return LITERAL;
        case 4: return BINARY_EXPR;
        case 5: return AGGREGATE_EXPR;
        case 6: return IS_NULL_EXPR;
        case 7: return IS_NOT_NULL_EXPR;
        case 8: return NOT_EXPR;
        case 9: return BETWEEN;
        case 10: return CASE_;
        case 11: return CAST;
        case 12: return SORT;
        case 13: return NEGATIVE;
        case 14: return IN_LIST;
        case 15: return WILDCARD;
        case 16: return SCALAR_FUNCTION;
        case 17: return TRY_CAST;
        case 18: return WINDOW_EXPR;
        case 0: return EXPRTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ExprTypeCase
  getExprTypeCase() {
    return ExprTypeCase.forNumber(
        exprTypeCase_);
  }

  public static final int COLUMN_FIELD_NUMBER = 1;
  /**
   * <pre>
   * column references
   * </pre>
   *
   * <code>.ballista.protobuf.Column column = 1;</code>
   * @return Whether the column field is set.
   */
  @java.lang.Override
  public boolean hasColumn() {
    return exprTypeCase_ == 1;
  }
  /**
   * <pre>
   * column references
   * </pre>
   *
   * <code>.ballista.protobuf.Column column = 1;</code>
   * @return The column.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.Column getColumn() {
    if (exprTypeCase_ == 1) {
       return (org.ballistacompute.protobuf.Column) exprType_;
    }
    return org.ballistacompute.protobuf.Column.getDefaultInstance();
  }
  /**
   * <pre>
   * column references
   * </pre>
   *
   * <code>.ballista.protobuf.Column column = 1;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ColumnOrBuilder getColumnOrBuilder() {
    if (exprTypeCase_ == 1) {
       return (org.ballistacompute.protobuf.Column) exprType_;
    }
    return org.ballistacompute.protobuf.Column.getDefaultInstance();
  }

  public static final int ALIAS_FIELD_NUMBER = 2;
  /**
   * <pre>
   * alias
   * </pre>
   *
   * <code>.ballista.protobuf.AliasNode alias = 2;</code>
   * @return Whether the alias field is set.
   */
  @java.lang.Override
  public boolean hasAlias() {
    return exprTypeCase_ == 2;
  }
  /**
   * <pre>
   * alias
   * </pre>
   *
   * <code>.ballista.protobuf.AliasNode alias = 2;</code>
   * @return The alias.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AliasNode getAlias() {
    if (exprTypeCase_ == 2) {
       return (org.ballistacompute.protobuf.AliasNode) exprType_;
    }
    return org.ballistacompute.protobuf.AliasNode.getDefaultInstance();
  }
  /**
   * <pre>
   * alias
   * </pre>
   *
   * <code>.ballista.protobuf.AliasNode alias = 2;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AliasNodeOrBuilder getAliasOrBuilder() {
    if (exprTypeCase_ == 2) {
       return (org.ballistacompute.protobuf.AliasNode) exprType_;
    }
    return org.ballistacompute.protobuf.AliasNode.getDefaultInstance();
  }

  public static final int LITERAL_FIELD_NUMBER = 3;
  /**
   * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
   * @return Whether the literal field is set.
   */
  @java.lang.Override
  public boolean hasLiteral() {
    return exprTypeCase_ == 3;
  }
  /**
   * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
   * @return The literal.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ScalarValue getLiteral() {
    if (exprTypeCase_ == 3) {
       return (org.ballistacompute.protobuf.ScalarValue) exprType_;
    }
    return org.ballistacompute.protobuf.ScalarValue.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ScalarValueOrBuilder getLiteralOrBuilder() {
    if (exprTypeCase_ == 3) {
       return (org.ballistacompute.protobuf.ScalarValue) exprType_;
    }
    return org.ballistacompute.protobuf.ScalarValue.getDefaultInstance();
  }

  public static final int BINARY_EXPR_FIELD_NUMBER = 4;
  /**
   * <pre>
   * binary expressions
   * </pre>
   *
   * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
   * @return Whether the binaryExpr field is set.
   */
  @java.lang.Override
  public boolean hasBinaryExpr() {
    return exprTypeCase_ == 4;
  }
  /**
   * <pre>
   * binary expressions
   * </pre>
   *
   * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
   * @return The binaryExpr.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.BinaryExprNode getBinaryExpr() {
    if (exprTypeCase_ == 4) {
       return (org.ballistacompute.protobuf.BinaryExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.BinaryExprNode.getDefaultInstance();
  }
  /**
   * <pre>
   * binary expressions
   * </pre>
   *
   * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.BinaryExprNodeOrBuilder getBinaryExprOrBuilder() {
    if (exprTypeCase_ == 4) {
       return (org.ballistacompute.protobuf.BinaryExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.BinaryExprNode.getDefaultInstance();
  }

  public static final int AGGREGATE_EXPR_FIELD_NUMBER = 5;
  /**
   * <pre>
   * aggregate expressions
   * </pre>
   *
   * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
   * @return Whether the aggregateExpr field is set.
   */
  @java.lang.Override
  public boolean hasAggregateExpr() {
    return exprTypeCase_ == 5;
  }
  /**
   * <pre>
   * aggregate expressions
   * </pre>
   *
   * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
   * @return The aggregateExpr.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AggregateExprNode getAggregateExpr() {
    if (exprTypeCase_ == 5) {
       return (org.ballistacompute.protobuf.AggregateExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.AggregateExprNode.getDefaultInstance();
  }
  /**
   * <pre>
   * aggregate expressions
   * </pre>
   *
   * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AggregateExprNodeOrBuilder getAggregateExprOrBuilder() {
    if (exprTypeCase_ == 5) {
       return (org.ballistacompute.protobuf.AggregateExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.AggregateExprNode.getDefaultInstance();
  }

  public static final int IS_NULL_EXPR_FIELD_NUMBER = 6;
  /**
   * <pre>
   * null checks
   * </pre>
   *
   * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
   * @return Whether the isNullExpr field is set.
   */
  @java.lang.Override
  public boolean hasIsNullExpr() {
    return exprTypeCase_ == 6;
  }
  /**
   * <pre>
   * null checks
   * </pre>
   *
   * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
   * @return The isNullExpr.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.IsNull getIsNullExpr() {
    if (exprTypeCase_ == 6) {
       return (org.ballistacompute.protobuf.IsNull) exprType_;
    }
    return org.ballistacompute.protobuf.IsNull.getDefaultInstance();
  }
  /**
   * <pre>
   * null checks
   * </pre>
   *
   * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.IsNullOrBuilder getIsNullExprOrBuilder() {
    if (exprTypeCase_ == 6) {
       return (org.ballistacompute.protobuf.IsNull) exprType_;
    }
    return org.ballistacompute.protobuf.IsNull.getDefaultInstance();
  }

  public static final int IS_NOT_NULL_EXPR_FIELD_NUMBER = 7;
  /**
   * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
   * @return Whether the isNotNullExpr field is set.
   */
  @java.lang.Override
  public boolean hasIsNotNullExpr() {
    return exprTypeCase_ == 7;
  }
  /**
   * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
   * @return The isNotNullExpr.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.IsNotNull getIsNotNullExpr() {
    if (exprTypeCase_ == 7) {
       return (org.ballistacompute.protobuf.IsNotNull) exprType_;
    }
    return org.ballistacompute.protobuf.IsNotNull.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.IsNotNullOrBuilder getIsNotNullExprOrBuilder() {
    if (exprTypeCase_ == 7) {
       return (org.ballistacompute.protobuf.IsNotNull) exprType_;
    }
    return org.ballistacompute.protobuf.IsNotNull.getDefaultInstance();
  }

  public static final int NOT_EXPR_FIELD_NUMBER = 8;
  /**
   * <code>.ballista.protobuf.Not not_expr = 8;</code>
   * @return Whether the notExpr field is set.
   */
  @java.lang.Override
  public boolean hasNotExpr() {
    return exprTypeCase_ == 8;
  }
  /**
   * <code>.ballista.protobuf.Not not_expr = 8;</code>
   * @return The notExpr.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.Not getNotExpr() {
    if (exprTypeCase_ == 8) {
       return (org.ballistacompute.protobuf.Not) exprType_;
    }
    return org.ballistacompute.protobuf.Not.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.Not not_expr = 8;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.NotOrBuilder getNotExprOrBuilder() {
    if (exprTypeCase_ == 8) {
       return (org.ballistacompute.protobuf.Not) exprType_;
    }
    return org.ballistacompute.protobuf.Not.getDefaultInstance();
  }

  public static final int BETWEEN_FIELD_NUMBER = 9;
  /**
   * <code>.ballista.protobuf.BetweenNode between = 9;</code>
   * @return Whether the between field is set.
   */
  @java.lang.Override
  public boolean hasBetween() {
    return exprTypeCase_ == 9;
  }
  /**
   * <code>.ballista.protobuf.BetweenNode between = 9;</code>
   * @return The between.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.BetweenNode getBetween() {
    if (exprTypeCase_ == 9) {
       return (org.ballistacompute.protobuf.BetweenNode) exprType_;
    }
    return org.ballistacompute.protobuf.BetweenNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.BetweenNode between = 9;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.BetweenNodeOrBuilder getBetweenOrBuilder() {
    if (exprTypeCase_ == 9) {
       return (org.ballistacompute.protobuf.BetweenNode) exprType_;
    }
    return org.ballistacompute.protobuf.BetweenNode.getDefaultInstance();
  }

  public static final int CASE__FIELD_NUMBER = 10;
  /**
   * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
   * @return Whether the case field is set.
   */
  @java.lang.Override
  public boolean hasCase() {
    return exprTypeCase_ == 10;
  }
  /**
   * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
   * @return The case.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CaseNode getCase() {
    if (exprTypeCase_ == 10) {
       return (org.ballistacompute.protobuf.CaseNode) exprType_;
    }
    return org.ballistacompute.protobuf.CaseNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CaseNodeOrBuilder getCaseOrBuilder() {
    if (exprTypeCase_ == 10) {
       return (org.ballistacompute.protobuf.CaseNode) exprType_;
    }
    return org.ballistacompute.protobuf.CaseNode.getDefaultInstance();
  }

  public static final int CAST_FIELD_NUMBER = 11;
  /**
   * <code>.ballista.protobuf.CastNode cast = 11;</code>
   * @return Whether the cast field is set.
   */
  @java.lang.Override
  public boolean hasCast() {
    return exprTypeCase_ == 11;
  }
  /**
   * <code>.ballista.protobuf.CastNode cast = 11;</code>
   * @return The cast.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CastNode getCast() {
    if (exprTypeCase_ == 11) {
       return (org.ballistacompute.protobuf.CastNode) exprType_;
    }
    return org.ballistacompute.protobuf.CastNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.CastNode cast = 11;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CastNodeOrBuilder getCastOrBuilder() {
    if (exprTypeCase_ == 11) {
       return (org.ballistacompute.protobuf.CastNode) exprType_;
    }
    return org.ballistacompute.protobuf.CastNode.getDefaultInstance();
  }

  public static final int SORT_FIELD_NUMBER = 12;
  /**
   * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
   * @return Whether the sort field is set.
   */
  @java.lang.Override
  public boolean hasSort() {
    return exprTypeCase_ == 12;
  }
  /**
   * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
   * @return The sort.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SortExprNode getSort() {
    if (exprTypeCase_ == 12) {
       return (org.ballistacompute.protobuf.SortExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.SortExprNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SortExprNodeOrBuilder getSortOrBuilder() {
    if (exprTypeCase_ == 12) {
       return (org.ballistacompute.protobuf.SortExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.SortExprNode.getDefaultInstance();
  }

  public static final int NEGATIVE_FIELD_NUMBER = 13;
  /**
   * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
   * @return Whether the negative field is set.
   */
  @java.lang.Override
  public boolean hasNegative() {
    return exprTypeCase_ == 13;
  }
  /**
   * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
   * @return The negative.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.NegativeNode getNegative() {
    if (exprTypeCase_ == 13) {
       return (org.ballistacompute.protobuf.NegativeNode) exprType_;
    }
    return org.ballistacompute.protobuf.NegativeNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.NegativeNodeOrBuilder getNegativeOrBuilder() {
    if (exprTypeCase_ == 13) {
       return (org.ballistacompute.protobuf.NegativeNode) exprType_;
    }
    return org.ballistacompute.protobuf.NegativeNode.getDefaultInstance();
  }

  public static final int IN_LIST_FIELD_NUMBER = 14;
  /**
   * <code>.ballista.protobuf.InListNode in_list = 14;</code>
   * @return Whether the inList field is set.
   */
  @java.lang.Override
  public boolean hasInList() {
    return exprTypeCase_ == 14;
  }
  /**
   * <code>.ballista.protobuf.InListNode in_list = 14;</code>
   * @return The inList.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.InListNode getInList() {
    if (exprTypeCase_ == 14) {
       return (org.ballistacompute.protobuf.InListNode) exprType_;
    }
    return org.ballistacompute.protobuf.InListNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.InListNode in_list = 14;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.InListNodeOrBuilder getInListOrBuilder() {
    if (exprTypeCase_ == 14) {
       return (org.ballistacompute.protobuf.InListNode) exprType_;
    }
    return org.ballistacompute.protobuf.InListNode.getDefaultInstance();
  }

  public static final int WILDCARD_FIELD_NUMBER = 15;
  /**
   * <code>bool wildcard = 15;</code>
   * @return Whether the wildcard field is set.
   */
  @java.lang.Override
  public boolean hasWildcard() {
    return exprTypeCase_ == 15;
  }
  /**
   * <code>bool wildcard = 15;</code>
   * @return The wildcard.
   */
  @java.lang.Override
  public boolean getWildcard() {
    if (exprTypeCase_ == 15) {
      return (java.lang.Boolean) exprType_;
    }
    return false;
  }

  public static final int SCALAR_FUNCTION_FIELD_NUMBER = 16;
  /**
   * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
   * @return Whether the scalarFunction field is set.
   */
  @java.lang.Override
  public boolean hasScalarFunction() {
    return exprTypeCase_ == 16;
  }
  /**
   * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
   * @return The scalarFunction.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ScalarFunctionNode getScalarFunction() {
    if (exprTypeCase_ == 16) {
       return (org.ballistacompute.protobuf.ScalarFunctionNode) exprType_;
    }
    return org.ballistacompute.protobuf.ScalarFunctionNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ScalarFunctionNodeOrBuilder getScalarFunctionOrBuilder() {
    if (exprTypeCase_ == 16) {
       return (org.ballistacompute.protobuf.ScalarFunctionNode) exprType_;
    }
    return org.ballistacompute.protobuf.ScalarFunctionNode.getDefaultInstance();
  }

  public static final int TRY_CAST_FIELD_NUMBER = 17;
  /**
   * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
   * @return Whether the tryCast field is set.
   */
  @java.lang.Override
  public boolean hasTryCast() {
    return exprTypeCase_ == 17;
  }
  /**
   * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
   * @return The tryCast.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.TryCastNode getTryCast() {
    if (exprTypeCase_ == 17) {
       return (org.ballistacompute.protobuf.TryCastNode) exprType_;
    }
    return org.ballistacompute.protobuf.TryCastNode.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.TryCastNodeOrBuilder getTryCastOrBuilder() {
    if (exprTypeCase_ == 17) {
       return (org.ballistacompute.protobuf.TryCastNode) exprType_;
    }
    return org.ballistacompute.protobuf.TryCastNode.getDefaultInstance();
  }

  public static final int WINDOW_EXPR_FIELD_NUMBER = 18;
  /**
   * <pre>
   * window expressions
   * </pre>
   *
   * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
   * @return Whether the windowExpr field is set.
   */
  @java.lang.Override
  public boolean hasWindowExpr() {
    return exprTypeCase_ == 18;
  }
  /**
   * <pre>
   * window expressions
   * </pre>
   *
   * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
   * @return The windowExpr.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.WindowExprNode getWindowExpr() {
    if (exprTypeCase_ == 18) {
       return (org.ballistacompute.protobuf.WindowExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.WindowExprNode.getDefaultInstance();
  }
  /**
   * <pre>
   * window expressions
   * </pre>
   *
   * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.WindowExprNodeOrBuilder getWindowExprOrBuilder() {
    if (exprTypeCase_ == 18) {
       return (org.ballistacompute.protobuf.WindowExprNode) exprType_;
    }
    return org.ballistacompute.protobuf.WindowExprNode.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (exprTypeCase_ == 1) {
      output.writeMessage(1, (org.ballistacompute.protobuf.Column) exprType_);
    }
    if (exprTypeCase_ == 2) {
      output.writeMessage(2, (org.ballistacompute.protobuf.AliasNode) exprType_);
    }
    if (exprTypeCase_ == 3) {
      output.writeMessage(3, (org.ballistacompute.protobuf.ScalarValue) exprType_);
    }
    if (exprTypeCase_ == 4) {
      output.writeMessage(4, (org.ballistacompute.protobuf.BinaryExprNode) exprType_);
    }
    if (exprTypeCase_ == 5) {
      output.writeMessage(5, (org.ballistacompute.protobuf.AggregateExprNode) exprType_);
    }
    if (exprTypeCase_ == 6) {
      output.writeMessage(6, (org.ballistacompute.protobuf.IsNull) exprType_);
    }
    if (exprTypeCase_ == 7) {
      output.writeMessage(7, (org.ballistacompute.protobuf.IsNotNull) exprType_);
    }
    if (exprTypeCase_ == 8) {
      output.writeMessage(8, (org.ballistacompute.protobuf.Not) exprType_);
    }
    if (exprTypeCase_ == 9) {
      output.writeMessage(9, (org.ballistacompute.protobuf.BetweenNode) exprType_);
    }
    if (exprTypeCase_ == 10) {
      output.writeMessage(10, (org.ballistacompute.protobuf.CaseNode) exprType_);
    }
    if (exprTypeCase_ == 11) {
      output.writeMessage(11, (org.ballistacompute.protobuf.CastNode) exprType_);
    }
    if (exprTypeCase_ == 12) {
      output.writeMessage(12, (org.ballistacompute.protobuf.SortExprNode) exprType_);
    }
    if (exprTypeCase_ == 13) {
      output.writeMessage(13, (org.ballistacompute.protobuf.NegativeNode) exprType_);
    }
    if (exprTypeCase_ == 14) {
      output.writeMessage(14, (org.ballistacompute.protobuf.InListNode) exprType_);
    }
    if (exprTypeCase_ == 15) {
      output.writeBool(
          15, (boolean)((java.lang.Boolean) exprType_));
    }
    if (exprTypeCase_ == 16) {
      output.writeMessage(16, (org.ballistacompute.protobuf.ScalarFunctionNode) exprType_);
    }
    if (exprTypeCase_ == 17) {
      output.writeMessage(17, (org.ballistacompute.protobuf.TryCastNode) exprType_);
    }
    if (exprTypeCase_ == 18) {
      output.writeMessage(18, (org.ballistacompute.protobuf.WindowExprNode) exprType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (exprTypeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.ballistacompute.protobuf.Column) exprType_);
    }
    if (exprTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.ballistacompute.protobuf.AliasNode) exprType_);
    }
    if (exprTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.ballistacompute.protobuf.ScalarValue) exprType_);
    }
    if (exprTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.ballistacompute.protobuf.BinaryExprNode) exprType_);
    }
    if (exprTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.ballistacompute.protobuf.AggregateExprNode) exprType_);
    }
    if (exprTypeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.ballistacompute.protobuf.IsNull) exprType_);
    }
    if (exprTypeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (org.ballistacompute.protobuf.IsNotNull) exprType_);
    }
    if (exprTypeCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (org.ballistacompute.protobuf.Not) exprType_);
    }
    if (exprTypeCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (org.ballistacompute.protobuf.BetweenNode) exprType_);
    }
    if (exprTypeCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (org.ballistacompute.protobuf.CaseNode) exprType_);
    }
    if (exprTypeCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (org.ballistacompute.protobuf.CastNode) exprType_);
    }
    if (exprTypeCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (org.ballistacompute.protobuf.SortExprNode) exprType_);
    }
    if (exprTypeCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (org.ballistacompute.protobuf.NegativeNode) exprType_);
    }
    if (exprTypeCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (org.ballistacompute.protobuf.InListNode) exprType_);
    }
    if (exprTypeCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            15, (boolean)((java.lang.Boolean) exprType_));
    }
    if (exprTypeCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, (org.ballistacompute.protobuf.ScalarFunctionNode) exprType_);
    }
    if (exprTypeCase_ == 17) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, (org.ballistacompute.protobuf.TryCastNode) exprType_);
    }
    if (exprTypeCase_ == 18) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, (org.ballistacompute.protobuf.WindowExprNode) exprType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.ballistacompute.protobuf.LogicalExprNode)) {
      return super.equals(obj);
    }
    org.ballistacompute.protobuf.LogicalExprNode other = (org.ballistacompute.protobuf.LogicalExprNode) obj;

    if (!getExprTypeCase().equals(other.getExprTypeCase())) return false;
    switch (exprTypeCase_) {
      case 1:
        if (!getColumn()
            .equals(other.getColumn())) return false;
        break;
      case 2:
        if (!getAlias()
            .equals(other.getAlias())) return false;
        break;
      case 3:
        if (!getLiteral()
            .equals(other.getLiteral())) return false;
        break;
      case 4:
        if (!getBinaryExpr()
            .equals(other.getBinaryExpr())) return false;
        break;
      case 5:
        if (!getAggregateExpr()
            .equals(other.getAggregateExpr())) return false;
        break;
      case 6:
        if (!getIsNullExpr()
            .equals(other.getIsNullExpr())) return false;
        break;
      case 7:
        if (!getIsNotNullExpr()
            .equals(other.getIsNotNullExpr())) return false;
        break;
      case 8:
        if (!getNotExpr()
            .equals(other.getNotExpr())) return false;
        break;
      case 9:
        if (!getBetween()
            .equals(other.getBetween())) return false;
        break;
      case 10:
        if (!getCase()
            .equals(other.getCase())) return false;
        break;
      case 11:
        if (!getCast()
            .equals(other.getCast())) return false;
        break;
      case 12:
        if (!getSort()
            .equals(other.getSort())) return false;
        break;
      case 13:
        if (!getNegative()
            .equals(other.getNegative())) return false;
        break;
      case 14:
        if (!getInList()
            .equals(other.getInList())) return false;
        break;
      case 15:
        if (getWildcard()
            != other.getWildcard()) return false;
        break;
      case 16:
        if (!getScalarFunction()
            .equals(other.getScalarFunction())) return false;
        break;
      case 17:
        if (!getTryCast()
            .equals(other.getTryCast())) return false;
        break;
      case 18:
        if (!getWindowExpr()
            .equals(other.getWindowExpr())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (exprTypeCase_) {
      case 1:
        hash = (37 * hash) + COLUMN_FIELD_NUMBER;
        hash = (53 * hash) + getColumn().hashCode();
        break;
      case 2:
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
        break;
      case 3:
        hash = (37 * hash) + LITERAL_FIELD_NUMBER;
        hash = (53 * hash) + getLiteral().hashCode();
        break;
      case 4:
        hash = (37 * hash) + BINARY_EXPR_FIELD_NUMBER;
        hash = (53 * hash) + getBinaryExpr().hashCode();
        break;
      case 5:
        hash = (37 * hash) + AGGREGATE_EXPR_FIELD_NUMBER;
        hash = (53 * hash) + getAggregateExpr().hashCode();
        break;
      case 6:
        hash = (37 * hash) + IS_NULL_EXPR_FIELD_NUMBER;
        hash = (53 * hash) + getIsNullExpr().hashCode();
        break;
      case 7:
        hash = (37 * hash) + IS_NOT_NULL_EXPR_FIELD_NUMBER;
        hash = (53 * hash) + getIsNotNullExpr().hashCode();
        break;
      case 8:
        hash = (37 * hash) + NOT_EXPR_FIELD_NUMBER;
        hash = (53 * hash) + getNotExpr().hashCode();
        break;
      case 9:
        hash = (37 * hash) + BETWEEN_FIELD_NUMBER;
        hash = (53 * hash) + getBetween().hashCode();
        break;
      case 10:
        hash = (37 * hash) + CASE__FIELD_NUMBER;
        hash = (53 * hash) + getCase().hashCode();
        break;
      case 11:
        hash = (37 * hash) + CAST_FIELD_NUMBER;
        hash = (53 * hash) + getCast().hashCode();
        break;
      case 12:
        hash = (37 * hash) + SORT_FIELD_NUMBER;
        hash = (53 * hash) + getSort().hashCode();
        break;
      case 13:
        hash = (37 * hash) + NEGATIVE_FIELD_NUMBER;
        hash = (53 * hash) + getNegative().hashCode();
        break;
      case 14:
        hash = (37 * hash) + IN_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getInList().hashCode();
        break;
      case 15:
        hash = (37 * hash) + WILDCARD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getWildcard());
        break;
      case 16:
        hash = (37 * hash) + SCALAR_FUNCTION_FIELD_NUMBER;
        hash = (53 * hash) + getScalarFunction().hashCode();
        break;
      case 17:
        hash = (37 * hash) + TRY_CAST_FIELD_NUMBER;
        hash = (53 * hash) + getTryCast().hashCode();
        break;
      case 18:
        hash = (37 * hash) + WINDOW_EXPR_FIELD_NUMBER;
        hash = (53 * hash) + getWindowExpr().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.LogicalExprNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.ballistacompute.protobuf.LogicalExprNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * logical expressions
   * </pre>
   *
   * Protobuf type {@code ballista.protobuf.LogicalExprNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ballista.protobuf.LogicalExprNode)
      org.ballistacompute.protobuf.LogicalExprNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalExprNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalExprNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.ballistacompute.protobuf.LogicalExprNode.class, org.ballistacompute.protobuf.LogicalExprNode.Builder.class);
    }

    // Construct using org.ballistacompute.protobuf.LogicalExprNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      exprTypeCase_ = 0;
      exprType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_LogicalExprNode_descriptor;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.LogicalExprNode getDefaultInstanceForType() {
      return org.ballistacompute.protobuf.LogicalExprNode.getDefaultInstance();
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.LogicalExprNode build() {
      org.ballistacompute.protobuf.LogicalExprNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.LogicalExprNode buildPartial() {
      org.ballistacompute.protobuf.LogicalExprNode result = new org.ballistacompute.protobuf.LogicalExprNode(this);
      if (exprTypeCase_ == 1) {
        if (columnBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = columnBuilder_.build();
        }
      }
      if (exprTypeCase_ == 2) {
        if (aliasBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = aliasBuilder_.build();
        }
      }
      if (exprTypeCase_ == 3) {
        if (literalBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = literalBuilder_.build();
        }
      }
      if (exprTypeCase_ == 4) {
        if (binaryExprBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = binaryExprBuilder_.build();
        }
      }
      if (exprTypeCase_ == 5) {
        if (aggregateExprBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = aggregateExprBuilder_.build();
        }
      }
      if (exprTypeCase_ == 6) {
        if (isNullExprBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = isNullExprBuilder_.build();
        }
      }
      if (exprTypeCase_ == 7) {
        if (isNotNullExprBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = isNotNullExprBuilder_.build();
        }
      }
      if (exprTypeCase_ == 8) {
        if (notExprBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = notExprBuilder_.build();
        }
      }
      if (exprTypeCase_ == 9) {
        if (betweenBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = betweenBuilder_.build();
        }
      }
      if (exprTypeCase_ == 10) {
        if (caseBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = caseBuilder_.build();
        }
      }
      if (exprTypeCase_ == 11) {
        if (castBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = castBuilder_.build();
        }
      }
      if (exprTypeCase_ == 12) {
        if (sortBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = sortBuilder_.build();
        }
      }
      if (exprTypeCase_ == 13) {
        if (negativeBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = negativeBuilder_.build();
        }
      }
      if (exprTypeCase_ == 14) {
        if (inListBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = inListBuilder_.build();
        }
      }
      if (exprTypeCase_ == 15) {
        result.exprType_ = exprType_;
      }
      if (exprTypeCase_ == 16) {
        if (scalarFunctionBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = scalarFunctionBuilder_.build();
        }
      }
      if (exprTypeCase_ == 17) {
        if (tryCastBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = tryCastBuilder_.build();
        }
      }
      if (exprTypeCase_ == 18) {
        if (windowExprBuilder_ == null) {
          result.exprType_ = exprType_;
        } else {
          result.exprType_ = windowExprBuilder_.build();
        }
      }
      result.exprTypeCase_ = exprTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.ballistacompute.protobuf.LogicalExprNode) {
        return mergeFrom((org.ballistacompute.protobuf.LogicalExprNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.ballistacompute.protobuf.LogicalExprNode other) {
      if (other == org.ballistacompute.protobuf.LogicalExprNode.getDefaultInstance()) return this;
      switch (other.getExprTypeCase()) {
        case COLUMN: {
          mergeColumn(other.getColumn());
          break;
        }
        case ALIAS: {
          mergeAlias(other.getAlias());
          break;
        }
        case LITERAL: {
          mergeLiteral(other.getLiteral());
          break;
        }
        case BINARY_EXPR: {
          mergeBinaryExpr(other.getBinaryExpr());
          break;
        }
        case AGGREGATE_EXPR: {
          mergeAggregateExpr(other.getAggregateExpr());
          break;
        }
        case IS_NULL_EXPR: {
          mergeIsNullExpr(other.getIsNullExpr());
          break;
        }
        case IS_NOT_NULL_EXPR: {
          mergeIsNotNullExpr(other.getIsNotNullExpr());
          break;
        }
        case NOT_EXPR: {
          mergeNotExpr(other.getNotExpr());
          break;
        }
        case BETWEEN: {
          mergeBetween(other.getBetween());
          break;
        }
        case CASE_: {
          mergeCase(other.getCase());
          break;
        }
        case CAST: {
          mergeCast(other.getCast());
          break;
        }
        case SORT: {
          mergeSort(other.getSort());
          break;
        }
        case NEGATIVE: {
          mergeNegative(other.getNegative());
          break;
        }
        case IN_LIST: {
          mergeInList(other.getInList());
          break;
        }
        case WILDCARD: {
          setWildcard(other.getWildcard());
          break;
        }
        case SCALAR_FUNCTION: {
          mergeScalarFunction(other.getScalarFunction());
          break;
        }
        case TRY_CAST: {
          mergeTryCast(other.getTryCast());
          break;
        }
        case WINDOW_EXPR: {
          mergeWindowExpr(other.getWindowExpr());
          break;
        }
        case EXPRTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.ballistacompute.protobuf.LogicalExprNode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.ballistacompute.protobuf.LogicalExprNode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int exprTypeCase_ = 0;
    private java.lang.Object exprType_;
    public ExprTypeCase
        getExprTypeCase() {
      return ExprTypeCase.forNumber(
          exprTypeCase_);
    }

    public Builder clearExprType() {
      exprTypeCase_ = 0;
      exprType_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Column, org.ballistacompute.protobuf.Column.Builder, org.ballistacompute.protobuf.ColumnOrBuilder> columnBuilder_;
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     * @return Whether the column field is set.
     */
    @java.lang.Override
    public boolean hasColumn() {
      return exprTypeCase_ == 1;
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     * @return The column.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.Column getColumn() {
      if (columnBuilder_ == null) {
        if (exprTypeCase_ == 1) {
          return (org.ballistacompute.protobuf.Column) exprType_;
        }
        return org.ballistacompute.protobuf.Column.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 1) {
          return columnBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.Column.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     */
    public Builder setColumn(org.ballistacompute.protobuf.Column value) {
      if (columnBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        columnBuilder_.setMessage(value);
      }
      exprTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     */
    public Builder setColumn(
        org.ballistacompute.protobuf.Column.Builder builderForValue) {
      if (columnBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        columnBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     */
    public Builder mergeColumn(org.ballistacompute.protobuf.Column value) {
      if (columnBuilder_ == null) {
        if (exprTypeCase_ == 1 &&
            exprType_ != org.ballistacompute.protobuf.Column.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.Column.newBuilder((org.ballistacompute.protobuf.Column) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 1) {
          columnBuilder_.mergeFrom(value);
        }
        columnBuilder_.setMessage(value);
      }
      exprTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     */
    public Builder clearColumn() {
      if (columnBuilder_ == null) {
        if (exprTypeCase_ == 1) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 1) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        columnBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     */
    public org.ballistacompute.protobuf.Column.Builder getColumnBuilder() {
      return getColumnFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ColumnOrBuilder getColumnOrBuilder() {
      if ((exprTypeCase_ == 1) && (columnBuilder_ != null)) {
        return columnBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 1) {
          return (org.ballistacompute.protobuf.Column) exprType_;
        }
        return org.ballistacompute.protobuf.Column.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * column references
     * </pre>
     *
     * <code>.ballista.protobuf.Column column = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Column, org.ballistacompute.protobuf.Column.Builder, org.ballistacompute.protobuf.ColumnOrBuilder> 
        getColumnFieldBuilder() {
      if (columnBuilder_ == null) {
        if (!(exprTypeCase_ == 1)) {
          exprType_ = org.ballistacompute.protobuf.Column.getDefaultInstance();
        }
        columnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.Column, org.ballistacompute.protobuf.Column.Builder, org.ballistacompute.protobuf.ColumnOrBuilder>(
                (org.ballistacompute.protobuf.Column) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 1;
      onChanged();;
      return columnBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AliasNode, org.ballistacompute.protobuf.AliasNode.Builder, org.ballistacompute.protobuf.AliasNodeOrBuilder> aliasBuilder_;
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return exprTypeCase_ == 2;
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     * @return The alias.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AliasNode getAlias() {
      if (aliasBuilder_ == null) {
        if (exprTypeCase_ == 2) {
          return (org.ballistacompute.protobuf.AliasNode) exprType_;
        }
        return org.ballistacompute.protobuf.AliasNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 2) {
          return aliasBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.AliasNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     */
    public Builder setAlias(org.ballistacompute.protobuf.AliasNode value) {
      if (aliasBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        aliasBuilder_.setMessage(value);
      }
      exprTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     */
    public Builder setAlias(
        org.ballistacompute.protobuf.AliasNode.Builder builderForValue) {
      if (aliasBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        aliasBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     */
    public Builder mergeAlias(org.ballistacompute.protobuf.AliasNode value) {
      if (aliasBuilder_ == null) {
        if (exprTypeCase_ == 2 &&
            exprType_ != org.ballistacompute.protobuf.AliasNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.AliasNode.newBuilder((org.ballistacompute.protobuf.AliasNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 2) {
          aliasBuilder_.mergeFrom(value);
        }
        aliasBuilder_.setMessage(value);
      }
      exprTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     */
    public Builder clearAlias() {
      if (aliasBuilder_ == null) {
        if (exprTypeCase_ == 2) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 2) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        aliasBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     */
    public org.ballistacompute.protobuf.AliasNode.Builder getAliasBuilder() {
      return getAliasFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AliasNodeOrBuilder getAliasOrBuilder() {
      if ((exprTypeCase_ == 2) && (aliasBuilder_ != null)) {
        return aliasBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 2) {
          return (org.ballistacompute.protobuf.AliasNode) exprType_;
        }
        return org.ballistacompute.protobuf.AliasNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * alias
     * </pre>
     *
     * <code>.ballista.protobuf.AliasNode alias = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AliasNode, org.ballistacompute.protobuf.AliasNode.Builder, org.ballistacompute.protobuf.AliasNodeOrBuilder> 
        getAliasFieldBuilder() {
      if (aliasBuilder_ == null) {
        if (!(exprTypeCase_ == 2)) {
          exprType_ = org.ballistacompute.protobuf.AliasNode.getDefaultInstance();
        }
        aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.AliasNode, org.ballistacompute.protobuf.AliasNode.Builder, org.ballistacompute.protobuf.AliasNodeOrBuilder>(
                (org.ballistacompute.protobuf.AliasNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 2;
      onChanged();;
      return aliasBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ScalarValue, org.ballistacompute.protobuf.ScalarValue.Builder, org.ballistacompute.protobuf.ScalarValueOrBuilder> literalBuilder_;
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     * @return Whether the literal field is set.
     */
    @java.lang.Override
    public boolean hasLiteral() {
      return exprTypeCase_ == 3;
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     * @return The literal.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ScalarValue getLiteral() {
      if (literalBuilder_ == null) {
        if (exprTypeCase_ == 3) {
          return (org.ballistacompute.protobuf.ScalarValue) exprType_;
        }
        return org.ballistacompute.protobuf.ScalarValue.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 3) {
          return literalBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.ScalarValue.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     */
    public Builder setLiteral(org.ballistacompute.protobuf.ScalarValue value) {
      if (literalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        literalBuilder_.setMessage(value);
      }
      exprTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     */
    public Builder setLiteral(
        org.ballistacompute.protobuf.ScalarValue.Builder builderForValue) {
      if (literalBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        literalBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     */
    public Builder mergeLiteral(org.ballistacompute.protobuf.ScalarValue value) {
      if (literalBuilder_ == null) {
        if (exprTypeCase_ == 3 &&
            exprType_ != org.ballistacompute.protobuf.ScalarValue.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.ScalarValue.newBuilder((org.ballistacompute.protobuf.ScalarValue) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 3) {
          literalBuilder_.mergeFrom(value);
        }
        literalBuilder_.setMessage(value);
      }
      exprTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     */
    public Builder clearLiteral() {
      if (literalBuilder_ == null) {
        if (exprTypeCase_ == 3) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 3) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        literalBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     */
    public org.ballistacompute.protobuf.ScalarValue.Builder getLiteralBuilder() {
      return getLiteralFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ScalarValueOrBuilder getLiteralOrBuilder() {
      if ((exprTypeCase_ == 3) && (literalBuilder_ != null)) {
        return literalBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 3) {
          return (org.ballistacompute.protobuf.ScalarValue) exprType_;
        }
        return org.ballistacompute.protobuf.ScalarValue.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ScalarValue literal = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ScalarValue, org.ballistacompute.protobuf.ScalarValue.Builder, org.ballistacompute.protobuf.ScalarValueOrBuilder> 
        getLiteralFieldBuilder() {
      if (literalBuilder_ == null) {
        if (!(exprTypeCase_ == 3)) {
          exprType_ = org.ballistacompute.protobuf.ScalarValue.getDefaultInstance();
        }
        literalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ScalarValue, org.ballistacompute.protobuf.ScalarValue.Builder, org.ballistacompute.protobuf.ScalarValueOrBuilder>(
                (org.ballistacompute.protobuf.ScalarValue) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 3;
      onChanged();;
      return literalBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.BinaryExprNode, org.ballistacompute.protobuf.BinaryExprNode.Builder, org.ballistacompute.protobuf.BinaryExprNodeOrBuilder> binaryExprBuilder_;
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     * @return Whether the binaryExpr field is set.
     */
    @java.lang.Override
    public boolean hasBinaryExpr() {
      return exprTypeCase_ == 4;
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     * @return The binaryExpr.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.BinaryExprNode getBinaryExpr() {
      if (binaryExprBuilder_ == null) {
        if (exprTypeCase_ == 4) {
          return (org.ballistacompute.protobuf.BinaryExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.BinaryExprNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 4) {
          return binaryExprBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.BinaryExprNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     */
    public Builder setBinaryExpr(org.ballistacompute.protobuf.BinaryExprNode value) {
      if (binaryExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        binaryExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     */
    public Builder setBinaryExpr(
        org.ballistacompute.protobuf.BinaryExprNode.Builder builderForValue) {
      if (binaryExprBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        binaryExprBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     */
    public Builder mergeBinaryExpr(org.ballistacompute.protobuf.BinaryExprNode value) {
      if (binaryExprBuilder_ == null) {
        if (exprTypeCase_ == 4 &&
            exprType_ != org.ballistacompute.protobuf.BinaryExprNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.BinaryExprNode.newBuilder((org.ballistacompute.protobuf.BinaryExprNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 4) {
          binaryExprBuilder_.mergeFrom(value);
        }
        binaryExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     */
    public Builder clearBinaryExpr() {
      if (binaryExprBuilder_ == null) {
        if (exprTypeCase_ == 4) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 4) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        binaryExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     */
    public org.ballistacompute.protobuf.BinaryExprNode.Builder getBinaryExprBuilder() {
      return getBinaryExprFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.BinaryExprNodeOrBuilder getBinaryExprOrBuilder() {
      if ((exprTypeCase_ == 4) && (binaryExprBuilder_ != null)) {
        return binaryExprBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 4) {
          return (org.ballistacompute.protobuf.BinaryExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.BinaryExprNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * binary expressions
     * </pre>
     *
     * <code>.ballista.protobuf.BinaryExprNode binary_expr = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.BinaryExprNode, org.ballistacompute.protobuf.BinaryExprNode.Builder, org.ballistacompute.protobuf.BinaryExprNodeOrBuilder> 
        getBinaryExprFieldBuilder() {
      if (binaryExprBuilder_ == null) {
        if (!(exprTypeCase_ == 4)) {
          exprType_ = org.ballistacompute.protobuf.BinaryExprNode.getDefaultInstance();
        }
        binaryExprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.BinaryExprNode, org.ballistacompute.protobuf.BinaryExprNode.Builder, org.ballistacompute.protobuf.BinaryExprNodeOrBuilder>(
                (org.ballistacompute.protobuf.BinaryExprNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 4;
      onChanged();;
      return binaryExprBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AggregateExprNode, org.ballistacompute.protobuf.AggregateExprNode.Builder, org.ballistacompute.protobuf.AggregateExprNodeOrBuilder> aggregateExprBuilder_;
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     * @return Whether the aggregateExpr field is set.
     */
    @java.lang.Override
    public boolean hasAggregateExpr() {
      return exprTypeCase_ == 5;
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     * @return The aggregateExpr.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AggregateExprNode getAggregateExpr() {
      if (aggregateExprBuilder_ == null) {
        if (exprTypeCase_ == 5) {
          return (org.ballistacompute.protobuf.AggregateExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.AggregateExprNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 5) {
          return aggregateExprBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.AggregateExprNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     */
    public Builder setAggregateExpr(org.ballistacompute.protobuf.AggregateExprNode value) {
      if (aggregateExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        aggregateExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     */
    public Builder setAggregateExpr(
        org.ballistacompute.protobuf.AggregateExprNode.Builder builderForValue) {
      if (aggregateExprBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        aggregateExprBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     */
    public Builder mergeAggregateExpr(org.ballistacompute.protobuf.AggregateExprNode value) {
      if (aggregateExprBuilder_ == null) {
        if (exprTypeCase_ == 5 &&
            exprType_ != org.ballistacompute.protobuf.AggregateExprNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.AggregateExprNode.newBuilder((org.ballistacompute.protobuf.AggregateExprNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 5) {
          aggregateExprBuilder_.mergeFrom(value);
        }
        aggregateExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     */
    public Builder clearAggregateExpr() {
      if (aggregateExprBuilder_ == null) {
        if (exprTypeCase_ == 5) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 5) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        aggregateExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     */
    public org.ballistacompute.protobuf.AggregateExprNode.Builder getAggregateExprBuilder() {
      return getAggregateExprFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AggregateExprNodeOrBuilder getAggregateExprOrBuilder() {
      if ((exprTypeCase_ == 5) && (aggregateExprBuilder_ != null)) {
        return aggregateExprBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 5) {
          return (org.ballistacompute.protobuf.AggregateExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.AggregateExprNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * aggregate expressions
     * </pre>
     *
     * <code>.ballista.protobuf.AggregateExprNode aggregate_expr = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AggregateExprNode, org.ballistacompute.protobuf.AggregateExprNode.Builder, org.ballistacompute.protobuf.AggregateExprNodeOrBuilder> 
        getAggregateExprFieldBuilder() {
      if (aggregateExprBuilder_ == null) {
        if (!(exprTypeCase_ == 5)) {
          exprType_ = org.ballistacompute.protobuf.AggregateExprNode.getDefaultInstance();
        }
        aggregateExprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.AggregateExprNode, org.ballistacompute.protobuf.AggregateExprNode.Builder, org.ballistacompute.protobuf.AggregateExprNodeOrBuilder>(
                (org.ballistacompute.protobuf.AggregateExprNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 5;
      onChanged();;
      return aggregateExprBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.IsNull, org.ballistacompute.protobuf.IsNull.Builder, org.ballistacompute.protobuf.IsNullOrBuilder> isNullExprBuilder_;
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     * @return Whether the isNullExpr field is set.
     */
    @java.lang.Override
    public boolean hasIsNullExpr() {
      return exprTypeCase_ == 6;
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     * @return The isNullExpr.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.IsNull getIsNullExpr() {
      if (isNullExprBuilder_ == null) {
        if (exprTypeCase_ == 6) {
          return (org.ballistacompute.protobuf.IsNull) exprType_;
        }
        return org.ballistacompute.protobuf.IsNull.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 6) {
          return isNullExprBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.IsNull.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     */
    public Builder setIsNullExpr(org.ballistacompute.protobuf.IsNull value) {
      if (isNullExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        isNullExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     */
    public Builder setIsNullExpr(
        org.ballistacompute.protobuf.IsNull.Builder builderForValue) {
      if (isNullExprBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        isNullExprBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     */
    public Builder mergeIsNullExpr(org.ballistacompute.protobuf.IsNull value) {
      if (isNullExprBuilder_ == null) {
        if (exprTypeCase_ == 6 &&
            exprType_ != org.ballistacompute.protobuf.IsNull.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.IsNull.newBuilder((org.ballistacompute.protobuf.IsNull) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 6) {
          isNullExprBuilder_.mergeFrom(value);
        }
        isNullExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     */
    public Builder clearIsNullExpr() {
      if (isNullExprBuilder_ == null) {
        if (exprTypeCase_ == 6) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 6) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        isNullExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     */
    public org.ballistacompute.protobuf.IsNull.Builder getIsNullExprBuilder() {
      return getIsNullExprFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.IsNullOrBuilder getIsNullExprOrBuilder() {
      if ((exprTypeCase_ == 6) && (isNullExprBuilder_ != null)) {
        return isNullExprBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 6) {
          return (org.ballistacompute.protobuf.IsNull) exprType_;
        }
        return org.ballistacompute.protobuf.IsNull.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * null checks
     * </pre>
     *
     * <code>.ballista.protobuf.IsNull is_null_expr = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.IsNull, org.ballistacompute.protobuf.IsNull.Builder, org.ballistacompute.protobuf.IsNullOrBuilder> 
        getIsNullExprFieldBuilder() {
      if (isNullExprBuilder_ == null) {
        if (!(exprTypeCase_ == 6)) {
          exprType_ = org.ballistacompute.protobuf.IsNull.getDefaultInstance();
        }
        isNullExprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.IsNull, org.ballistacompute.protobuf.IsNull.Builder, org.ballistacompute.protobuf.IsNullOrBuilder>(
                (org.ballistacompute.protobuf.IsNull) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 6;
      onChanged();;
      return isNullExprBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.IsNotNull, org.ballistacompute.protobuf.IsNotNull.Builder, org.ballistacompute.protobuf.IsNotNullOrBuilder> isNotNullExprBuilder_;
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     * @return Whether the isNotNullExpr field is set.
     */
    @java.lang.Override
    public boolean hasIsNotNullExpr() {
      return exprTypeCase_ == 7;
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     * @return The isNotNullExpr.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.IsNotNull getIsNotNullExpr() {
      if (isNotNullExprBuilder_ == null) {
        if (exprTypeCase_ == 7) {
          return (org.ballistacompute.protobuf.IsNotNull) exprType_;
        }
        return org.ballistacompute.protobuf.IsNotNull.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 7) {
          return isNotNullExprBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.IsNotNull.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     */
    public Builder setIsNotNullExpr(org.ballistacompute.protobuf.IsNotNull value) {
      if (isNotNullExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        isNotNullExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     */
    public Builder setIsNotNullExpr(
        org.ballistacompute.protobuf.IsNotNull.Builder builderForValue) {
      if (isNotNullExprBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        isNotNullExprBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     */
    public Builder mergeIsNotNullExpr(org.ballistacompute.protobuf.IsNotNull value) {
      if (isNotNullExprBuilder_ == null) {
        if (exprTypeCase_ == 7 &&
            exprType_ != org.ballistacompute.protobuf.IsNotNull.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.IsNotNull.newBuilder((org.ballistacompute.protobuf.IsNotNull) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 7) {
          isNotNullExprBuilder_.mergeFrom(value);
        }
        isNotNullExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     */
    public Builder clearIsNotNullExpr() {
      if (isNotNullExprBuilder_ == null) {
        if (exprTypeCase_ == 7) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 7) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        isNotNullExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     */
    public org.ballistacompute.protobuf.IsNotNull.Builder getIsNotNullExprBuilder() {
      return getIsNotNullExprFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.IsNotNullOrBuilder getIsNotNullExprOrBuilder() {
      if ((exprTypeCase_ == 7) && (isNotNullExprBuilder_ != null)) {
        return isNotNullExprBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 7) {
          return (org.ballistacompute.protobuf.IsNotNull) exprType_;
        }
        return org.ballistacompute.protobuf.IsNotNull.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.IsNotNull is_not_null_expr = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.IsNotNull, org.ballistacompute.protobuf.IsNotNull.Builder, org.ballistacompute.protobuf.IsNotNullOrBuilder> 
        getIsNotNullExprFieldBuilder() {
      if (isNotNullExprBuilder_ == null) {
        if (!(exprTypeCase_ == 7)) {
          exprType_ = org.ballistacompute.protobuf.IsNotNull.getDefaultInstance();
        }
        isNotNullExprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.IsNotNull, org.ballistacompute.protobuf.IsNotNull.Builder, org.ballistacompute.protobuf.IsNotNullOrBuilder>(
                (org.ballistacompute.protobuf.IsNotNull) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 7;
      onChanged();;
      return isNotNullExprBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Not, org.ballistacompute.protobuf.Not.Builder, org.ballistacompute.protobuf.NotOrBuilder> notExprBuilder_;
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     * @return Whether the notExpr field is set.
     */
    @java.lang.Override
    public boolean hasNotExpr() {
      return exprTypeCase_ == 8;
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     * @return The notExpr.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.Not getNotExpr() {
      if (notExprBuilder_ == null) {
        if (exprTypeCase_ == 8) {
          return (org.ballistacompute.protobuf.Not) exprType_;
        }
        return org.ballistacompute.protobuf.Not.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 8) {
          return notExprBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.Not.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     */
    public Builder setNotExpr(org.ballistacompute.protobuf.Not value) {
      if (notExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        notExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     */
    public Builder setNotExpr(
        org.ballistacompute.protobuf.Not.Builder builderForValue) {
      if (notExprBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        notExprBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     */
    public Builder mergeNotExpr(org.ballistacompute.protobuf.Not value) {
      if (notExprBuilder_ == null) {
        if (exprTypeCase_ == 8 &&
            exprType_ != org.ballistacompute.protobuf.Not.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.Not.newBuilder((org.ballistacompute.protobuf.Not) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 8) {
          notExprBuilder_.mergeFrom(value);
        }
        notExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     */
    public Builder clearNotExpr() {
      if (notExprBuilder_ == null) {
        if (exprTypeCase_ == 8) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 8) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        notExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     */
    public org.ballistacompute.protobuf.Not.Builder getNotExprBuilder() {
      return getNotExprFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.NotOrBuilder getNotExprOrBuilder() {
      if ((exprTypeCase_ == 8) && (notExprBuilder_ != null)) {
        return notExprBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 8) {
          return (org.ballistacompute.protobuf.Not) exprType_;
        }
        return org.ballistacompute.protobuf.Not.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.Not not_expr = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Not, org.ballistacompute.protobuf.Not.Builder, org.ballistacompute.protobuf.NotOrBuilder> 
        getNotExprFieldBuilder() {
      if (notExprBuilder_ == null) {
        if (!(exprTypeCase_ == 8)) {
          exprType_ = org.ballistacompute.protobuf.Not.getDefaultInstance();
        }
        notExprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.Not, org.ballistacompute.protobuf.Not.Builder, org.ballistacompute.protobuf.NotOrBuilder>(
                (org.ballistacompute.protobuf.Not) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 8;
      onChanged();;
      return notExprBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.BetweenNode, org.ballistacompute.protobuf.BetweenNode.Builder, org.ballistacompute.protobuf.BetweenNodeOrBuilder> betweenBuilder_;
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     * @return Whether the between field is set.
     */
    @java.lang.Override
    public boolean hasBetween() {
      return exprTypeCase_ == 9;
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     * @return The between.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.BetweenNode getBetween() {
      if (betweenBuilder_ == null) {
        if (exprTypeCase_ == 9) {
          return (org.ballistacompute.protobuf.BetweenNode) exprType_;
        }
        return org.ballistacompute.protobuf.BetweenNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 9) {
          return betweenBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.BetweenNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     */
    public Builder setBetween(org.ballistacompute.protobuf.BetweenNode value) {
      if (betweenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        betweenBuilder_.setMessage(value);
      }
      exprTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     */
    public Builder setBetween(
        org.ballistacompute.protobuf.BetweenNode.Builder builderForValue) {
      if (betweenBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        betweenBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     */
    public Builder mergeBetween(org.ballistacompute.protobuf.BetweenNode value) {
      if (betweenBuilder_ == null) {
        if (exprTypeCase_ == 9 &&
            exprType_ != org.ballistacompute.protobuf.BetweenNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.BetweenNode.newBuilder((org.ballistacompute.protobuf.BetweenNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 9) {
          betweenBuilder_.mergeFrom(value);
        }
        betweenBuilder_.setMessage(value);
      }
      exprTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     */
    public Builder clearBetween() {
      if (betweenBuilder_ == null) {
        if (exprTypeCase_ == 9) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 9) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        betweenBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     */
    public org.ballistacompute.protobuf.BetweenNode.Builder getBetweenBuilder() {
      return getBetweenFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.BetweenNodeOrBuilder getBetweenOrBuilder() {
      if ((exprTypeCase_ == 9) && (betweenBuilder_ != null)) {
        return betweenBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 9) {
          return (org.ballistacompute.protobuf.BetweenNode) exprType_;
        }
        return org.ballistacompute.protobuf.BetweenNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.BetweenNode between = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.BetweenNode, org.ballistacompute.protobuf.BetweenNode.Builder, org.ballistacompute.protobuf.BetweenNodeOrBuilder> 
        getBetweenFieldBuilder() {
      if (betweenBuilder_ == null) {
        if (!(exprTypeCase_ == 9)) {
          exprType_ = org.ballistacompute.protobuf.BetweenNode.getDefaultInstance();
        }
        betweenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.BetweenNode, org.ballistacompute.protobuf.BetweenNode.Builder, org.ballistacompute.protobuf.BetweenNodeOrBuilder>(
                (org.ballistacompute.protobuf.BetweenNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 9;
      onChanged();;
      return betweenBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CaseNode, org.ballistacompute.protobuf.CaseNode.Builder, org.ballistacompute.protobuf.CaseNodeOrBuilder> caseBuilder_;
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     * @return Whether the case field is set.
     */
    @java.lang.Override
    public boolean hasCase() {
      return exprTypeCase_ == 10;
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     * @return The case.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CaseNode getCase() {
      if (caseBuilder_ == null) {
        if (exprTypeCase_ == 10) {
          return (org.ballistacompute.protobuf.CaseNode) exprType_;
        }
        return org.ballistacompute.protobuf.CaseNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 10) {
          return caseBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.CaseNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     */
    public Builder setCase(org.ballistacompute.protobuf.CaseNode value) {
      if (caseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        caseBuilder_.setMessage(value);
      }
      exprTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     */
    public Builder setCase(
        org.ballistacompute.protobuf.CaseNode.Builder builderForValue) {
      if (caseBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        caseBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     */
    public Builder mergeCase(org.ballistacompute.protobuf.CaseNode value) {
      if (caseBuilder_ == null) {
        if (exprTypeCase_ == 10 &&
            exprType_ != org.ballistacompute.protobuf.CaseNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.CaseNode.newBuilder((org.ballistacompute.protobuf.CaseNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 10) {
          caseBuilder_.mergeFrom(value);
        }
        caseBuilder_.setMessage(value);
      }
      exprTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     */
    public Builder clearCase() {
      if (caseBuilder_ == null) {
        if (exprTypeCase_ == 10) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 10) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        caseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     */
    public org.ballistacompute.protobuf.CaseNode.Builder getCaseBuilder() {
      return getCaseFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CaseNodeOrBuilder getCaseOrBuilder() {
      if ((exprTypeCase_ == 10) && (caseBuilder_ != null)) {
        return caseBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 10) {
          return (org.ballistacompute.protobuf.CaseNode) exprType_;
        }
        return org.ballistacompute.protobuf.CaseNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CaseNode case_ = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CaseNode, org.ballistacompute.protobuf.CaseNode.Builder, org.ballistacompute.protobuf.CaseNodeOrBuilder> 
        getCaseFieldBuilder() {
      if (caseBuilder_ == null) {
        if (!(exprTypeCase_ == 10)) {
          exprType_ = org.ballistacompute.protobuf.CaseNode.getDefaultInstance();
        }
        caseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.CaseNode, org.ballistacompute.protobuf.CaseNode.Builder, org.ballistacompute.protobuf.CaseNodeOrBuilder>(
                (org.ballistacompute.protobuf.CaseNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 10;
      onChanged();;
      return caseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CastNode, org.ballistacompute.protobuf.CastNode.Builder, org.ballistacompute.protobuf.CastNodeOrBuilder> castBuilder_;
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     * @return Whether the cast field is set.
     */
    @java.lang.Override
    public boolean hasCast() {
      return exprTypeCase_ == 11;
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     * @return The cast.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CastNode getCast() {
      if (castBuilder_ == null) {
        if (exprTypeCase_ == 11) {
          return (org.ballistacompute.protobuf.CastNode) exprType_;
        }
        return org.ballistacompute.protobuf.CastNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 11) {
          return castBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.CastNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     */
    public Builder setCast(org.ballistacompute.protobuf.CastNode value) {
      if (castBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        castBuilder_.setMessage(value);
      }
      exprTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     */
    public Builder setCast(
        org.ballistacompute.protobuf.CastNode.Builder builderForValue) {
      if (castBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        castBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     */
    public Builder mergeCast(org.ballistacompute.protobuf.CastNode value) {
      if (castBuilder_ == null) {
        if (exprTypeCase_ == 11 &&
            exprType_ != org.ballistacompute.protobuf.CastNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.CastNode.newBuilder((org.ballistacompute.protobuf.CastNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 11) {
          castBuilder_.mergeFrom(value);
        }
        castBuilder_.setMessage(value);
      }
      exprTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     */
    public Builder clearCast() {
      if (castBuilder_ == null) {
        if (exprTypeCase_ == 11) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 11) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        castBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     */
    public org.ballistacompute.protobuf.CastNode.Builder getCastBuilder() {
      return getCastFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CastNodeOrBuilder getCastOrBuilder() {
      if ((exprTypeCase_ == 11) && (castBuilder_ != null)) {
        return castBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 11) {
          return (org.ballistacompute.protobuf.CastNode) exprType_;
        }
        return org.ballistacompute.protobuf.CastNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CastNode cast = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CastNode, org.ballistacompute.protobuf.CastNode.Builder, org.ballistacompute.protobuf.CastNodeOrBuilder> 
        getCastFieldBuilder() {
      if (castBuilder_ == null) {
        if (!(exprTypeCase_ == 11)) {
          exprType_ = org.ballistacompute.protobuf.CastNode.getDefaultInstance();
        }
        castBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.CastNode, org.ballistacompute.protobuf.CastNode.Builder, org.ballistacompute.protobuf.CastNodeOrBuilder>(
                (org.ballistacompute.protobuf.CastNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 11;
      onChanged();;
      return castBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.SortExprNode, org.ballistacompute.protobuf.SortExprNode.Builder, org.ballistacompute.protobuf.SortExprNodeOrBuilder> sortBuilder_;
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     * @return Whether the sort field is set.
     */
    @java.lang.Override
    public boolean hasSort() {
      return exprTypeCase_ == 12;
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     * @return The sort.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.SortExprNode getSort() {
      if (sortBuilder_ == null) {
        if (exprTypeCase_ == 12) {
          return (org.ballistacompute.protobuf.SortExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.SortExprNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 12) {
          return sortBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.SortExprNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     */
    public Builder setSort(org.ballistacompute.protobuf.SortExprNode value) {
      if (sortBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        sortBuilder_.setMessage(value);
      }
      exprTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     */
    public Builder setSort(
        org.ballistacompute.protobuf.SortExprNode.Builder builderForValue) {
      if (sortBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        sortBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     */
    public Builder mergeSort(org.ballistacompute.protobuf.SortExprNode value) {
      if (sortBuilder_ == null) {
        if (exprTypeCase_ == 12 &&
            exprType_ != org.ballistacompute.protobuf.SortExprNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.SortExprNode.newBuilder((org.ballistacompute.protobuf.SortExprNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 12) {
          sortBuilder_.mergeFrom(value);
        }
        sortBuilder_.setMessage(value);
      }
      exprTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     */
    public Builder clearSort() {
      if (sortBuilder_ == null) {
        if (exprTypeCase_ == 12) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 12) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        sortBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     */
    public org.ballistacompute.protobuf.SortExprNode.Builder getSortBuilder() {
      return getSortFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.SortExprNodeOrBuilder getSortOrBuilder() {
      if ((exprTypeCase_ == 12) && (sortBuilder_ != null)) {
        return sortBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 12) {
          return (org.ballistacompute.protobuf.SortExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.SortExprNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.SortExprNode sort = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.SortExprNode, org.ballistacompute.protobuf.SortExprNode.Builder, org.ballistacompute.protobuf.SortExprNodeOrBuilder> 
        getSortFieldBuilder() {
      if (sortBuilder_ == null) {
        if (!(exprTypeCase_ == 12)) {
          exprType_ = org.ballistacompute.protobuf.SortExprNode.getDefaultInstance();
        }
        sortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.SortExprNode, org.ballistacompute.protobuf.SortExprNode.Builder, org.ballistacompute.protobuf.SortExprNodeOrBuilder>(
                (org.ballistacompute.protobuf.SortExprNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 12;
      onChanged();;
      return sortBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.NegativeNode, org.ballistacompute.protobuf.NegativeNode.Builder, org.ballistacompute.protobuf.NegativeNodeOrBuilder> negativeBuilder_;
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     * @return Whether the negative field is set.
     */
    @java.lang.Override
    public boolean hasNegative() {
      return exprTypeCase_ == 13;
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     * @return The negative.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.NegativeNode getNegative() {
      if (negativeBuilder_ == null) {
        if (exprTypeCase_ == 13) {
          return (org.ballistacompute.protobuf.NegativeNode) exprType_;
        }
        return org.ballistacompute.protobuf.NegativeNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 13) {
          return negativeBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.NegativeNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     */
    public Builder setNegative(org.ballistacompute.protobuf.NegativeNode value) {
      if (negativeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        negativeBuilder_.setMessage(value);
      }
      exprTypeCase_ = 13;
      return this;
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     */
    public Builder setNegative(
        org.ballistacompute.protobuf.NegativeNode.Builder builderForValue) {
      if (negativeBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        negativeBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 13;
      return this;
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     */
    public Builder mergeNegative(org.ballistacompute.protobuf.NegativeNode value) {
      if (negativeBuilder_ == null) {
        if (exprTypeCase_ == 13 &&
            exprType_ != org.ballistacompute.protobuf.NegativeNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.NegativeNode.newBuilder((org.ballistacompute.protobuf.NegativeNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 13) {
          negativeBuilder_.mergeFrom(value);
        }
        negativeBuilder_.setMessage(value);
      }
      exprTypeCase_ = 13;
      return this;
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     */
    public Builder clearNegative() {
      if (negativeBuilder_ == null) {
        if (exprTypeCase_ == 13) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 13) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        negativeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     */
    public org.ballistacompute.protobuf.NegativeNode.Builder getNegativeBuilder() {
      return getNegativeFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.NegativeNodeOrBuilder getNegativeOrBuilder() {
      if ((exprTypeCase_ == 13) && (negativeBuilder_ != null)) {
        return negativeBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 13) {
          return (org.ballistacompute.protobuf.NegativeNode) exprType_;
        }
        return org.ballistacompute.protobuf.NegativeNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.NegativeNode negative = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.NegativeNode, org.ballistacompute.protobuf.NegativeNode.Builder, org.ballistacompute.protobuf.NegativeNodeOrBuilder> 
        getNegativeFieldBuilder() {
      if (negativeBuilder_ == null) {
        if (!(exprTypeCase_ == 13)) {
          exprType_ = org.ballistacompute.protobuf.NegativeNode.getDefaultInstance();
        }
        negativeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.NegativeNode, org.ballistacompute.protobuf.NegativeNode.Builder, org.ballistacompute.protobuf.NegativeNodeOrBuilder>(
                (org.ballistacompute.protobuf.NegativeNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 13;
      onChanged();;
      return negativeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.InListNode, org.ballistacompute.protobuf.InListNode.Builder, org.ballistacompute.protobuf.InListNodeOrBuilder> inListBuilder_;
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     * @return Whether the inList field is set.
     */
    @java.lang.Override
    public boolean hasInList() {
      return exprTypeCase_ == 14;
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     * @return The inList.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.InListNode getInList() {
      if (inListBuilder_ == null) {
        if (exprTypeCase_ == 14) {
          return (org.ballistacompute.protobuf.InListNode) exprType_;
        }
        return org.ballistacompute.protobuf.InListNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 14) {
          return inListBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.InListNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     */
    public Builder setInList(org.ballistacompute.protobuf.InListNode value) {
      if (inListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        inListBuilder_.setMessage(value);
      }
      exprTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     */
    public Builder setInList(
        org.ballistacompute.protobuf.InListNode.Builder builderForValue) {
      if (inListBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        inListBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     */
    public Builder mergeInList(org.ballistacompute.protobuf.InListNode value) {
      if (inListBuilder_ == null) {
        if (exprTypeCase_ == 14 &&
            exprType_ != org.ballistacompute.protobuf.InListNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.InListNode.newBuilder((org.ballistacompute.protobuf.InListNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 14) {
          inListBuilder_.mergeFrom(value);
        }
        inListBuilder_.setMessage(value);
      }
      exprTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     */
    public Builder clearInList() {
      if (inListBuilder_ == null) {
        if (exprTypeCase_ == 14) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 14) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        inListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     */
    public org.ballistacompute.protobuf.InListNode.Builder getInListBuilder() {
      return getInListFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.InListNodeOrBuilder getInListOrBuilder() {
      if ((exprTypeCase_ == 14) && (inListBuilder_ != null)) {
        return inListBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 14) {
          return (org.ballistacompute.protobuf.InListNode) exprType_;
        }
        return org.ballistacompute.protobuf.InListNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.InListNode in_list = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.InListNode, org.ballistacompute.protobuf.InListNode.Builder, org.ballistacompute.protobuf.InListNodeOrBuilder> 
        getInListFieldBuilder() {
      if (inListBuilder_ == null) {
        if (!(exprTypeCase_ == 14)) {
          exprType_ = org.ballistacompute.protobuf.InListNode.getDefaultInstance();
        }
        inListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.InListNode, org.ballistacompute.protobuf.InListNode.Builder, org.ballistacompute.protobuf.InListNodeOrBuilder>(
                (org.ballistacompute.protobuf.InListNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 14;
      onChanged();;
      return inListBuilder_;
    }

    /**
     * <code>bool wildcard = 15;</code>
     * @return Whether the wildcard field is set.
     */
    public boolean hasWildcard() {
      return exprTypeCase_ == 15;
    }
    /**
     * <code>bool wildcard = 15;</code>
     * @return The wildcard.
     */
    public boolean getWildcard() {
      if (exprTypeCase_ == 15) {
        return (java.lang.Boolean) exprType_;
      }
      return false;
    }
    /**
     * <code>bool wildcard = 15;</code>
     * @param value The wildcard to set.
     * @return This builder for chaining.
     */
    public Builder setWildcard(boolean value) {
      exprTypeCase_ = 15;
      exprType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool wildcard = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearWildcard() {
      if (exprTypeCase_ == 15) {
        exprTypeCase_ = 0;
        exprType_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ScalarFunctionNode, org.ballistacompute.protobuf.ScalarFunctionNode.Builder, org.ballistacompute.protobuf.ScalarFunctionNodeOrBuilder> scalarFunctionBuilder_;
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     * @return Whether the scalarFunction field is set.
     */
    @java.lang.Override
    public boolean hasScalarFunction() {
      return exprTypeCase_ == 16;
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     * @return The scalarFunction.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ScalarFunctionNode getScalarFunction() {
      if (scalarFunctionBuilder_ == null) {
        if (exprTypeCase_ == 16) {
          return (org.ballistacompute.protobuf.ScalarFunctionNode) exprType_;
        }
        return org.ballistacompute.protobuf.ScalarFunctionNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 16) {
          return scalarFunctionBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.ScalarFunctionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     */
    public Builder setScalarFunction(org.ballistacompute.protobuf.ScalarFunctionNode value) {
      if (scalarFunctionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        scalarFunctionBuilder_.setMessage(value);
      }
      exprTypeCase_ = 16;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     */
    public Builder setScalarFunction(
        org.ballistacompute.protobuf.ScalarFunctionNode.Builder builderForValue) {
      if (scalarFunctionBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        scalarFunctionBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 16;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     */
    public Builder mergeScalarFunction(org.ballistacompute.protobuf.ScalarFunctionNode value) {
      if (scalarFunctionBuilder_ == null) {
        if (exprTypeCase_ == 16 &&
            exprType_ != org.ballistacompute.protobuf.ScalarFunctionNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.ScalarFunctionNode.newBuilder((org.ballistacompute.protobuf.ScalarFunctionNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 16) {
          scalarFunctionBuilder_.mergeFrom(value);
        }
        scalarFunctionBuilder_.setMessage(value);
      }
      exprTypeCase_ = 16;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     */
    public Builder clearScalarFunction() {
      if (scalarFunctionBuilder_ == null) {
        if (exprTypeCase_ == 16) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 16) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        scalarFunctionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     */
    public org.ballistacompute.protobuf.ScalarFunctionNode.Builder getScalarFunctionBuilder() {
      return getScalarFunctionFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ScalarFunctionNodeOrBuilder getScalarFunctionOrBuilder() {
      if ((exprTypeCase_ == 16) && (scalarFunctionBuilder_ != null)) {
        return scalarFunctionBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 16) {
          return (org.ballistacompute.protobuf.ScalarFunctionNode) exprType_;
        }
        return org.ballistacompute.protobuf.ScalarFunctionNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ScalarFunctionNode scalar_function = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ScalarFunctionNode, org.ballistacompute.protobuf.ScalarFunctionNode.Builder, org.ballistacompute.protobuf.ScalarFunctionNodeOrBuilder> 
        getScalarFunctionFieldBuilder() {
      if (scalarFunctionBuilder_ == null) {
        if (!(exprTypeCase_ == 16)) {
          exprType_ = org.ballistacompute.protobuf.ScalarFunctionNode.getDefaultInstance();
        }
        scalarFunctionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ScalarFunctionNode, org.ballistacompute.protobuf.ScalarFunctionNode.Builder, org.ballistacompute.protobuf.ScalarFunctionNodeOrBuilder>(
                (org.ballistacompute.protobuf.ScalarFunctionNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 16;
      onChanged();;
      return scalarFunctionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.TryCastNode, org.ballistacompute.protobuf.TryCastNode.Builder, org.ballistacompute.protobuf.TryCastNodeOrBuilder> tryCastBuilder_;
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     * @return Whether the tryCast field is set.
     */
    @java.lang.Override
    public boolean hasTryCast() {
      return exprTypeCase_ == 17;
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     * @return The tryCast.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.TryCastNode getTryCast() {
      if (tryCastBuilder_ == null) {
        if (exprTypeCase_ == 17) {
          return (org.ballistacompute.protobuf.TryCastNode) exprType_;
        }
        return org.ballistacompute.protobuf.TryCastNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 17) {
          return tryCastBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.TryCastNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     */
    public Builder setTryCast(org.ballistacompute.protobuf.TryCastNode value) {
      if (tryCastBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        tryCastBuilder_.setMessage(value);
      }
      exprTypeCase_ = 17;
      return this;
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     */
    public Builder setTryCast(
        org.ballistacompute.protobuf.TryCastNode.Builder builderForValue) {
      if (tryCastBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        tryCastBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 17;
      return this;
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     */
    public Builder mergeTryCast(org.ballistacompute.protobuf.TryCastNode value) {
      if (tryCastBuilder_ == null) {
        if (exprTypeCase_ == 17 &&
            exprType_ != org.ballistacompute.protobuf.TryCastNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.TryCastNode.newBuilder((org.ballistacompute.protobuf.TryCastNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 17) {
          tryCastBuilder_.mergeFrom(value);
        }
        tryCastBuilder_.setMessage(value);
      }
      exprTypeCase_ = 17;
      return this;
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     */
    public Builder clearTryCast() {
      if (tryCastBuilder_ == null) {
        if (exprTypeCase_ == 17) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 17) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        tryCastBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     */
    public org.ballistacompute.protobuf.TryCastNode.Builder getTryCastBuilder() {
      return getTryCastFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.TryCastNodeOrBuilder getTryCastOrBuilder() {
      if ((exprTypeCase_ == 17) && (tryCastBuilder_ != null)) {
        return tryCastBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 17) {
          return (org.ballistacompute.protobuf.TryCastNode) exprType_;
        }
        return org.ballistacompute.protobuf.TryCastNode.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.TryCastNode try_cast = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.TryCastNode, org.ballistacompute.protobuf.TryCastNode.Builder, org.ballistacompute.protobuf.TryCastNodeOrBuilder> 
        getTryCastFieldBuilder() {
      if (tryCastBuilder_ == null) {
        if (!(exprTypeCase_ == 17)) {
          exprType_ = org.ballistacompute.protobuf.TryCastNode.getDefaultInstance();
        }
        tryCastBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.TryCastNode, org.ballistacompute.protobuf.TryCastNode.Builder, org.ballistacompute.protobuf.TryCastNodeOrBuilder>(
                (org.ballistacompute.protobuf.TryCastNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 17;
      onChanged();;
      return tryCastBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.WindowExprNode, org.ballistacompute.protobuf.WindowExprNode.Builder, org.ballistacompute.protobuf.WindowExprNodeOrBuilder> windowExprBuilder_;
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     * @return Whether the windowExpr field is set.
     */
    @java.lang.Override
    public boolean hasWindowExpr() {
      return exprTypeCase_ == 18;
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     * @return The windowExpr.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.WindowExprNode getWindowExpr() {
      if (windowExprBuilder_ == null) {
        if (exprTypeCase_ == 18) {
          return (org.ballistacompute.protobuf.WindowExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.WindowExprNode.getDefaultInstance();
      } else {
        if (exprTypeCase_ == 18) {
          return windowExprBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.WindowExprNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     */
    public Builder setWindowExpr(org.ballistacompute.protobuf.WindowExprNode value) {
      if (windowExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprType_ = value;
        onChanged();
      } else {
        windowExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 18;
      return this;
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     */
    public Builder setWindowExpr(
        org.ballistacompute.protobuf.WindowExprNode.Builder builderForValue) {
      if (windowExprBuilder_ == null) {
        exprType_ = builderForValue.build();
        onChanged();
      } else {
        windowExprBuilder_.setMessage(builderForValue.build());
      }
      exprTypeCase_ = 18;
      return this;
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     */
    public Builder mergeWindowExpr(org.ballistacompute.protobuf.WindowExprNode value) {
      if (windowExprBuilder_ == null) {
        if (exprTypeCase_ == 18 &&
            exprType_ != org.ballistacompute.protobuf.WindowExprNode.getDefaultInstance()) {
          exprType_ = org.ballistacompute.protobuf.WindowExprNode.newBuilder((org.ballistacompute.protobuf.WindowExprNode) exprType_)
              .mergeFrom(value).buildPartial();
        } else {
          exprType_ = value;
        }
        onChanged();
      } else {
        if (exprTypeCase_ == 18) {
          windowExprBuilder_.mergeFrom(value);
        }
        windowExprBuilder_.setMessage(value);
      }
      exprTypeCase_ = 18;
      return this;
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     */
    public Builder clearWindowExpr() {
      if (windowExprBuilder_ == null) {
        if (exprTypeCase_ == 18) {
          exprTypeCase_ = 0;
          exprType_ = null;
          onChanged();
        }
      } else {
        if (exprTypeCase_ == 18) {
          exprTypeCase_ = 0;
          exprType_ = null;
        }
        windowExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     */
    public org.ballistacompute.protobuf.WindowExprNode.Builder getWindowExprBuilder() {
      return getWindowExprFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.WindowExprNodeOrBuilder getWindowExprOrBuilder() {
      if ((exprTypeCase_ == 18) && (windowExprBuilder_ != null)) {
        return windowExprBuilder_.getMessageOrBuilder();
      } else {
        if (exprTypeCase_ == 18) {
          return (org.ballistacompute.protobuf.WindowExprNode) exprType_;
        }
        return org.ballistacompute.protobuf.WindowExprNode.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * window expressions
     * </pre>
     *
     * <code>.ballista.protobuf.WindowExprNode window_expr = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.WindowExprNode, org.ballistacompute.protobuf.WindowExprNode.Builder, org.ballistacompute.protobuf.WindowExprNodeOrBuilder> 
        getWindowExprFieldBuilder() {
      if (windowExprBuilder_ == null) {
        if (!(exprTypeCase_ == 18)) {
          exprType_ = org.ballistacompute.protobuf.WindowExprNode.getDefaultInstance();
        }
        windowExprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.WindowExprNode, org.ballistacompute.protobuf.WindowExprNode.Builder, org.ballistacompute.protobuf.WindowExprNodeOrBuilder>(
                (org.ballistacompute.protobuf.WindowExprNode) exprType_,
                getParentForChildren(),
                isClean());
        exprType_ = null;
      }
      exprTypeCase_ = 18;
      onChanged();;
      return windowExprBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ballista.protobuf.LogicalExprNode)
  }

  // @@protoc_insertion_point(class_scope:ballista.protobuf.LogicalExprNode)
  private static final org.ballistacompute.protobuf.LogicalExprNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.ballistacompute.protobuf.LogicalExprNode();
  }

  public static org.ballistacompute.protobuf.LogicalExprNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LogicalExprNode>
      PARSER = new com.google.protobuf.AbstractParser<LogicalExprNode>() {
    @java.lang.Override
    public LogicalExprNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LogicalExprNode(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LogicalExprNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LogicalExprNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.ballistacompute.protobuf.LogicalExprNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

