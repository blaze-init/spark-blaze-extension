// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

/**
 * Protobuf type {@code ballista.protobuf.ListingTableScanNode}
 */
public final class ListingTableScanNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ballista.protobuf.ListingTableScanNode)
    ListingTableScanNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ListingTableScanNode.newBuilder() to construct.
  private ListingTableScanNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListingTableScanNode() {
    tableName_ = "";
    path_ = "";
    fileExtension_ = "";
    filters_ = java.util.Collections.emptyList();
    tablePartitionCols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ListingTableScanNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ListingTableScanNode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            tableName_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            path_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            fileExtension_ = s;
            break;
          }
          case 34: {
            org.ballistacompute.protobuf.ProjectionColumns.Builder subBuilder = null;
            if (projection_ != null) {
              subBuilder = projection_.toBuilder();
            }
            projection_ = input.readMessage(org.ballistacompute.protobuf.ProjectionColumns.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(projection_);
              projection_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            org.ballistacompute.protobuf.Schema.Builder subBuilder = null;
            if (schema_ != null) {
              subBuilder = schema_.toBuilder();
            }
            schema_ = input.readMessage(org.ballistacompute.protobuf.Schema.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(schema_);
              schema_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              filters_ = new java.util.ArrayList<org.ballistacompute.protobuf.LogicalExprNode>();
              mutable_bitField0_ |= 0x00000001;
            }
            filters_.add(
                input.readMessage(org.ballistacompute.protobuf.LogicalExprNode.parser(), extensionRegistry));
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              tablePartitionCols_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            tablePartitionCols_.add(s);
            break;
          }
          case 64: {

            collectStat_ = input.readBool();
            break;
          }
          case 72: {

            targetPartitions_ = input.readUInt32();
            break;
          }
          case 82: {
            org.ballistacompute.protobuf.CsvFormat.Builder subBuilder = null;
            if (fileFormatTypeCase_ == 10) {
              subBuilder = ((org.ballistacompute.protobuf.CsvFormat) fileFormatType_).toBuilder();
            }
            fileFormatType_ =
                input.readMessage(org.ballistacompute.protobuf.CsvFormat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.CsvFormat) fileFormatType_);
              fileFormatType_ = subBuilder.buildPartial();
            }
            fileFormatTypeCase_ = 10;
            break;
          }
          case 90: {
            org.ballistacompute.protobuf.ParquetFormat.Builder subBuilder = null;
            if (fileFormatTypeCase_ == 11) {
              subBuilder = ((org.ballistacompute.protobuf.ParquetFormat) fileFormatType_).toBuilder();
            }
            fileFormatType_ =
                input.readMessage(org.ballistacompute.protobuf.ParquetFormat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.ParquetFormat) fileFormatType_);
              fileFormatType_ = subBuilder.buildPartial();
            }
            fileFormatTypeCase_ = 11;
            break;
          }
          case 98: {
            org.ballistacompute.protobuf.AvroFormat.Builder subBuilder = null;
            if (fileFormatTypeCase_ == 12) {
              subBuilder = ((org.ballistacompute.protobuf.AvroFormat) fileFormatType_).toBuilder();
            }
            fileFormatType_ =
                input.readMessage(org.ballistacompute.protobuf.AvroFormat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.ballistacompute.protobuf.AvroFormat) fileFormatType_);
              fileFormatType_ = subBuilder.buildPartial();
            }
            fileFormatTypeCase_ = 12;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        filters_ = java.util.Collections.unmodifiableList(filters_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        tablePartitionCols_ = tablePartitionCols_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_ListingTableScanNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_ListingTableScanNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.ballistacompute.protobuf.ListingTableScanNode.class, org.ballistacompute.protobuf.ListingTableScanNode.Builder.class);
  }

  private int fileFormatTypeCase_ = 0;
  private java.lang.Object fileFormatType_;
  public enum FileFormatTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CSV(10),
    PARQUET(11),
    AVRO(12),
    FILEFORMATTYPE_NOT_SET(0);
    private final int value;
    private FileFormatTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FileFormatTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static FileFormatTypeCase forNumber(int value) {
      switch (value) {
        case 10: return CSV;
        case 11: return PARQUET;
        case 12: return AVRO;
        case 0: return FILEFORMATTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public FileFormatTypeCase
  getFileFormatTypeCase() {
    return FileFormatTypeCase.forNumber(
        fileFormatTypeCase_);
  }

  public static final int TABLE_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object tableName_;
  /**
   * <code>string table_name = 1;</code>
   * @return The tableName.
   */
  @java.lang.Override
  public java.lang.String getTableName() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tableName_ = s;
      return s;
    }
  }
  /**
   * <code>string table_name = 1;</code>
   * @return The bytes for tableName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTableNameBytes() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tableName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PATH_FIELD_NUMBER = 2;
  private volatile java.lang.Object path_;
  /**
   * <code>string path = 2;</code>
   * @return The path.
   */
  @java.lang.Override
  public java.lang.String getPath() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      path_ = s;
      return s;
    }
  }
  /**
   * <code>string path = 2;</code>
   * @return The bytes for path.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPathBytes() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      path_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILE_EXTENSION_FIELD_NUMBER = 3;
  private volatile java.lang.Object fileExtension_;
  /**
   * <code>string file_extension = 3;</code>
   * @return The fileExtension.
   */
  @java.lang.Override
  public java.lang.String getFileExtension() {
    java.lang.Object ref = fileExtension_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileExtension_ = s;
      return s;
    }
  }
  /**
   * <code>string file_extension = 3;</code>
   * @return The bytes for fileExtension.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileExtensionBytes() {
    java.lang.Object ref = fileExtension_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileExtension_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROJECTION_FIELD_NUMBER = 4;
  private org.ballistacompute.protobuf.ProjectionColumns projection_;
  /**
   * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
   * @return Whether the projection field is set.
   */
  @java.lang.Override
  public boolean hasProjection() {
    return projection_ != null;
  }
  /**
   * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
   * @return The projection.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ProjectionColumns getProjection() {
    return projection_ == null ? org.ballistacompute.protobuf.ProjectionColumns.getDefaultInstance() : projection_;
  }
  /**
   * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ProjectionColumnsOrBuilder getProjectionOrBuilder() {
    return getProjection();
  }

  public static final int SCHEMA_FIELD_NUMBER = 5;
  private org.ballistacompute.protobuf.Schema schema_;
  /**
   * <code>.ballista.protobuf.Schema schema = 5;</code>
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return schema_ != null;
  }
  /**
   * <code>.ballista.protobuf.Schema schema = 5;</code>
   * @return The schema.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.Schema getSchema() {
    return schema_ == null ? org.ballistacompute.protobuf.Schema.getDefaultInstance() : schema_;
  }
  /**
   * <code>.ballista.protobuf.Schema schema = 5;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.SchemaOrBuilder getSchemaOrBuilder() {
    return getSchema();
  }

  public static final int FILTERS_FIELD_NUMBER = 6;
  private java.util.List<org.ballistacompute.protobuf.LogicalExprNode> filters_;
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  @java.lang.Override
  public java.util.List<org.ballistacompute.protobuf.LogicalExprNode> getFiltersList() {
    return filters_;
  }
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.ballistacompute.protobuf.LogicalExprNodeOrBuilder> 
      getFiltersOrBuilderList() {
    return filters_;
  }
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  @java.lang.Override
  public int getFiltersCount() {
    return filters_.size();
  }
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.LogicalExprNode getFilters(int index) {
    return filters_.get(index);
  }
  /**
   * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.LogicalExprNodeOrBuilder getFiltersOrBuilder(
      int index) {
    return filters_.get(index);
  }

  public static final int TABLE_PARTITION_COLS_FIELD_NUMBER = 7;
  private com.google.protobuf.LazyStringList tablePartitionCols_;
  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @return A list containing the tablePartitionCols.
   */
  public com.google.protobuf.ProtocolStringList
      getTablePartitionColsList() {
    return tablePartitionCols_;
  }
  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @return The count of tablePartitionCols.
   */
  public int getTablePartitionColsCount() {
    return tablePartitionCols_.size();
  }
  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @param index The index of the element to return.
   * @return The tablePartitionCols at the given index.
   */
  public java.lang.String getTablePartitionCols(int index) {
    return tablePartitionCols_.get(index);
  }
  /**
   * <code>repeated string table_partition_cols = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the tablePartitionCols at the given index.
   */
  public com.google.protobuf.ByteString
      getTablePartitionColsBytes(int index) {
    return tablePartitionCols_.getByteString(index);
  }

  public static final int COLLECT_STAT_FIELD_NUMBER = 8;
  private boolean collectStat_;
  /**
   * <code>bool collect_stat = 8;</code>
   * @return The collectStat.
   */
  @java.lang.Override
  public boolean getCollectStat() {
    return collectStat_;
  }

  public static final int TARGET_PARTITIONS_FIELD_NUMBER = 9;
  private int targetPartitions_;
  /**
   * <code>uint32 target_partitions = 9;</code>
   * @return The targetPartitions.
   */
  @java.lang.Override
  public int getTargetPartitions() {
    return targetPartitions_;
  }

  public static final int CSV_FIELD_NUMBER = 10;
  /**
   * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
   * @return Whether the csv field is set.
   */
  @java.lang.Override
  public boolean hasCsv() {
    return fileFormatTypeCase_ == 10;
  }
  /**
   * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
   * @return The csv.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CsvFormat getCsv() {
    if (fileFormatTypeCase_ == 10) {
       return (org.ballistacompute.protobuf.CsvFormat) fileFormatType_;
    }
    return org.ballistacompute.protobuf.CsvFormat.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.CsvFormatOrBuilder getCsvOrBuilder() {
    if (fileFormatTypeCase_ == 10) {
       return (org.ballistacompute.protobuf.CsvFormat) fileFormatType_;
    }
    return org.ballistacompute.protobuf.CsvFormat.getDefaultInstance();
  }

  public static final int PARQUET_FIELD_NUMBER = 11;
  /**
   * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
   * @return Whether the parquet field is set.
   */
  @java.lang.Override
  public boolean hasParquet() {
    return fileFormatTypeCase_ == 11;
  }
  /**
   * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
   * @return The parquet.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ParquetFormat getParquet() {
    if (fileFormatTypeCase_ == 11) {
       return (org.ballistacompute.protobuf.ParquetFormat) fileFormatType_;
    }
    return org.ballistacompute.protobuf.ParquetFormat.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.ParquetFormatOrBuilder getParquetOrBuilder() {
    if (fileFormatTypeCase_ == 11) {
       return (org.ballistacompute.protobuf.ParquetFormat) fileFormatType_;
    }
    return org.ballistacompute.protobuf.ParquetFormat.getDefaultInstance();
  }

  public static final int AVRO_FIELD_NUMBER = 12;
  /**
   * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
   * @return Whether the avro field is set.
   */
  @java.lang.Override
  public boolean hasAvro() {
    return fileFormatTypeCase_ == 12;
  }
  /**
   * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
   * @return The avro.
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AvroFormat getAvro() {
    if (fileFormatTypeCase_ == 12) {
       return (org.ballistacompute.protobuf.AvroFormat) fileFormatType_;
    }
    return org.ballistacompute.protobuf.AvroFormat.getDefaultInstance();
  }
  /**
   * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
   */
  @java.lang.Override
  public org.ballistacompute.protobuf.AvroFormatOrBuilder getAvroOrBuilder() {
    if (fileFormatTypeCase_ == 12) {
       return (org.ballistacompute.protobuf.AvroFormat) fileFormatType_;
    }
    return org.ballistacompute.protobuf.AvroFormat.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileExtension_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fileExtension_);
    }
    if (projection_ != null) {
      output.writeMessage(4, getProjection());
    }
    if (schema_ != null) {
      output.writeMessage(5, getSchema());
    }
    for (int i = 0; i < filters_.size(); i++) {
      output.writeMessage(6, filters_.get(i));
    }
    for (int i = 0; i < tablePartitionCols_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, tablePartitionCols_.getRaw(i));
    }
    if (collectStat_ != false) {
      output.writeBool(8, collectStat_);
    }
    if (targetPartitions_ != 0) {
      output.writeUInt32(9, targetPartitions_);
    }
    if (fileFormatTypeCase_ == 10) {
      output.writeMessage(10, (org.ballistacompute.protobuf.CsvFormat) fileFormatType_);
    }
    if (fileFormatTypeCase_ == 11) {
      output.writeMessage(11, (org.ballistacompute.protobuf.ParquetFormat) fileFormatType_);
    }
    if (fileFormatTypeCase_ == 12) {
      output.writeMessage(12, (org.ballistacompute.protobuf.AvroFormat) fileFormatType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileExtension_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fileExtension_);
    }
    if (projection_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getProjection());
    }
    if (schema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSchema());
    }
    for (int i = 0; i < filters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, filters_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tablePartitionCols_.size(); i++) {
        dataSize += computeStringSizeNoTag(tablePartitionCols_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTablePartitionColsList().size();
    }
    if (collectStat_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, collectStat_);
    }
    if (targetPartitions_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, targetPartitions_);
    }
    if (fileFormatTypeCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (org.ballistacompute.protobuf.CsvFormat) fileFormatType_);
    }
    if (fileFormatTypeCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (org.ballistacompute.protobuf.ParquetFormat) fileFormatType_);
    }
    if (fileFormatTypeCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (org.ballistacompute.protobuf.AvroFormat) fileFormatType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.ballistacompute.protobuf.ListingTableScanNode)) {
      return super.equals(obj);
    }
    org.ballistacompute.protobuf.ListingTableScanNode other = (org.ballistacompute.protobuf.ListingTableScanNode) obj;

    if (!getTableName()
        .equals(other.getTableName())) return false;
    if (!getPath()
        .equals(other.getPath())) return false;
    if (!getFileExtension()
        .equals(other.getFileExtension())) return false;
    if (hasProjection() != other.hasProjection()) return false;
    if (hasProjection()) {
      if (!getProjection()
          .equals(other.getProjection())) return false;
    }
    if (hasSchema() != other.hasSchema()) return false;
    if (hasSchema()) {
      if (!getSchema()
          .equals(other.getSchema())) return false;
    }
    if (!getFiltersList()
        .equals(other.getFiltersList())) return false;
    if (!getTablePartitionColsList()
        .equals(other.getTablePartitionColsList())) return false;
    if (getCollectStat()
        != other.getCollectStat()) return false;
    if (getTargetPartitions()
        != other.getTargetPartitions()) return false;
    if (!getFileFormatTypeCase().equals(other.getFileFormatTypeCase())) return false;
    switch (fileFormatTypeCase_) {
      case 10:
        if (!getCsv()
            .equals(other.getCsv())) return false;
        break;
      case 11:
        if (!getParquet()
            .equals(other.getParquet())) return false;
        break;
      case 12:
        if (!getAvro()
            .equals(other.getAvro())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getTableName().hashCode();
    hash = (37 * hash) + PATH_FIELD_NUMBER;
    hash = (53 * hash) + getPath().hashCode();
    hash = (37 * hash) + FILE_EXTENSION_FIELD_NUMBER;
    hash = (53 * hash) + getFileExtension().hashCode();
    if (hasProjection()) {
      hash = (37 * hash) + PROJECTION_FIELD_NUMBER;
      hash = (53 * hash) + getProjection().hashCode();
    }
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    if (getFiltersCount() > 0) {
      hash = (37 * hash) + FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getFiltersList().hashCode();
    }
    if (getTablePartitionColsCount() > 0) {
      hash = (37 * hash) + TABLE_PARTITION_COLS_FIELD_NUMBER;
      hash = (53 * hash) + getTablePartitionColsList().hashCode();
    }
    hash = (37 * hash) + COLLECT_STAT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCollectStat());
    hash = (37 * hash) + TARGET_PARTITIONS_FIELD_NUMBER;
    hash = (53 * hash) + getTargetPartitions();
    switch (fileFormatTypeCase_) {
      case 10:
        hash = (37 * hash) + CSV_FIELD_NUMBER;
        hash = (53 * hash) + getCsv().hashCode();
        break;
      case 11:
        hash = (37 * hash) + PARQUET_FIELD_NUMBER;
        hash = (53 * hash) + getParquet().hashCode();
        break;
      case 12:
        hash = (37 * hash) + AVRO_FIELD_NUMBER;
        hash = (53 * hash) + getAvro().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.ballistacompute.protobuf.ListingTableScanNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.ballistacompute.protobuf.ListingTableScanNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ballista.protobuf.ListingTableScanNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ballista.protobuf.ListingTableScanNode)
      org.ballistacompute.protobuf.ListingTableScanNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_ListingTableScanNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_ListingTableScanNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.ballistacompute.protobuf.ListingTableScanNode.class, org.ballistacompute.protobuf.ListingTableScanNode.Builder.class);
    }

    // Construct using org.ballistacompute.protobuf.ListingTableScanNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFiltersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      tableName_ = "";

      path_ = "";

      fileExtension_ = "";

      if (projectionBuilder_ == null) {
        projection_ = null;
      } else {
        projection_ = null;
        projectionBuilder_ = null;
      }
      if (schemaBuilder_ == null) {
        schema_ = null;
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        filtersBuilder_.clear();
      }
      tablePartitionCols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      collectStat_ = false;

      targetPartitions_ = 0;

      fileFormatTypeCase_ = 0;
      fileFormatType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.ballistacompute.protobuf.BallistaProto.internal_static_ballista_protobuf_ListingTableScanNode_descriptor;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.ListingTableScanNode getDefaultInstanceForType() {
      return org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance();
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.ListingTableScanNode build() {
      org.ballistacompute.protobuf.ListingTableScanNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.ballistacompute.protobuf.ListingTableScanNode buildPartial() {
      org.ballistacompute.protobuf.ListingTableScanNode result = new org.ballistacompute.protobuf.ListingTableScanNode(this);
      int from_bitField0_ = bitField0_;
      result.tableName_ = tableName_;
      result.path_ = path_;
      result.fileExtension_ = fileExtension_;
      if (projectionBuilder_ == null) {
        result.projection_ = projection_;
      } else {
        result.projection_ = projectionBuilder_.build();
      }
      if (schemaBuilder_ == null) {
        result.schema_ = schema_;
      } else {
        result.schema_ = schemaBuilder_.build();
      }
      if (filtersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          filters_ = java.util.Collections.unmodifiableList(filters_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.filters_ = filters_;
      } else {
        result.filters_ = filtersBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        tablePartitionCols_ = tablePartitionCols_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.tablePartitionCols_ = tablePartitionCols_;
      result.collectStat_ = collectStat_;
      result.targetPartitions_ = targetPartitions_;
      if (fileFormatTypeCase_ == 10) {
        if (csvBuilder_ == null) {
          result.fileFormatType_ = fileFormatType_;
        } else {
          result.fileFormatType_ = csvBuilder_.build();
        }
      }
      if (fileFormatTypeCase_ == 11) {
        if (parquetBuilder_ == null) {
          result.fileFormatType_ = fileFormatType_;
        } else {
          result.fileFormatType_ = parquetBuilder_.build();
        }
      }
      if (fileFormatTypeCase_ == 12) {
        if (avroBuilder_ == null) {
          result.fileFormatType_ = fileFormatType_;
        } else {
          result.fileFormatType_ = avroBuilder_.build();
        }
      }
      result.fileFormatTypeCase_ = fileFormatTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.ballistacompute.protobuf.ListingTableScanNode) {
        return mergeFrom((org.ballistacompute.protobuf.ListingTableScanNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.ballistacompute.protobuf.ListingTableScanNode other) {
      if (other == org.ballistacompute.protobuf.ListingTableScanNode.getDefaultInstance()) return this;
      if (!other.getTableName().isEmpty()) {
        tableName_ = other.tableName_;
        onChanged();
      }
      if (!other.getPath().isEmpty()) {
        path_ = other.path_;
        onChanged();
      }
      if (!other.getFileExtension().isEmpty()) {
        fileExtension_ = other.fileExtension_;
        onChanged();
      }
      if (other.hasProjection()) {
        mergeProjection(other.getProjection());
      }
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      if (filtersBuilder_ == null) {
        if (!other.filters_.isEmpty()) {
          if (filters_.isEmpty()) {
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFiltersIsMutable();
            filters_.addAll(other.filters_);
          }
          onChanged();
        }
      } else {
        if (!other.filters_.isEmpty()) {
          if (filtersBuilder_.isEmpty()) {
            filtersBuilder_.dispose();
            filtersBuilder_ = null;
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000001);
            filtersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFiltersFieldBuilder() : null;
          } else {
            filtersBuilder_.addAllMessages(other.filters_);
          }
        }
      }
      if (!other.tablePartitionCols_.isEmpty()) {
        if (tablePartitionCols_.isEmpty()) {
          tablePartitionCols_ = other.tablePartitionCols_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureTablePartitionColsIsMutable();
          tablePartitionCols_.addAll(other.tablePartitionCols_);
        }
        onChanged();
      }
      if (other.getCollectStat() != false) {
        setCollectStat(other.getCollectStat());
      }
      if (other.getTargetPartitions() != 0) {
        setTargetPartitions(other.getTargetPartitions());
      }
      switch (other.getFileFormatTypeCase()) {
        case CSV: {
          mergeCsv(other.getCsv());
          break;
        }
        case PARQUET: {
          mergeParquet(other.getParquet());
          break;
        }
        case AVRO: {
          mergeAvro(other.getAvro());
          break;
        }
        case FILEFORMATTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.ballistacompute.protobuf.ListingTableScanNode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.ballistacompute.protobuf.ListingTableScanNode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int fileFormatTypeCase_ = 0;
    private java.lang.Object fileFormatType_;
    public FileFormatTypeCase
        getFileFormatTypeCase() {
      return FileFormatTypeCase.forNumber(
          fileFormatTypeCase_);
    }

    public Builder clearFileFormatType() {
      fileFormatTypeCase_ = 0;
      fileFormatType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object tableName_ = "";
    /**
     * <code>string table_name = 1;</code>
     * @return The tableName.
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string table_name = 1;</code>
     * @return The bytes for tableName.
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string table_name = 1;</code>
     * @param value The tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tableName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string table_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTableName() {
      
      tableName_ = getDefaultInstance().getTableName();
      onChanged();
      return this;
    }
    /**
     * <code>string table_name = 1;</code>
     * @param value The bytes for tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tableName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object path_ = "";
    /**
     * <code>string path = 2;</code>
     * @return The path.
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string path = 2;</code>
     * @return The bytes for path.
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string path = 2;</code>
     * @param value The path to set.
     * @return This builder for chaining.
     */
    public Builder setPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      path_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string path = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPath() {
      
      path_ = getDefaultInstance().getPath();
      onChanged();
      return this;
    }
    /**
     * <code>string path = 2;</code>
     * @param value The bytes for path to set.
     * @return This builder for chaining.
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      path_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fileExtension_ = "";
    /**
     * <code>string file_extension = 3;</code>
     * @return The fileExtension.
     */
    public java.lang.String getFileExtension() {
      java.lang.Object ref = fileExtension_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileExtension_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string file_extension = 3;</code>
     * @return The bytes for fileExtension.
     */
    public com.google.protobuf.ByteString
        getFileExtensionBytes() {
      java.lang.Object ref = fileExtension_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileExtension_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string file_extension = 3;</code>
     * @param value The fileExtension to set.
     * @return This builder for chaining.
     */
    public Builder setFileExtension(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileExtension_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string file_extension = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileExtension() {
      
      fileExtension_ = getDefaultInstance().getFileExtension();
      onChanged();
      return this;
    }
    /**
     * <code>string file_extension = 3;</code>
     * @param value The bytes for fileExtension to set.
     * @return This builder for chaining.
     */
    public Builder setFileExtensionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileExtension_ = value;
      onChanged();
      return this;
    }

    private org.ballistacompute.protobuf.ProjectionColumns projection_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ProjectionColumns, org.ballistacompute.protobuf.ProjectionColumns.Builder, org.ballistacompute.protobuf.ProjectionColumnsOrBuilder> projectionBuilder_;
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     * @return Whether the projection field is set.
     */
    public boolean hasProjection() {
      return projectionBuilder_ != null || projection_ != null;
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     * @return The projection.
     */
    public org.ballistacompute.protobuf.ProjectionColumns getProjection() {
      if (projectionBuilder_ == null) {
        return projection_ == null ? org.ballistacompute.protobuf.ProjectionColumns.getDefaultInstance() : projection_;
      } else {
        return projectionBuilder_.getMessage();
      }
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     */
    public Builder setProjection(org.ballistacompute.protobuf.ProjectionColumns value) {
      if (projectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        projection_ = value;
        onChanged();
      } else {
        projectionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     */
    public Builder setProjection(
        org.ballistacompute.protobuf.ProjectionColumns.Builder builderForValue) {
      if (projectionBuilder_ == null) {
        projection_ = builderForValue.build();
        onChanged();
      } else {
        projectionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     */
    public Builder mergeProjection(org.ballistacompute.protobuf.ProjectionColumns value) {
      if (projectionBuilder_ == null) {
        if (projection_ != null) {
          projection_ =
            org.ballistacompute.protobuf.ProjectionColumns.newBuilder(projection_).mergeFrom(value).buildPartial();
        } else {
          projection_ = value;
        }
        onChanged();
      } else {
        projectionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     */
    public Builder clearProjection() {
      if (projectionBuilder_ == null) {
        projection_ = null;
        onChanged();
      } else {
        projection_ = null;
        projectionBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     */
    public org.ballistacompute.protobuf.ProjectionColumns.Builder getProjectionBuilder() {
      
      onChanged();
      return getProjectionFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     */
    public org.ballistacompute.protobuf.ProjectionColumnsOrBuilder getProjectionOrBuilder() {
      if (projectionBuilder_ != null) {
        return projectionBuilder_.getMessageOrBuilder();
      } else {
        return projection_ == null ?
            org.ballistacompute.protobuf.ProjectionColumns.getDefaultInstance() : projection_;
      }
    }
    /**
     * <code>.ballista.protobuf.ProjectionColumns projection = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ProjectionColumns, org.ballistacompute.protobuf.ProjectionColumns.Builder, org.ballistacompute.protobuf.ProjectionColumnsOrBuilder> 
        getProjectionFieldBuilder() {
      if (projectionBuilder_ == null) {
        projectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ProjectionColumns, org.ballistacompute.protobuf.ProjectionColumns.Builder, org.ballistacompute.protobuf.ProjectionColumnsOrBuilder>(
                getProjection(),
                getParentForChildren(),
                isClean());
        projection_ = null;
      }
      return projectionBuilder_;
    }

    private org.ballistacompute.protobuf.Schema schema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Schema, org.ballistacompute.protobuf.Schema.Builder, org.ballistacompute.protobuf.SchemaOrBuilder> schemaBuilder_;
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     * @return Whether the schema field is set.
     */
    public boolean hasSchema() {
      return schemaBuilder_ != null || schema_ != null;
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     * @return The schema.
     */
    public org.ballistacompute.protobuf.Schema getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null ? org.ballistacompute.protobuf.Schema.getDefaultInstance() : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     */
    public Builder setSchema(org.ballistacompute.protobuf.Schema value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
        onChanged();
      } else {
        schemaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     */
    public Builder setSchema(
        org.ballistacompute.protobuf.Schema.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
        onChanged();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     */
    public Builder mergeSchema(org.ballistacompute.protobuf.Schema value) {
      if (schemaBuilder_ == null) {
        if (schema_ != null) {
          schema_ =
            org.ballistacompute.protobuf.Schema.newBuilder(schema_).mergeFrom(value).buildPartial();
        } else {
          schema_ = value;
        }
        onChanged();
      } else {
        schemaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     */
    public Builder clearSchema() {
      if (schemaBuilder_ == null) {
        schema_ = null;
        onChanged();
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     */
    public org.ballistacompute.protobuf.Schema.Builder getSchemaBuilder() {
      
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     */
    public org.ballistacompute.protobuf.SchemaOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null ?
            org.ballistacompute.protobuf.Schema.getDefaultInstance() : schema_;
      }
    }
    /**
     * <code>.ballista.protobuf.Schema schema = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.Schema, org.ballistacompute.protobuf.Schema.Builder, org.ballistacompute.protobuf.SchemaOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.Schema, org.ballistacompute.protobuf.Schema.Builder, org.ballistacompute.protobuf.SchemaOrBuilder>(
                getSchema(),
                getParentForChildren(),
                isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    private java.util.List<org.ballistacompute.protobuf.LogicalExprNode> filters_ =
      java.util.Collections.emptyList();
    private void ensureFiltersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        filters_ = new java.util.ArrayList<org.ballistacompute.protobuf.LogicalExprNode>(filters_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.ballistacompute.protobuf.LogicalExprNode, org.ballistacompute.protobuf.LogicalExprNode.Builder, org.ballistacompute.protobuf.LogicalExprNodeOrBuilder> filtersBuilder_;

    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public java.util.List<org.ballistacompute.protobuf.LogicalExprNode> getFiltersList() {
      if (filtersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(filters_);
      } else {
        return filtersBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public int getFiltersCount() {
      if (filtersBuilder_ == null) {
        return filters_.size();
      } else {
        return filtersBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public org.ballistacompute.protobuf.LogicalExprNode getFilters(int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);
      } else {
        return filtersBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder setFilters(
        int index, org.ballistacompute.protobuf.LogicalExprNode value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.set(index, value);
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder setFilters(
        int index, org.ballistacompute.protobuf.LogicalExprNode.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.set(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder addFilters(org.ballistacompute.protobuf.LogicalExprNode value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder addFilters(
        int index, org.ballistacompute.protobuf.LogicalExprNode value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(index, value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder addFilters(
        org.ballistacompute.protobuf.LogicalExprNode.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder addFilters(
        int index, org.ballistacompute.protobuf.LogicalExprNode.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder addAllFilters(
        java.lang.Iterable<? extends org.ballistacompute.protobuf.LogicalExprNode> values) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, filters_);
        onChanged();
      } else {
        filtersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder clearFilters() {
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        filtersBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public Builder removeFilters(int index) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.remove(index);
        onChanged();
      } else {
        filtersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public org.ballistacompute.protobuf.LogicalExprNode.Builder getFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public org.ballistacompute.protobuf.LogicalExprNodeOrBuilder getFiltersOrBuilder(
        int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);  } else {
        return filtersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public java.util.List<? extends org.ballistacompute.protobuf.LogicalExprNodeOrBuilder> 
         getFiltersOrBuilderList() {
      if (filtersBuilder_ != null) {
        return filtersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(filters_);
      }
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public org.ballistacompute.protobuf.LogicalExprNode.Builder addFiltersBuilder() {
      return getFiltersFieldBuilder().addBuilder(
          org.ballistacompute.protobuf.LogicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public org.ballistacompute.protobuf.LogicalExprNode.Builder addFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder().addBuilder(
          index, org.ballistacompute.protobuf.LogicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .ballista.protobuf.LogicalExprNode filters = 6;</code>
     */
    public java.util.List<org.ballistacompute.protobuf.LogicalExprNode.Builder> 
         getFiltersBuilderList() {
      return getFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.ballistacompute.protobuf.LogicalExprNode, org.ballistacompute.protobuf.LogicalExprNode.Builder, org.ballistacompute.protobuf.LogicalExprNodeOrBuilder> 
        getFiltersFieldBuilder() {
      if (filtersBuilder_ == null) {
        filtersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.ballistacompute.protobuf.LogicalExprNode, org.ballistacompute.protobuf.LogicalExprNode.Builder, org.ballistacompute.protobuf.LogicalExprNodeOrBuilder>(
                filters_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        filters_ = null;
      }
      return filtersBuilder_;
    }

    private com.google.protobuf.LazyStringList tablePartitionCols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTablePartitionColsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        tablePartitionCols_ = new com.google.protobuf.LazyStringArrayList(tablePartitionCols_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @return A list containing the tablePartitionCols.
     */
    public com.google.protobuf.ProtocolStringList
        getTablePartitionColsList() {
      return tablePartitionCols_.getUnmodifiableView();
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @return The count of tablePartitionCols.
     */
    public int getTablePartitionColsCount() {
      return tablePartitionCols_.size();
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @param index The index of the element to return.
     * @return The tablePartitionCols at the given index.
     */
    public java.lang.String getTablePartitionCols(int index) {
      return tablePartitionCols_.get(index);
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tablePartitionCols at the given index.
     */
    public com.google.protobuf.ByteString
        getTablePartitionColsBytes(int index) {
      return tablePartitionCols_.getByteString(index);
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @param index The index to set the value at.
     * @param value The tablePartitionCols to set.
     * @return This builder for chaining.
     */
    public Builder setTablePartitionCols(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTablePartitionColsIsMutable();
      tablePartitionCols_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @param value The tablePartitionCols to add.
     * @return This builder for chaining.
     */
    public Builder addTablePartitionCols(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTablePartitionColsIsMutable();
      tablePartitionCols_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @param values The tablePartitionCols to add.
     * @return This builder for chaining.
     */
    public Builder addAllTablePartitionCols(
        java.lang.Iterable<java.lang.String> values) {
      ensureTablePartitionColsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, tablePartitionCols_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTablePartitionCols() {
      tablePartitionCols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string table_partition_cols = 7;</code>
     * @param value The bytes of the tablePartitionCols to add.
     * @return This builder for chaining.
     */
    public Builder addTablePartitionColsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureTablePartitionColsIsMutable();
      tablePartitionCols_.add(value);
      onChanged();
      return this;
    }

    private boolean collectStat_ ;
    /**
     * <code>bool collect_stat = 8;</code>
     * @return The collectStat.
     */
    @java.lang.Override
    public boolean getCollectStat() {
      return collectStat_;
    }
    /**
     * <code>bool collect_stat = 8;</code>
     * @param value The collectStat to set.
     * @return This builder for chaining.
     */
    public Builder setCollectStat(boolean value) {
      
      collectStat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool collect_stat = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCollectStat() {
      
      collectStat_ = false;
      onChanged();
      return this;
    }

    private int targetPartitions_ ;
    /**
     * <code>uint32 target_partitions = 9;</code>
     * @return The targetPartitions.
     */
    @java.lang.Override
    public int getTargetPartitions() {
      return targetPartitions_;
    }
    /**
     * <code>uint32 target_partitions = 9;</code>
     * @param value The targetPartitions to set.
     * @return This builder for chaining.
     */
    public Builder setTargetPartitions(int value) {
      
      targetPartitions_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 target_partitions = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTargetPartitions() {
      
      targetPartitions_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CsvFormat, org.ballistacompute.protobuf.CsvFormat.Builder, org.ballistacompute.protobuf.CsvFormatOrBuilder> csvBuilder_;
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     * @return Whether the csv field is set.
     */
    @java.lang.Override
    public boolean hasCsv() {
      return fileFormatTypeCase_ == 10;
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     * @return The csv.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CsvFormat getCsv() {
      if (csvBuilder_ == null) {
        if (fileFormatTypeCase_ == 10) {
          return (org.ballistacompute.protobuf.CsvFormat) fileFormatType_;
        }
        return org.ballistacompute.protobuf.CsvFormat.getDefaultInstance();
      } else {
        if (fileFormatTypeCase_ == 10) {
          return csvBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.CsvFormat.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     */
    public Builder setCsv(org.ballistacompute.protobuf.CsvFormat value) {
      if (csvBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fileFormatType_ = value;
        onChanged();
      } else {
        csvBuilder_.setMessage(value);
      }
      fileFormatTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     */
    public Builder setCsv(
        org.ballistacompute.protobuf.CsvFormat.Builder builderForValue) {
      if (csvBuilder_ == null) {
        fileFormatType_ = builderForValue.build();
        onChanged();
      } else {
        csvBuilder_.setMessage(builderForValue.build());
      }
      fileFormatTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     */
    public Builder mergeCsv(org.ballistacompute.protobuf.CsvFormat value) {
      if (csvBuilder_ == null) {
        if (fileFormatTypeCase_ == 10 &&
            fileFormatType_ != org.ballistacompute.protobuf.CsvFormat.getDefaultInstance()) {
          fileFormatType_ = org.ballistacompute.protobuf.CsvFormat.newBuilder((org.ballistacompute.protobuf.CsvFormat) fileFormatType_)
              .mergeFrom(value).buildPartial();
        } else {
          fileFormatType_ = value;
        }
        onChanged();
      } else {
        if (fileFormatTypeCase_ == 10) {
          csvBuilder_.mergeFrom(value);
        }
        csvBuilder_.setMessage(value);
      }
      fileFormatTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     */
    public Builder clearCsv() {
      if (csvBuilder_ == null) {
        if (fileFormatTypeCase_ == 10) {
          fileFormatTypeCase_ = 0;
          fileFormatType_ = null;
          onChanged();
        }
      } else {
        if (fileFormatTypeCase_ == 10) {
          fileFormatTypeCase_ = 0;
          fileFormatType_ = null;
        }
        csvBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     */
    public org.ballistacompute.protobuf.CsvFormat.Builder getCsvBuilder() {
      return getCsvFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.CsvFormatOrBuilder getCsvOrBuilder() {
      if ((fileFormatTypeCase_ == 10) && (csvBuilder_ != null)) {
        return csvBuilder_.getMessageOrBuilder();
      } else {
        if (fileFormatTypeCase_ == 10) {
          return (org.ballistacompute.protobuf.CsvFormat) fileFormatType_;
        }
        return org.ballistacompute.protobuf.CsvFormat.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.CsvFormat csv = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.CsvFormat, org.ballistacompute.protobuf.CsvFormat.Builder, org.ballistacompute.protobuf.CsvFormatOrBuilder> 
        getCsvFieldBuilder() {
      if (csvBuilder_ == null) {
        if (!(fileFormatTypeCase_ == 10)) {
          fileFormatType_ = org.ballistacompute.protobuf.CsvFormat.getDefaultInstance();
        }
        csvBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.CsvFormat, org.ballistacompute.protobuf.CsvFormat.Builder, org.ballistacompute.protobuf.CsvFormatOrBuilder>(
                (org.ballistacompute.protobuf.CsvFormat) fileFormatType_,
                getParentForChildren(),
                isClean());
        fileFormatType_ = null;
      }
      fileFormatTypeCase_ = 10;
      onChanged();;
      return csvBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ParquetFormat, org.ballistacompute.protobuf.ParquetFormat.Builder, org.ballistacompute.protobuf.ParquetFormatOrBuilder> parquetBuilder_;
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     * @return Whether the parquet field is set.
     */
    @java.lang.Override
    public boolean hasParquet() {
      return fileFormatTypeCase_ == 11;
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     * @return The parquet.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ParquetFormat getParquet() {
      if (parquetBuilder_ == null) {
        if (fileFormatTypeCase_ == 11) {
          return (org.ballistacompute.protobuf.ParquetFormat) fileFormatType_;
        }
        return org.ballistacompute.protobuf.ParquetFormat.getDefaultInstance();
      } else {
        if (fileFormatTypeCase_ == 11) {
          return parquetBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.ParquetFormat.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     */
    public Builder setParquet(org.ballistacompute.protobuf.ParquetFormat value) {
      if (parquetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fileFormatType_ = value;
        onChanged();
      } else {
        parquetBuilder_.setMessage(value);
      }
      fileFormatTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     */
    public Builder setParquet(
        org.ballistacompute.protobuf.ParquetFormat.Builder builderForValue) {
      if (parquetBuilder_ == null) {
        fileFormatType_ = builderForValue.build();
        onChanged();
      } else {
        parquetBuilder_.setMessage(builderForValue.build());
      }
      fileFormatTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     */
    public Builder mergeParquet(org.ballistacompute.protobuf.ParquetFormat value) {
      if (parquetBuilder_ == null) {
        if (fileFormatTypeCase_ == 11 &&
            fileFormatType_ != org.ballistacompute.protobuf.ParquetFormat.getDefaultInstance()) {
          fileFormatType_ = org.ballistacompute.protobuf.ParquetFormat.newBuilder((org.ballistacompute.protobuf.ParquetFormat) fileFormatType_)
              .mergeFrom(value).buildPartial();
        } else {
          fileFormatType_ = value;
        }
        onChanged();
      } else {
        if (fileFormatTypeCase_ == 11) {
          parquetBuilder_.mergeFrom(value);
        }
        parquetBuilder_.setMessage(value);
      }
      fileFormatTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     */
    public Builder clearParquet() {
      if (parquetBuilder_ == null) {
        if (fileFormatTypeCase_ == 11) {
          fileFormatTypeCase_ = 0;
          fileFormatType_ = null;
          onChanged();
        }
      } else {
        if (fileFormatTypeCase_ == 11) {
          fileFormatTypeCase_ = 0;
          fileFormatType_ = null;
        }
        parquetBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     */
    public org.ballistacompute.protobuf.ParquetFormat.Builder getParquetBuilder() {
      return getParquetFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.ParquetFormatOrBuilder getParquetOrBuilder() {
      if ((fileFormatTypeCase_ == 11) && (parquetBuilder_ != null)) {
        return parquetBuilder_.getMessageOrBuilder();
      } else {
        if (fileFormatTypeCase_ == 11) {
          return (org.ballistacompute.protobuf.ParquetFormat) fileFormatType_;
        }
        return org.ballistacompute.protobuf.ParquetFormat.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.ParquetFormat parquet = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.ParquetFormat, org.ballistacompute.protobuf.ParquetFormat.Builder, org.ballistacompute.protobuf.ParquetFormatOrBuilder> 
        getParquetFieldBuilder() {
      if (parquetBuilder_ == null) {
        if (!(fileFormatTypeCase_ == 11)) {
          fileFormatType_ = org.ballistacompute.protobuf.ParquetFormat.getDefaultInstance();
        }
        parquetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.ParquetFormat, org.ballistacompute.protobuf.ParquetFormat.Builder, org.ballistacompute.protobuf.ParquetFormatOrBuilder>(
                (org.ballistacompute.protobuf.ParquetFormat) fileFormatType_,
                getParentForChildren(),
                isClean());
        fileFormatType_ = null;
      }
      fileFormatTypeCase_ = 11;
      onChanged();;
      return parquetBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AvroFormat, org.ballistacompute.protobuf.AvroFormat.Builder, org.ballistacompute.protobuf.AvroFormatOrBuilder> avroBuilder_;
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     * @return Whether the avro field is set.
     */
    @java.lang.Override
    public boolean hasAvro() {
      return fileFormatTypeCase_ == 12;
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     * @return The avro.
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AvroFormat getAvro() {
      if (avroBuilder_ == null) {
        if (fileFormatTypeCase_ == 12) {
          return (org.ballistacompute.protobuf.AvroFormat) fileFormatType_;
        }
        return org.ballistacompute.protobuf.AvroFormat.getDefaultInstance();
      } else {
        if (fileFormatTypeCase_ == 12) {
          return avroBuilder_.getMessage();
        }
        return org.ballistacompute.protobuf.AvroFormat.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     */
    public Builder setAvro(org.ballistacompute.protobuf.AvroFormat value) {
      if (avroBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fileFormatType_ = value;
        onChanged();
      } else {
        avroBuilder_.setMessage(value);
      }
      fileFormatTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     */
    public Builder setAvro(
        org.ballistacompute.protobuf.AvroFormat.Builder builderForValue) {
      if (avroBuilder_ == null) {
        fileFormatType_ = builderForValue.build();
        onChanged();
      } else {
        avroBuilder_.setMessage(builderForValue.build());
      }
      fileFormatTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     */
    public Builder mergeAvro(org.ballistacompute.protobuf.AvroFormat value) {
      if (avroBuilder_ == null) {
        if (fileFormatTypeCase_ == 12 &&
            fileFormatType_ != org.ballistacompute.protobuf.AvroFormat.getDefaultInstance()) {
          fileFormatType_ = org.ballistacompute.protobuf.AvroFormat.newBuilder((org.ballistacompute.protobuf.AvroFormat) fileFormatType_)
              .mergeFrom(value).buildPartial();
        } else {
          fileFormatType_ = value;
        }
        onChanged();
      } else {
        if (fileFormatTypeCase_ == 12) {
          avroBuilder_.mergeFrom(value);
        }
        avroBuilder_.setMessage(value);
      }
      fileFormatTypeCase_ = 12;
      return this;
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     */
    public Builder clearAvro() {
      if (avroBuilder_ == null) {
        if (fileFormatTypeCase_ == 12) {
          fileFormatTypeCase_ = 0;
          fileFormatType_ = null;
          onChanged();
        }
      } else {
        if (fileFormatTypeCase_ == 12) {
          fileFormatTypeCase_ = 0;
          fileFormatType_ = null;
        }
        avroBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     */
    public org.ballistacompute.protobuf.AvroFormat.Builder getAvroBuilder() {
      return getAvroFieldBuilder().getBuilder();
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     */
    @java.lang.Override
    public org.ballistacompute.protobuf.AvroFormatOrBuilder getAvroOrBuilder() {
      if ((fileFormatTypeCase_ == 12) && (avroBuilder_ != null)) {
        return avroBuilder_.getMessageOrBuilder();
      } else {
        if (fileFormatTypeCase_ == 12) {
          return (org.ballistacompute.protobuf.AvroFormat) fileFormatType_;
        }
        return org.ballistacompute.protobuf.AvroFormat.getDefaultInstance();
      }
    }
    /**
     * <code>.ballista.protobuf.AvroFormat avro = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.ballistacompute.protobuf.AvroFormat, org.ballistacompute.protobuf.AvroFormat.Builder, org.ballistacompute.protobuf.AvroFormatOrBuilder> 
        getAvroFieldBuilder() {
      if (avroBuilder_ == null) {
        if (!(fileFormatTypeCase_ == 12)) {
          fileFormatType_ = org.ballistacompute.protobuf.AvroFormat.getDefaultInstance();
        }
        avroBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.ballistacompute.protobuf.AvroFormat, org.ballistacompute.protobuf.AvroFormat.Builder, org.ballistacompute.protobuf.AvroFormatOrBuilder>(
                (org.ballistacompute.protobuf.AvroFormat) fileFormatType_,
                getParentForChildren(),
                isClean());
        fileFormatType_ = null;
      }
      fileFormatTypeCase_ = 12;
      onChanged();;
      return avroBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ballista.protobuf.ListingTableScanNode)
  }

  // @@protoc_insertion_point(class_scope:ballista.protobuf.ListingTableScanNode)
  private static final org.ballistacompute.protobuf.ListingTableScanNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.ballistacompute.protobuf.ListingTableScanNode();
  }

  public static org.ballistacompute.protobuf.ListingTableScanNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListingTableScanNode>
      PARSER = new com.google.protobuf.AbstractParser<ListingTableScanNode>() {
    @java.lang.Override
    public ListingTableScanNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ListingTableScanNode(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ListingTableScanNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListingTableScanNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.ballistacompute.protobuf.ListingTableScanNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

