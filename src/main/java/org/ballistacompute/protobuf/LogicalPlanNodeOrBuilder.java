// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ballista.proto

package org.ballistacompute.protobuf;

public interface LogicalPlanNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ballista.protobuf.LogicalPlanNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
   * @return Whether the listingScan field is set.
   */
  boolean hasListingScan();
  /**
   * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
   * @return The listingScan.
   */
  org.ballistacompute.protobuf.ListingTableScanNode getListingScan();
  /**
   * <code>.ballista.protobuf.ListingTableScanNode listing_scan = 1;</code>
   */
  org.ballistacompute.protobuf.ListingTableScanNodeOrBuilder getListingScanOrBuilder();

  /**
   * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
   * @return Whether the projection field is set.
   */
  boolean hasProjection();
  /**
   * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
   * @return The projection.
   */
  org.ballistacompute.protobuf.ProjectionNode getProjection();
  /**
   * <code>.ballista.protobuf.ProjectionNode projection = 3;</code>
   */
  org.ballistacompute.protobuf.ProjectionNodeOrBuilder getProjectionOrBuilder();

  /**
   * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
   * @return Whether the selection field is set.
   */
  boolean hasSelection();
  /**
   * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
   * @return The selection.
   */
  org.ballistacompute.protobuf.SelectionNode getSelection();
  /**
   * <code>.ballista.protobuf.SelectionNode selection = 4;</code>
   */
  org.ballistacompute.protobuf.SelectionNodeOrBuilder getSelectionOrBuilder();

  /**
   * <code>.ballista.protobuf.LimitNode limit = 5;</code>
   * @return Whether the limit field is set.
   */
  boolean hasLimit();
  /**
   * <code>.ballista.protobuf.LimitNode limit = 5;</code>
   * @return The limit.
   */
  org.ballistacompute.protobuf.LimitNode getLimit();
  /**
   * <code>.ballista.protobuf.LimitNode limit = 5;</code>
   */
  org.ballistacompute.protobuf.LimitNodeOrBuilder getLimitOrBuilder();

  /**
   * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
   * @return Whether the aggregate field is set.
   */
  boolean hasAggregate();
  /**
   * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
   * @return The aggregate.
   */
  org.ballistacompute.protobuf.AggregateNode getAggregate();
  /**
   * <code>.ballista.protobuf.AggregateNode aggregate = 6;</code>
   */
  org.ballistacompute.protobuf.AggregateNodeOrBuilder getAggregateOrBuilder();

  /**
   * <code>.ballista.protobuf.JoinNode join = 7;</code>
   * @return Whether the join field is set.
   */
  boolean hasJoin();
  /**
   * <code>.ballista.protobuf.JoinNode join = 7;</code>
   * @return The join.
   */
  org.ballistacompute.protobuf.JoinNode getJoin();
  /**
   * <code>.ballista.protobuf.JoinNode join = 7;</code>
   */
  org.ballistacompute.protobuf.JoinNodeOrBuilder getJoinOrBuilder();

  /**
   * <code>.ballista.protobuf.SortNode sort = 8;</code>
   * @return Whether the sort field is set.
   */
  boolean hasSort();
  /**
   * <code>.ballista.protobuf.SortNode sort = 8;</code>
   * @return The sort.
   */
  org.ballistacompute.protobuf.SortNode getSort();
  /**
   * <code>.ballista.protobuf.SortNode sort = 8;</code>
   */
  org.ballistacompute.protobuf.SortNodeOrBuilder getSortOrBuilder();

  /**
   * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
   * @return Whether the repartition field is set.
   */
  boolean hasRepartition();
  /**
   * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
   * @return The repartition.
   */
  org.ballistacompute.protobuf.RepartitionNode getRepartition();
  /**
   * <code>.ballista.protobuf.RepartitionNode repartition = 9;</code>
   */
  org.ballistacompute.protobuf.RepartitionNodeOrBuilder getRepartitionOrBuilder();

  /**
   * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
   * @return Whether the emptyRelation field is set.
   */
  boolean hasEmptyRelation();
  /**
   * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
   * @return The emptyRelation.
   */
  org.ballistacompute.protobuf.EmptyRelationNode getEmptyRelation();
  /**
   * <code>.ballista.protobuf.EmptyRelationNode empty_relation = 10;</code>
   */
  org.ballistacompute.protobuf.EmptyRelationNodeOrBuilder getEmptyRelationOrBuilder();

  /**
   * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
   * @return Whether the createExternalTable field is set.
   */
  boolean hasCreateExternalTable();
  /**
   * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
   * @return The createExternalTable.
   */
  org.ballistacompute.protobuf.CreateExternalTableNode getCreateExternalTable();
  /**
   * <code>.ballista.protobuf.CreateExternalTableNode create_external_table = 11;</code>
   */
  org.ballistacompute.protobuf.CreateExternalTableNodeOrBuilder getCreateExternalTableOrBuilder();

  /**
   * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
   * @return Whether the explain field is set.
   */
  boolean hasExplain();
  /**
   * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
   * @return The explain.
   */
  org.ballistacompute.protobuf.ExplainNode getExplain();
  /**
   * <code>.ballista.protobuf.ExplainNode explain = 12;</code>
   */
  org.ballistacompute.protobuf.ExplainNodeOrBuilder getExplainOrBuilder();

  /**
   * <code>.ballista.protobuf.WindowNode window = 13;</code>
   * @return Whether the window field is set.
   */
  boolean hasWindow();
  /**
   * <code>.ballista.protobuf.WindowNode window = 13;</code>
   * @return The window.
   */
  org.ballistacompute.protobuf.WindowNode getWindow();
  /**
   * <code>.ballista.protobuf.WindowNode window = 13;</code>
   */
  org.ballistacompute.protobuf.WindowNodeOrBuilder getWindowOrBuilder();

  /**
   * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
   * @return Whether the analyze field is set.
   */
  boolean hasAnalyze();
  /**
   * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
   * @return The analyze.
   */
  org.ballistacompute.protobuf.AnalyzeNode getAnalyze();
  /**
   * <code>.ballista.protobuf.AnalyzeNode analyze = 14;</code>
   */
  org.ballistacompute.protobuf.AnalyzeNodeOrBuilder getAnalyzeOrBuilder();

  /**
   * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
   * @return Whether the crossJoin field is set.
   */
  boolean hasCrossJoin();
  /**
   * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
   * @return The crossJoin.
   */
  org.ballistacompute.protobuf.CrossJoinNode getCrossJoin();
  /**
   * <code>.ballista.protobuf.CrossJoinNode cross_join = 15;</code>
   */
  org.ballistacompute.protobuf.CrossJoinNodeOrBuilder getCrossJoinOrBuilder();

  /**
   * <code>.ballista.protobuf.ValuesNode values = 16;</code>
   * @return Whether the values field is set.
   */
  boolean hasValues();
  /**
   * <code>.ballista.protobuf.ValuesNode values = 16;</code>
   * @return The values.
   */
  org.ballistacompute.protobuf.ValuesNode getValues();
  /**
   * <code>.ballista.protobuf.ValuesNode values = 16;</code>
   */
  org.ballistacompute.protobuf.ValuesNodeOrBuilder getValuesOrBuilder();

  public org.ballistacompute.protobuf.LogicalPlanNode.LogicalPlanTypeCase getLogicalPlanTypeCase();
}
