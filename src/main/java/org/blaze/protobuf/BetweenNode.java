// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/plan.proto

package org.blaze.protobuf;

/**
 * Protobuf type {@code plan.protobuf.BetweenNode}
 */
public final class BetweenNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:plan.protobuf.BetweenNode)
    BetweenNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BetweenNode.newBuilder() to construct.
  private BetweenNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BetweenNode() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BetweenNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BetweenNode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.blaze.protobuf.LogicalExprNode.Builder subBuilder = null;
            if (expr_ != null) {
              subBuilder = expr_.toBuilder();
            }
            expr_ = input.readMessage(org.blaze.protobuf.LogicalExprNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expr_);
              expr_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            negated_ = input.readBool();
            break;
          }
          case 26: {
            org.blaze.protobuf.LogicalExprNode.Builder subBuilder = null;
            if (low_ != null) {
              subBuilder = low_.toBuilder();
            }
            low_ = input.readMessage(org.blaze.protobuf.LogicalExprNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(low_);
              low_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            org.blaze.protobuf.LogicalExprNode.Builder subBuilder = null;
            if (high_ != null) {
              subBuilder = high_.toBuilder();
            }
            high_ = input.readMessage(org.blaze.protobuf.LogicalExprNode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(high_);
              high_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_BetweenNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_BetweenNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.blaze.protobuf.BetweenNode.class, org.blaze.protobuf.BetweenNode.Builder.class);
  }

  public static final int EXPR_FIELD_NUMBER = 1;
  private org.blaze.protobuf.LogicalExprNode expr_;
  /**
   * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
   * @return Whether the expr field is set.
   */
  @java.lang.Override
  public boolean hasExpr() {
    return expr_ != null;
  }
  /**
   * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
   * @return The expr.
   */
  @java.lang.Override
  public org.blaze.protobuf.LogicalExprNode getExpr() {
    return expr_ == null ? org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : expr_;
  }
  /**
   * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.LogicalExprNodeOrBuilder getExprOrBuilder() {
    return getExpr();
  }

  public static final int NEGATED_FIELD_NUMBER = 2;
  private boolean negated_;
  /**
   * <code>bool negated = 2;</code>
   * @return The negated.
   */
  @java.lang.Override
  public boolean getNegated() {
    return negated_;
  }

  public static final int LOW_FIELD_NUMBER = 3;
  private org.blaze.protobuf.LogicalExprNode low_;
  /**
   * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
   * @return Whether the low field is set.
   */
  @java.lang.Override
  public boolean hasLow() {
    return low_ != null;
  }
  /**
   * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
   * @return The low.
   */
  @java.lang.Override
  public org.blaze.protobuf.LogicalExprNode getLow() {
    return low_ == null ? org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : low_;
  }
  /**
   * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.LogicalExprNodeOrBuilder getLowOrBuilder() {
    return getLow();
  }

  public static final int HIGH_FIELD_NUMBER = 4;
  private org.blaze.protobuf.LogicalExprNode high_;
  /**
   * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
   * @return Whether the high field is set.
   */
  @java.lang.Override
  public boolean hasHigh() {
    return high_ != null;
  }
  /**
   * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
   * @return The high.
   */
  @java.lang.Override
  public org.blaze.protobuf.LogicalExprNode getHigh() {
    return high_ == null ? org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : high_;
  }
  /**
   * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.LogicalExprNodeOrBuilder getHighOrBuilder() {
    return getHigh();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (expr_ != null) {
      output.writeMessage(1, getExpr());
    }
    if (negated_ != false) {
      output.writeBool(2, negated_);
    }
    if (low_ != null) {
      output.writeMessage(3, getLow());
    }
    if (high_ != null) {
      output.writeMessage(4, getHigh());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (expr_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getExpr());
    }
    if (negated_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, negated_);
    }
    if (low_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getLow());
    }
    if (high_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getHigh());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.blaze.protobuf.BetweenNode)) {
      return super.equals(obj);
    }
    org.blaze.protobuf.BetweenNode other = (org.blaze.protobuf.BetweenNode) obj;

    if (hasExpr() != other.hasExpr()) return false;
    if (hasExpr()) {
      if (!getExpr()
          .equals(other.getExpr())) return false;
    }
    if (getNegated()
        != other.getNegated()) return false;
    if (hasLow() != other.hasLow()) return false;
    if (hasLow()) {
      if (!getLow()
          .equals(other.getLow())) return false;
    }
    if (hasHigh() != other.hasHigh()) return false;
    if (hasHigh()) {
      if (!getHigh()
          .equals(other.getHigh())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasExpr()) {
      hash = (37 * hash) + EXPR_FIELD_NUMBER;
      hash = (53 * hash) + getExpr().hashCode();
    }
    hash = (37 * hash) + NEGATED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNegated());
    if (hasLow()) {
      hash = (37 * hash) + LOW_FIELD_NUMBER;
      hash = (53 * hash) + getLow().hashCode();
    }
    if (hasHigh()) {
      hash = (37 * hash) + HIGH_FIELD_NUMBER;
      hash = (53 * hash) + getHigh().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.blaze.protobuf.BetweenNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.BetweenNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.BetweenNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.BetweenNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.blaze.protobuf.BetweenNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code plan.protobuf.BetweenNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:plan.protobuf.BetweenNode)
      org.blaze.protobuf.BetweenNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_BetweenNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_BetweenNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.blaze.protobuf.BetweenNode.class, org.blaze.protobuf.BetweenNode.Builder.class);
    }

    // Construct using org.blaze.protobuf.BetweenNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (exprBuilder_ == null) {
        expr_ = null;
      } else {
        expr_ = null;
        exprBuilder_ = null;
      }
      negated_ = false;

      if (lowBuilder_ == null) {
        low_ = null;
      } else {
        low_ = null;
        lowBuilder_ = null;
      }
      if (highBuilder_ == null) {
        high_ = null;
      } else {
        high_ = null;
        highBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_BetweenNode_descriptor;
    }

    @java.lang.Override
    public org.blaze.protobuf.BetweenNode getDefaultInstanceForType() {
      return org.blaze.protobuf.BetweenNode.getDefaultInstance();
    }

    @java.lang.Override
    public org.blaze.protobuf.BetweenNode build() {
      org.blaze.protobuf.BetweenNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.blaze.protobuf.BetweenNode buildPartial() {
      org.blaze.protobuf.BetweenNode result = new org.blaze.protobuf.BetweenNode(this);
      if (exprBuilder_ == null) {
        result.expr_ = expr_;
      } else {
        result.expr_ = exprBuilder_.build();
      }
      result.negated_ = negated_;
      if (lowBuilder_ == null) {
        result.low_ = low_;
      } else {
        result.low_ = lowBuilder_.build();
      }
      if (highBuilder_ == null) {
        result.high_ = high_;
      } else {
        result.high_ = highBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.blaze.protobuf.BetweenNode) {
        return mergeFrom((org.blaze.protobuf.BetweenNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.blaze.protobuf.BetweenNode other) {
      if (other == org.blaze.protobuf.BetweenNode.getDefaultInstance()) return this;
      if (other.hasExpr()) {
        mergeExpr(other.getExpr());
      }
      if (other.getNegated() != false) {
        setNegated(other.getNegated());
      }
      if (other.hasLow()) {
        mergeLow(other.getLow());
      }
      if (other.hasHigh()) {
        mergeHigh(other.getHigh());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.blaze.protobuf.BetweenNode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.blaze.protobuf.BetweenNode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private org.blaze.protobuf.LogicalExprNode expr_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder> exprBuilder_;
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     * @return Whether the expr field is set.
     */
    public boolean hasExpr() {
      return exprBuilder_ != null || expr_ != null;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     * @return The expr.
     */
    public org.blaze.protobuf.LogicalExprNode getExpr() {
      if (exprBuilder_ == null) {
        return expr_ == null ? org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : expr_;
      } else {
        return exprBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     */
    public Builder setExpr(org.blaze.protobuf.LogicalExprNode value) {
      if (exprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expr_ = value;
        onChanged();
      } else {
        exprBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     */
    public Builder setExpr(
        org.blaze.protobuf.LogicalExprNode.Builder builderForValue) {
      if (exprBuilder_ == null) {
        expr_ = builderForValue.build();
        onChanged();
      } else {
        exprBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     */
    public Builder mergeExpr(org.blaze.protobuf.LogicalExprNode value) {
      if (exprBuilder_ == null) {
        if (expr_ != null) {
          expr_ =
            org.blaze.protobuf.LogicalExprNode.newBuilder(expr_).mergeFrom(value).buildPartial();
        } else {
          expr_ = value;
        }
        onChanged();
      } else {
        exprBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     */
    public Builder clearExpr() {
      if (exprBuilder_ == null) {
        expr_ = null;
        onChanged();
      } else {
        expr_ = null;
        exprBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     */
    public org.blaze.protobuf.LogicalExprNode.Builder getExprBuilder() {
      
      onChanged();
      return getExprFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     */
    public org.blaze.protobuf.LogicalExprNodeOrBuilder getExprOrBuilder() {
      if (exprBuilder_ != null) {
        return exprBuilder_.getMessageOrBuilder();
      } else {
        return expr_ == null ?
            org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : expr_;
      }
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode expr = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder> 
        getExprFieldBuilder() {
      if (exprBuilder_ == null) {
        exprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder>(
                getExpr(),
                getParentForChildren(),
                isClean());
        expr_ = null;
      }
      return exprBuilder_;
    }

    private boolean negated_ ;
    /**
     * <code>bool negated = 2;</code>
     * @return The negated.
     */
    @java.lang.Override
    public boolean getNegated() {
      return negated_;
    }
    /**
     * <code>bool negated = 2;</code>
     * @param value The negated to set.
     * @return This builder for chaining.
     */
    public Builder setNegated(boolean value) {
      
      negated_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool negated = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNegated() {
      
      negated_ = false;
      onChanged();
      return this;
    }

    private org.blaze.protobuf.LogicalExprNode low_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder> lowBuilder_;
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     * @return Whether the low field is set.
     */
    public boolean hasLow() {
      return lowBuilder_ != null || low_ != null;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     * @return The low.
     */
    public org.blaze.protobuf.LogicalExprNode getLow() {
      if (lowBuilder_ == null) {
        return low_ == null ? org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : low_;
      } else {
        return lowBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     */
    public Builder setLow(org.blaze.protobuf.LogicalExprNode value) {
      if (lowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        low_ = value;
        onChanged();
      } else {
        lowBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     */
    public Builder setLow(
        org.blaze.protobuf.LogicalExprNode.Builder builderForValue) {
      if (lowBuilder_ == null) {
        low_ = builderForValue.build();
        onChanged();
      } else {
        lowBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     */
    public Builder mergeLow(org.blaze.protobuf.LogicalExprNode value) {
      if (lowBuilder_ == null) {
        if (low_ != null) {
          low_ =
            org.blaze.protobuf.LogicalExprNode.newBuilder(low_).mergeFrom(value).buildPartial();
        } else {
          low_ = value;
        }
        onChanged();
      } else {
        lowBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     */
    public Builder clearLow() {
      if (lowBuilder_ == null) {
        low_ = null;
        onChanged();
      } else {
        low_ = null;
        lowBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     */
    public org.blaze.protobuf.LogicalExprNode.Builder getLowBuilder() {
      
      onChanged();
      return getLowFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     */
    public org.blaze.protobuf.LogicalExprNodeOrBuilder getLowOrBuilder() {
      if (lowBuilder_ != null) {
        return lowBuilder_.getMessageOrBuilder();
      } else {
        return low_ == null ?
            org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : low_;
      }
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode low = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder> 
        getLowFieldBuilder() {
      if (lowBuilder_ == null) {
        lowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder>(
                getLow(),
                getParentForChildren(),
                isClean());
        low_ = null;
      }
      return lowBuilder_;
    }

    private org.blaze.protobuf.LogicalExprNode high_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder> highBuilder_;
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     * @return Whether the high field is set.
     */
    public boolean hasHigh() {
      return highBuilder_ != null || high_ != null;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     * @return The high.
     */
    public org.blaze.protobuf.LogicalExprNode getHigh() {
      if (highBuilder_ == null) {
        return high_ == null ? org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : high_;
      } else {
        return highBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     */
    public Builder setHigh(org.blaze.protobuf.LogicalExprNode value) {
      if (highBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        high_ = value;
        onChanged();
      } else {
        highBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     */
    public Builder setHigh(
        org.blaze.protobuf.LogicalExprNode.Builder builderForValue) {
      if (highBuilder_ == null) {
        high_ = builderForValue.build();
        onChanged();
      } else {
        highBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     */
    public Builder mergeHigh(org.blaze.protobuf.LogicalExprNode value) {
      if (highBuilder_ == null) {
        if (high_ != null) {
          high_ =
            org.blaze.protobuf.LogicalExprNode.newBuilder(high_).mergeFrom(value).buildPartial();
        } else {
          high_ = value;
        }
        onChanged();
      } else {
        highBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     */
    public Builder clearHigh() {
      if (highBuilder_ == null) {
        high_ = null;
        onChanged();
      } else {
        high_ = null;
        highBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     */
    public org.blaze.protobuf.LogicalExprNode.Builder getHighBuilder() {
      
      onChanged();
      return getHighFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     */
    public org.blaze.protobuf.LogicalExprNodeOrBuilder getHighOrBuilder() {
      if (highBuilder_ != null) {
        return highBuilder_.getMessageOrBuilder();
      } else {
        return high_ == null ?
            org.blaze.protobuf.LogicalExprNode.getDefaultInstance() : high_;
      }
    }
    /**
     * <code>.plan.protobuf.LogicalExprNode high = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder> 
        getHighFieldBuilder() {
      if (highBuilder_ == null) {
        highBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.LogicalExprNode, org.blaze.protobuf.LogicalExprNode.Builder, org.blaze.protobuf.LogicalExprNodeOrBuilder>(
                getHigh(),
                getParentForChildren(),
                isClean());
        high_ = null;
      }
      return highBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:plan.protobuf.BetweenNode)
  }

  // @@protoc_insertion_point(class_scope:plan.protobuf.BetweenNode)
  private static final org.blaze.protobuf.BetweenNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.blaze.protobuf.BetweenNode();
  }

  public static org.blaze.protobuf.BetweenNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BetweenNode>
      PARSER = new com.google.protobuf.AbstractParser<BetweenNode>() {
    @java.lang.Override
    public BetweenNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BetweenNode(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BetweenNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BetweenNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.blaze.protobuf.BetweenNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

